
package org.mule.modules.quickbooks.online.config;

import javax.annotation.Generated;
import com.intuit.ipp.data.holders.AccountBasedExpenseLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.AttachableRefExpressionHolder;
import com.intuit.ipp.data.holders.CheckPaymentExpressionHolder;
import com.intuit.ipp.data.holders.CreditCardPaymentExpressionHolder;
import com.intuit.ipp.data.holders.CreditChargeInfoExpressionHolder;
import com.intuit.ipp.data.holders.CreditChargeResponseExpressionHolder;
import com.intuit.ipp.data.holders.CustomFieldExpressionHolder;
import com.intuit.ipp.data.holders.DepositLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.DescriptionLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.DiscountLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.DiscountOverrideExpressionHolder;
import com.intuit.ipp.data.holders.EntityTypeRefExpressionHolder;
import com.intuit.ipp.data.holders.GroupLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.IntuitAnyTypeExpressionHolder;
import com.intuit.ipp.data.holders.ItemBasedExpenseLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.ItemReceiptLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.JournalEntryLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.LineExpressionHolder;
import com.intuit.ipp.data.holders.LinkedTxnExpressionHolder;
import com.intuit.ipp.data.holders.MarkupInfoExpressionHolder;
import com.intuit.ipp.data.holders.ModificationMetaDataExpressionHolder;
import com.intuit.ipp.data.holders.PaymentLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.PhysicalAddressExpressionHolder;
import com.intuit.ipp.data.holders.PurchaseExpressionHolder;
import com.intuit.ipp.data.holders.PurchaseOrderItemLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.ReferenceTypeExpressionHolder;
import com.intuit.ipp.data.holders.SalesItemLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.SalesOrderItemLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.SubTotalLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.TaxLineDetailExpressionHolder;
import com.intuit.ipp.data.holders.TxnTaxDetailExpressionHolder;
import com.intuit.ipp.data.holders.UOMRefExpressionHolder;
import org.mule.modules.quickbooks.online.config.AbstractDefinitionParser.ParseDelegate;
import org.mule.modules.quickbooks.online.config.AbstractDefinitionParser.ParseDelegate;
import org.mule.modules.quickbooks.online.processors.UpdatePurchaseMessageProcessor;
import org.springframework.beans.factory.config.BeanDefinition;
import org.springframework.beans.factory.support.BeanDefinitionBuilder;
import org.springframework.beans.factory.xml.ParserContext;
import org.springframework.util.xml.DomUtils;
import org.w3c.dom.Element;

@Generated(value = "Mule DevKit Version 3.4.3", date = "2014-08-21T02:54:07-05:00", comments = "Build 3.4.3.1620.30ea288")
public class UpdatePurchaseDefinitionParser
    extends AbstractDefinitionParser
{


    public BeanDefinition parse(Element element, ParserContext parserContext) {
        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(UpdatePurchaseMessageProcessor.class.getName());
        builder.setScope(BeanDefinition.SCOPE_PROTOTYPE);
        parseConfigRef(element, builder);
        parseProperty(builder, element, "accessTokenId", "accessTokenId");
        if (!parseObjectRefWithDefault(element, builder, "purchase", "purchase", "#[payload]")) {
            BeanDefinitionBuilder purchaseBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseExpressionHolder.class.getName());
            Element purchaseChildElement = DomUtils.getChildElementByTagName(element, "purchase");
            if (purchaseChildElement!= null) {
                parseProperty(purchaseBuilder, purchaseChildElement, "serialVersionUID", "serialVersionUID");
                parseProperty(purchaseBuilder, purchaseChildElement, "docNumber", "docNumber");
                parseProperty(purchaseBuilder, purchaseChildElement, "txnDate", "txnDate");
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "department-ref", "departmentRef")) {
                    BeanDefinitionBuilder __departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                    Element __departmentRefChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "department-ref");
                    if (__departmentRefChildElement!= null) {
                        parseProperty(__departmentRefBuilder, __departmentRefChildElement, "value", "value");
                        parseProperty(__departmentRefBuilder, __departmentRefChildElement, "name", "name");
                        parseProperty(__departmentRefBuilder, __departmentRefChildElement, "type", "type");
                        purchaseBuilder.addPropertyValue("departmentRef", __departmentRefBuilder.getBeanDefinition());
                    }
                }
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "currency-ref", "currencyRef")) {
                    BeanDefinitionBuilder __currencyRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                    Element __currencyRefChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "currency-ref");
                    if (__currencyRefChildElement!= null) {
                        parseProperty(__currencyRefBuilder, __currencyRefChildElement, "value", "value");
                        parseProperty(__currencyRefBuilder, __currencyRefChildElement, "name", "name");
                        parseProperty(__currencyRefBuilder, __currencyRefChildElement, "type", "type");
                        purchaseBuilder.addPropertyValue("currencyRef", __currencyRefBuilder.getBeanDefinition());
                    }
                }
                parseProperty(purchaseBuilder, purchaseChildElement, "exchangeRate", "exchangeRate");
                parseProperty(purchaseBuilder, purchaseChildElement, "privateNote", "privateNote");
                parseProperty(purchaseBuilder, purchaseChildElement, "txnStatus", "txnStatus");
                parseListAndSetProperty(purchaseChildElement, purchaseBuilder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                    public BeanDefinition parse(Element element) {
                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                        parseProperty(builder, element, "txnId", "txnId");
                        parseProperty(builder, element, "txnType", "txnType");
                        parseProperty(builder, element, "txnLineId", "txnLineId");
                        return builder.getBeanDefinition();
                    }

                }
                );
                parseListAndSetProperty(purchaseChildElement, purchaseBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                    public BeanDefinition parse(Element element) {
                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                        parseProperty(builder, element, "id", "id");
                        parseProperty(builder, element, "lineNum", "lineNum");
                        parseProperty(builder, element, "description", "description");
                        parseProperty(builder, element, "amount", "amount");
                        parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                            public BeanDefinition parse(Element element) {
                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                parseProperty(builder, element, "txnId", "txnId");
                                parseProperty(builder, element, "txnType", "txnType");
                                parseProperty(builder, element, "txnLineId", "txnLineId");
                                return builder.getBeanDefinition();
                            }

                        }
                        );
                        parseProperty(builder, element, "detailType", "detailType");
                        if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                            BeanDefinitionBuilder ___paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                            Element ___paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                            if (___paymentLineDetailChildElement!= null) {
                                if (!parseObjectRef(___paymentLineDetailChildElement, ___paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                    BeanDefinitionBuilder ____itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____itemRefChildElement = DomUtils.getChildElementByTagName(___paymentLineDetailChildElement, "item-ref");
                                    if (____itemRefChildElement!= null) {
                                        parseProperty(____itemRefBuilder, ____itemRefChildElement, "value", "value");
                                        parseProperty(____itemRefBuilder, ____itemRefChildElement, "name", "name");
                                        parseProperty(____itemRefBuilder, ____itemRefChildElement, "type", "type");
                                        ___paymentLineDetailBuilder.addPropertyValue("itemRef", ____itemRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___paymentLineDetailBuilder, ___paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                if (!parseObjectRef(___paymentLineDetailChildElement, ___paymentLineDetailBuilder, "class-ref", "classRef")) {
                                    BeanDefinitionBuilder ____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____classRefChildElement = DomUtils.getChildElementByTagName(___paymentLineDetailChildElement, "class-ref");
                                    if (____classRefChildElement!= null) {
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "value", "value");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "name", "name");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "type", "type");
                                        ___paymentLineDetailBuilder.addPropertyValue("classRef", ____classRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___paymentLineDetailBuilder, ___paymentLineDetailChildElement, "balance", "balance");
                                if (!parseObjectRef(___paymentLineDetailChildElement, ___paymentLineDetailBuilder, "discount", "discount")) {
                                    BeanDefinitionBuilder ____discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                    Element ____discountChildElement = DomUtils.getChildElementByTagName(___paymentLineDetailChildElement, "discount");
                                    if (____discountChildElement!= null) {
                                        if (!parseObjectRef(____discountChildElement, ____discountBuilder, "discount-ref", "discountRef")) {
                                            BeanDefinitionBuilder _____discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____discountRefChildElement = DomUtils.getChildElementByTagName(____discountChildElement, "discount-ref");
                                            if (_____discountRefChildElement!= null) {
                                                parseProperty(_____discountRefBuilder, _____discountRefChildElement, "value", "value");
                                                parseProperty(_____discountRefBuilder, _____discountRefChildElement, "name", "name");
                                                parseProperty(_____discountRefBuilder, _____discountRefChildElement, "type", "type");
                                                ____discountBuilder.addPropertyValue("discountRef", _____discountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____discountBuilder, ____discountChildElement, "percentBased", "percentBased");
                                        parseProperty(____discountBuilder, ____discountChildElement, "discountPercent", "discountPercent");
                                        if (!parseObjectRef(____discountChildElement, ____discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                            BeanDefinitionBuilder _____discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____discountAccountRefChildElement = DomUtils.getChildElementByTagName(____discountChildElement, "discount-account-ref");
                                            if (_____discountAccountRefChildElement!= null) {
                                                parseProperty(_____discountAccountRefBuilder, _____discountAccountRefChildElement, "value", "value");
                                                parseProperty(_____discountAccountRefBuilder, _____discountAccountRefChildElement, "name", "name");
                                                parseProperty(_____discountAccountRefBuilder, _____discountAccountRefChildElement, "type", "type");
                                                ____discountBuilder.addPropertyValue("discountAccountRef", _____discountAccountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        ___paymentLineDetailBuilder.addPropertyValue("discount", ____discountBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___paymentLineDetailChildElement, ___paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                    BeanDefinitionBuilder ____paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____paymentLineExChildElement = DomUtils.getChildElementByTagName(___paymentLineDetailChildElement, "payment-line-ex");
                                    if (____paymentLineExChildElement!= null) {
                                        parseListAndSetProperty(____paymentLineExChildElement, ____paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___paymentLineDetailBuilder.addPropertyValue("paymentLineEx", ____paymentLineExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("paymentLineDetail", ___paymentLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                            BeanDefinitionBuilder ___discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                            Element ___discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                            if (___discountLineDetailChildElement!= null) {
                                parseProperty(___discountLineDetailBuilder, ___discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                if (!parseObjectRef(___discountLineDetailChildElement, ___discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                    BeanDefinitionBuilder _____discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____discountRefChildElement = DomUtils.getChildElementByTagName(___discountLineDetailChildElement, "discount-ref");
                                    if (_____discountRefChildElement!= null) {
                                        parseProperty(_____discountRefBuilder, _____discountRefChildElement, "value", "value");
                                        parseProperty(_____discountRefBuilder, _____discountRefChildElement, "name", "name");
                                        parseProperty(_____discountRefBuilder, _____discountRefChildElement, "type", "type");
                                        ___discountLineDetailBuilder.addPropertyValue("discountRef", _____discountRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___discountLineDetailBuilder, ___discountLineDetailChildElement, "percentBased", "percentBased");
                                parseProperty(___discountLineDetailBuilder, ___discountLineDetailChildElement, "discountPercent", "discountPercent");
                                if (!parseObjectRef(___discountLineDetailChildElement, ___discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                    BeanDefinitionBuilder _____discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____discountAccountRefChildElement = DomUtils.getChildElementByTagName(___discountLineDetailChildElement, "discount-account-ref");
                                    if (_____discountAccountRefChildElement!= null) {
                                        parseProperty(_____discountAccountRefBuilder, _____discountAccountRefChildElement, "value", "value");
                                        parseProperty(_____discountAccountRefBuilder, _____discountAccountRefChildElement, "name", "name");
                                        parseProperty(_____discountAccountRefBuilder, _____discountAccountRefChildElement, "type", "type");
                                        ___discountLineDetailBuilder.addPropertyValue("discountAccountRef", _____discountAccountRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___discountLineDetailBuilder, ___discountLineDetailChildElement, "serviceDate", "serviceDate");
                                if (!parseObjectRef(___discountLineDetailChildElement, ___discountLineDetailBuilder, "class-ref", "classRef")) {
                                    BeanDefinitionBuilder ____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____classRefChildElement = DomUtils.getChildElementByTagName(___discountLineDetailChildElement, "class-ref");
                                    if (____classRefChildElement!= null) {
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "value", "value");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "name", "name");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "type", "type");
                                        ___discountLineDetailBuilder.addPropertyValue("classRef", ____classRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___discountLineDetailChildElement, ___discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                    BeanDefinitionBuilder ____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____taxCodeRefChildElement = DomUtils.getChildElementByTagName(___discountLineDetailChildElement, "tax-code-ref");
                                    if (____taxCodeRefChildElement!= null) {
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "value", "value");
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "name", "name");
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "type", "type");
                                        ___discountLineDetailBuilder.addPropertyValue("taxCodeRef", ____taxCodeRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___discountLineDetailChildElement, ___discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                    BeanDefinitionBuilder ____discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____discountLineDetailExChildElement = DomUtils.getChildElementByTagName(___discountLineDetailChildElement, "discount-line-detail-ex");
                                    if (____discountLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____discountLineDetailExChildElement, ____discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", ____discountLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("discountLineDetail", ___discountLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                            BeanDefinitionBuilder ___taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                            Element ___taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                            if (___taxLineDetailChildElement!= null) {
                                if (!parseObjectRef(___taxLineDetailChildElement, ___taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                    BeanDefinitionBuilder ____taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____taxRateRefChildElement = DomUtils.getChildElementByTagName(___taxLineDetailChildElement, "tax-rate-ref");
                                    if (____taxRateRefChildElement!= null) {
                                        parseProperty(____taxRateRefBuilder, ____taxRateRefChildElement, "value", "value");
                                        parseProperty(____taxRateRefBuilder, ____taxRateRefChildElement, "name", "name");
                                        parseProperty(____taxRateRefBuilder, ____taxRateRefChildElement, "type", "type");
                                        ___taxLineDetailBuilder.addPropertyValue("taxRateRef", ____taxRateRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___taxLineDetailBuilder, ___taxLineDetailChildElement, "percentBased", "percentBased");
                                parseProperty(___taxLineDetailBuilder, ___taxLineDetailChildElement, "taxPercent", "taxPercent");
                                parseProperty(___taxLineDetailBuilder, ___taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                parseProperty(___taxLineDetailBuilder, ___taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                parseProperty(___taxLineDetailBuilder, ___taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                parseProperty(___taxLineDetailBuilder, ___taxLineDetailChildElement, "serviceDate", "serviceDate");
                                if (!parseObjectRef(___taxLineDetailChildElement, ___taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                    BeanDefinitionBuilder ____taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____taxLineDetailExChildElement = DomUtils.getChildElementByTagName(___taxLineDetailChildElement, "tax-line-detail-ex");
                                    if (____taxLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____taxLineDetailExChildElement, ____taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", ____taxLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("taxLineDetail", ___taxLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                            BeanDefinitionBuilder ___salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                            Element ___salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                            if (___salesItemLineDetailChildElement!= null) {
                                parseProperty(___salesItemLineDetailBuilder, ___salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                if (!parseObjectRef(___salesItemLineDetailChildElement, ___salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                    BeanDefinitionBuilder _____itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____itemRefChildElement = DomUtils.getChildElementByTagName(___salesItemLineDetailChildElement, "item-ref");
                                    if (_____itemRefChildElement!= null) {
                                        parseProperty(_____itemRefBuilder, _____itemRefChildElement, "value", "value");
                                        parseProperty(_____itemRefBuilder, _____itemRefChildElement, "name", "name");
                                        parseProperty(_____itemRefBuilder, _____itemRefChildElement, "type", "type");
                                        ___salesItemLineDetailBuilder.addPropertyValue("itemRef", _____itemRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesItemLineDetailChildElement, ___salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                    BeanDefinitionBuilder _____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____classRefChildElement = DomUtils.getChildElementByTagName(___salesItemLineDetailChildElement, "class-ref");
                                    if (_____classRefChildElement!= null) {
                                        parseProperty(_____classRefBuilder, _____classRefChildElement, "value", "value");
                                        parseProperty(_____classRefBuilder, _____classRefChildElement, "name", "name");
                                        parseProperty(_____classRefBuilder, _____classRefChildElement, "type", "type");
                                        ___salesItemLineDetailBuilder.addPropertyValue("classRef", _____classRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___salesItemLineDetailBuilder, ___salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                parseProperty(___salesItemLineDetailBuilder, ___salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                if (!parseObjectRef(___salesItemLineDetailChildElement, ___salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                    BeanDefinitionBuilder _____priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____priceLevelRefChildElement = DomUtils.getChildElementByTagName(___salesItemLineDetailChildElement, "price-level-ref");
                                    if (_____priceLevelRefChildElement!= null) {
                                        parseProperty(_____priceLevelRefBuilder, _____priceLevelRefChildElement, "value", "value");
                                        parseProperty(_____priceLevelRefBuilder, _____priceLevelRefChildElement, "name", "name");
                                        parseProperty(_____priceLevelRefBuilder, _____priceLevelRefChildElement, "type", "type");
                                        ___salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", _____priceLevelRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesItemLineDetailChildElement, ___salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                    BeanDefinitionBuilder _____markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                    Element _____markupInfoChildElement = DomUtils.getChildElementByTagName(___salesItemLineDetailChildElement, "markup-info");
                                    if (_____markupInfoChildElement!= null) {
                                        parseProperty(_____markupInfoBuilder, _____markupInfoChildElement, "percentBased", "percentBased");
                                        parseProperty(_____markupInfoBuilder, _____markupInfoChildElement, "value", "value");
                                        parseProperty(_____markupInfoBuilder, _____markupInfoChildElement, "percent", "percent");
                                        if (!parseObjectRef(_____markupInfoChildElement, _____markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                            BeanDefinitionBuilder ______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____markupInfoChildElement, "price-level-ref");
                                            if (______priceLevelRefChildElement!= null) {
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "value", "value");
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "name", "name");
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "type", "type");
                                                _____markupInfoBuilder.addPropertyValue("priceLevelRef", ______priceLevelRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        ___salesItemLineDetailBuilder.addPropertyValue("markupInfo", _____markupInfoBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___salesItemLineDetailBuilder, ___salesItemLineDetailChildElement, "qty", "qty");
                                if (!parseObjectRef(___salesItemLineDetailChildElement, ___salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                    BeanDefinitionBuilder _____uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                    Element _____uomRefChildElement = DomUtils.getChildElementByTagName(___salesItemLineDetailChildElement, "uom-ref");
                                    if (_____uomRefChildElement!= null) {
                                        parseProperty(_____uomRefBuilder, _____uomRefChildElement, "unit", "unit");
                                        ___salesItemLineDetailBuilder.addPropertyValue("uomRef", _____uomRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesItemLineDetailChildElement, ___salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                    BeanDefinitionBuilder _____itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____itemAccountRefChildElement = DomUtils.getChildElementByTagName(___salesItemLineDetailChildElement, "item-account-ref");
                                    if (_____itemAccountRefChildElement!= null) {
                                        parseProperty(_____itemAccountRefBuilder, _____itemAccountRefChildElement, "value", "value");
                                        parseProperty(_____itemAccountRefBuilder, _____itemAccountRefChildElement, "name", "name");
                                        parseProperty(_____itemAccountRefBuilder, _____itemAccountRefChildElement, "type", "type");
                                        ___salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", _____itemAccountRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesItemLineDetailChildElement, ___salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                    BeanDefinitionBuilder _____inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___salesItemLineDetailChildElement, "inventory-site-ref");
                                    if (_____inventorySiteRefChildElement!= null) {
                                        parseProperty(_____inventorySiteRefBuilder, _____inventorySiteRefChildElement, "value", "value");
                                        parseProperty(_____inventorySiteRefBuilder, _____inventorySiteRefChildElement, "name", "name");
                                        parseProperty(_____inventorySiteRefBuilder, _____inventorySiteRefChildElement, "type", "type");
                                        ___salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _____inventorySiteRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesItemLineDetailChildElement, ___salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                    BeanDefinitionBuilder _____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____taxCodeRefChildElement = DomUtils.getChildElementByTagName(___salesItemLineDetailChildElement, "tax-code-ref");
                                    if (_____taxCodeRefChildElement!= null) {
                                        parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "value", "value");
                                        parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "name", "name");
                                        parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "type", "type");
                                        ___salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", _____taxCodeRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___salesItemLineDetailBuilder, ___salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                parseProperty(___salesItemLineDetailBuilder, ___salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                if (!parseObjectRef(___salesItemLineDetailChildElement, ___salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                    BeanDefinitionBuilder ____salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                    if (____salesItemLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____salesItemLineDetailExChildElement, ____salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ____salesItemLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("salesItemLineDetail", ___salesItemLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                            BeanDefinitionBuilder ___descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                            Element ___descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                            if (___descriptionLineDetailChildElement!= null) {
                                parseProperty(___descriptionLineDetailBuilder, ___descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                if (!parseObjectRef(___descriptionLineDetailChildElement, ___descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                    BeanDefinitionBuilder ____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____taxCodeRefChildElement = DomUtils.getChildElementByTagName(___descriptionLineDetailChildElement, "tax-code-ref");
                                    if (____taxCodeRefChildElement!= null) {
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "value", "value");
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "name", "name");
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "type", "type");
                                        ___descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", ____taxCodeRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___descriptionLineDetailChildElement, ___descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                    BeanDefinitionBuilder ____descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(___descriptionLineDetailChildElement, "description-line-detail-ex");
                                    if (____descriptionLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____descriptionLineDetailExChildElement, ____descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", ____descriptionLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("descriptionLineDetail", ___descriptionLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                            BeanDefinitionBuilder ___itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                            Element ___itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                            if (___itemBasedExpenseLineDetailChildElement!= null) {
                                parseProperty(___itemBasedExpenseLineDetailBuilder, ___itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                    BeanDefinitionBuilder _____itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____itemRefChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "item-ref");
                                    if (_____itemRefChildElement!= null) {
                                        parseProperty(_____itemRefBuilder, _____itemRefChildElement, "value", "value");
                                        parseProperty(_____itemRefBuilder, _____itemRefChildElement, "name", "name");
                                        parseProperty(_____itemRefBuilder, _____itemRefChildElement, "type", "type");
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", _____itemRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                    BeanDefinitionBuilder _____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____classRefChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "class-ref");
                                    if (_____classRefChildElement!= null) {
                                        parseProperty(_____classRefBuilder, _____classRefChildElement, "value", "value");
                                        parseProperty(_____classRefBuilder, _____classRefChildElement, "name", "name");
                                        parseProperty(_____classRefBuilder, _____classRefChildElement, "type", "type");
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _____classRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___itemBasedExpenseLineDetailBuilder, ___itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                parseProperty(___itemBasedExpenseLineDetailBuilder, ___itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                    BeanDefinitionBuilder _____priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____priceLevelRefChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                    if (_____priceLevelRefChildElement!= null) {
                                        parseProperty(_____priceLevelRefBuilder, _____priceLevelRefChildElement, "value", "value");
                                        parseProperty(_____priceLevelRefBuilder, _____priceLevelRefChildElement, "name", "name");
                                        parseProperty(_____priceLevelRefBuilder, _____priceLevelRefChildElement, "type", "type");
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", _____priceLevelRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                    BeanDefinitionBuilder _____markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                    Element _____markupInfoChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "markup-info");
                                    if (_____markupInfoChildElement!= null) {
                                        parseProperty(_____markupInfoBuilder, _____markupInfoChildElement, "percentBased", "percentBased");
                                        parseProperty(_____markupInfoBuilder, _____markupInfoChildElement, "value", "value");
                                        parseProperty(_____markupInfoBuilder, _____markupInfoChildElement, "percent", "percent");
                                        if (!parseObjectRef(_____markupInfoChildElement, _____markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                            BeanDefinitionBuilder ______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____markupInfoChildElement, "price-level-ref");
                                            if (______priceLevelRefChildElement!= null) {
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "value", "value");
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "name", "name");
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "type", "type");
                                                _____markupInfoBuilder.addPropertyValue("priceLevelRef", ______priceLevelRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _____markupInfoBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___itemBasedExpenseLineDetailBuilder, ___itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                    BeanDefinitionBuilder _____uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                    Element _____uomRefChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "uom-ref");
                                    if (_____uomRefChildElement!= null) {
                                        parseProperty(_____uomRefBuilder, _____uomRefChildElement, "unit", "unit");
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", _____uomRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                    BeanDefinitionBuilder _____itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____itemAccountRefChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                    if (_____itemAccountRefChildElement!= null) {
                                        parseProperty(_____itemAccountRefBuilder, _____itemAccountRefChildElement, "value", "value");
                                        parseProperty(_____itemAccountRefBuilder, _____itemAccountRefChildElement, "name", "name");
                                        parseProperty(_____itemAccountRefBuilder, _____itemAccountRefChildElement, "type", "type");
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", _____itemAccountRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                    BeanDefinitionBuilder _____inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                    if (_____inventorySiteRefChildElement!= null) {
                                        parseProperty(_____inventorySiteRefBuilder, _____inventorySiteRefChildElement, "value", "value");
                                        parseProperty(_____inventorySiteRefBuilder, _____inventorySiteRefChildElement, "name", "name");
                                        parseProperty(_____inventorySiteRefBuilder, _____inventorySiteRefChildElement, "type", "type");
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", _____inventorySiteRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                    BeanDefinitionBuilder _____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element _____taxCodeRefChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                    if (_____taxCodeRefChildElement!= null) {
                                        parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "value", "value");
                                        parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "name", "name");
                                        parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "type", "type");
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _____taxCodeRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                    BeanDefinitionBuilder ____customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____customerRefChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "customer-ref");
                                    if (____customerRefChildElement!= null) {
                                        parseProperty(____customerRefBuilder, ____customerRefChildElement, "value", "value");
                                        parseProperty(____customerRefBuilder, ____customerRefChildElement, "name", "name");
                                        parseProperty(____customerRefBuilder, ____customerRefChildElement, "type", "type");
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ____customerRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___itemBasedExpenseLineDetailBuilder, ___itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                parseProperty(___itemBasedExpenseLineDetailBuilder, ___itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                if (!parseObjectRef(___itemBasedExpenseLineDetailChildElement, ___itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                    BeanDefinitionBuilder ____itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(___itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                    if (____itemBasedExpenseLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____itemBasedExpenseLineDetailExChildElement, ____itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", ____itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("itemBasedExpenseLineDetail", ___itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                            BeanDefinitionBuilder ___accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                            Element ___accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                            if (___accountBasedExpenseLineDetailChildElement!= null) {
                                if (!parseObjectRef(___accountBasedExpenseLineDetailChildElement, ___accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                    BeanDefinitionBuilder ____customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____customerRefChildElement = DomUtils.getChildElementByTagName(___accountBasedExpenseLineDetailChildElement, "customer-ref");
                                    if (____customerRefChildElement!= null) {
                                        parseProperty(____customerRefBuilder, ____customerRefChildElement, "value", "value");
                                        parseProperty(____customerRefBuilder, ____customerRefChildElement, "name", "name");
                                        parseProperty(____customerRefBuilder, ____customerRefChildElement, "type", "type");
                                        ___accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ____customerRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___accountBasedExpenseLineDetailChildElement, ___accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                    BeanDefinitionBuilder ____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____classRefChildElement = DomUtils.getChildElementByTagName(___accountBasedExpenseLineDetailChildElement, "class-ref");
                                    if (____classRefChildElement!= null) {
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "value", "value");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "name", "name");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "type", "type");
                                        ___accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ____classRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___accountBasedExpenseLineDetailChildElement, ___accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                    BeanDefinitionBuilder ____accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____accountRefChildElement = DomUtils.getChildElementByTagName(___accountBasedExpenseLineDetailChildElement, "account-ref");
                                    if (____accountRefChildElement!= null) {
                                        parseProperty(____accountRefBuilder, ____accountRefChildElement, "value", "value");
                                        parseProperty(____accountRefBuilder, ____accountRefChildElement, "name", "name");
                                        parseProperty(____accountRefBuilder, ____accountRefChildElement, "type", "type");
                                        ___accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", ____accountRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___accountBasedExpenseLineDetailBuilder, ___accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                if (!parseObjectRef(___accountBasedExpenseLineDetailChildElement, ___accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                    BeanDefinitionBuilder ____markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                    Element ____markupInfoChildElement = DomUtils.getChildElementByTagName(___accountBasedExpenseLineDetailChildElement, "markup-info");
                                    if (____markupInfoChildElement!= null) {
                                        parseProperty(____markupInfoBuilder, ____markupInfoChildElement, "percentBased", "percentBased");
                                        parseProperty(____markupInfoBuilder, ____markupInfoChildElement, "value", "value");
                                        parseProperty(____markupInfoBuilder, ____markupInfoChildElement, "percent", "percent");
                                        if (!parseObjectRef(____markupInfoChildElement, ____markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                            BeanDefinitionBuilder _____priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____priceLevelRefChildElement = DomUtils.getChildElementByTagName(____markupInfoChildElement, "price-level-ref");
                                            if (_____priceLevelRefChildElement!= null) {
                                                parseProperty(_____priceLevelRefBuilder, _____priceLevelRefChildElement, "value", "value");
                                                parseProperty(_____priceLevelRefBuilder, _____priceLevelRefChildElement, "name", "name");
                                                parseProperty(_____priceLevelRefBuilder, _____priceLevelRefChildElement, "type", "type");
                                                ____markupInfoBuilder.addPropertyValue("priceLevelRef", _____priceLevelRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        ___accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ____markupInfoBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___accountBasedExpenseLineDetailBuilder, ___accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                if (!parseObjectRef(___accountBasedExpenseLineDetailChildElement, ___accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                    BeanDefinitionBuilder ____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____taxCodeRefChildElement = DomUtils.getChildElementByTagName(___accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                    if (____taxCodeRefChildElement!= null) {
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "value", "value");
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "name", "name");
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "type", "type");
                                        ___accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ____taxCodeRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___accountBasedExpenseLineDetailBuilder, ___accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                if (!parseObjectRef(___accountBasedExpenseLineDetailChildElement, ___accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                    BeanDefinitionBuilder ____expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(___accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                    if (____expenseDetailLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____expenseDetailLineDetailExChildElement, ____expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", ____expenseDetailLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("accountBasedExpenseLineDetail", ___accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                            BeanDefinitionBuilder ___depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                            Element ___depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                            if (___depositLineDetailChildElement!= null) {
                                if (!parseObjectRef(___depositLineDetailChildElement, ___depositLineDetailBuilder, "entity", "entity")) {
                                    BeanDefinitionBuilder ____entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____entityChildElement = DomUtils.getChildElementByTagName(___depositLineDetailChildElement, "entity");
                                    if (____entityChildElement!= null) {
                                        parseProperty(____entityBuilder, ____entityChildElement, "value", "value");
                                        parseProperty(____entityBuilder, ____entityChildElement, "name", "name");
                                        parseProperty(____entityBuilder, ____entityChildElement, "type", "type");
                                        ___depositLineDetailBuilder.addPropertyValue("entity", ____entityBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___depositLineDetailChildElement, ___depositLineDetailBuilder, "class-ref", "classRef")) {
                                    BeanDefinitionBuilder ____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____classRefChildElement = DomUtils.getChildElementByTagName(___depositLineDetailChildElement, "class-ref");
                                    if (____classRefChildElement!= null) {
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "value", "value");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "name", "name");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "type", "type");
                                        ___depositLineDetailBuilder.addPropertyValue("classRef", ____classRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___depositLineDetailChildElement, ___depositLineDetailBuilder, "account-ref", "accountRef")) {
                                    BeanDefinitionBuilder ____accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____accountRefChildElement = DomUtils.getChildElementByTagName(___depositLineDetailChildElement, "account-ref");
                                    if (____accountRefChildElement!= null) {
                                        parseProperty(____accountRefBuilder, ____accountRefChildElement, "value", "value");
                                        parseProperty(____accountRefBuilder, ____accountRefChildElement, "name", "name");
                                        parseProperty(____accountRefBuilder, ____accountRefChildElement, "type", "type");
                                        ___depositLineDetailBuilder.addPropertyValue("accountRef", ____accountRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___depositLineDetailChildElement, ___depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                    BeanDefinitionBuilder ____paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____paymentMethodRefChildElement = DomUtils.getChildElementByTagName(___depositLineDetailChildElement, "payment-method-ref");
                                    if (____paymentMethodRefChildElement!= null) {
                                        parseProperty(____paymentMethodRefBuilder, ____paymentMethodRefChildElement, "value", "value");
                                        parseProperty(____paymentMethodRefBuilder, ____paymentMethodRefChildElement, "name", "name");
                                        parseProperty(____paymentMethodRefBuilder, ____paymentMethodRefChildElement, "type", "type");
                                        ___depositLineDetailBuilder.addPropertyValue("paymentMethodRef", ____paymentMethodRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___depositLineDetailBuilder, ___depositLineDetailChildElement, "checkNum", "checkNum");
                                parseProperty(___depositLineDetailBuilder, ___depositLineDetailChildElement, "txnType", "txnType");
                                if (!parseObjectRef(___depositLineDetailChildElement, ___depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                    BeanDefinitionBuilder ____depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____depositLineDetailExChildElement = DomUtils.getChildElementByTagName(___depositLineDetailChildElement, "deposit-line-detail-ex");
                                    if (____depositLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____depositLineDetailExChildElement, ____depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", ____depositLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("depositLineDetail", ___depositLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                            BeanDefinitionBuilder ___purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                            Element ___purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                            if (___purchaseOrderItemLineDetailChildElement!= null) {
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                    BeanDefinitionBuilder _____salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element _____salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                    if (_____salesItemLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(_____salesItemLineDetailExChildElement, _____salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _____salesItemLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                    BeanDefinitionBuilder ______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______itemRefChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "item-ref");
                                    if (______itemRefChildElement!= null) {
                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "value", "value");
                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "name", "name");
                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "type", "type");
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", ______itemRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                    BeanDefinitionBuilder ______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______classRefChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "class-ref");
                                    if (______classRefChildElement!= null) {
                                        parseProperty(______classRefBuilder, ______classRefChildElement, "value", "value");
                                        parseProperty(______classRefBuilder, ______classRefChildElement, "name", "name");
                                        parseProperty(______classRefBuilder, ______classRefChildElement, "type", "type");
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", ______classRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                    BeanDefinitionBuilder ______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______priceLevelRefChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                    if (______priceLevelRefChildElement!= null) {
                                        parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "value", "value");
                                        parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "name", "name");
                                        parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "type", "type");
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ______priceLevelRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                    BeanDefinitionBuilder ______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                    Element ______markupInfoChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "markup-info");
                                    if (______markupInfoChildElement!= null) {
                                        parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percentBased", "percentBased");
                                        parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "value", "value");
                                        parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percent", "percent");
                                        if (!parseObjectRef(______markupInfoChildElement, ______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                            BeanDefinitionBuilder _______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______priceLevelRefChildElement = DomUtils.getChildElementByTagName(______markupInfoChildElement, "price-level-ref");
                                            if (_______priceLevelRefChildElement!= null) {
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "value", "value");
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "name", "name");
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "type", "type");
                                                ______markupInfoBuilder.addPropertyValue("priceLevelRef", _______priceLevelRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ______markupInfoBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                    BeanDefinitionBuilder ______uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                    Element ______uomRefChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "uom-ref");
                                    if (______uomRefChildElement!= null) {
                                        parseProperty(______uomRefBuilder, ______uomRefChildElement, "unit", "unit");
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", ______uomRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                    BeanDefinitionBuilder ______itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______itemAccountRefChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                    if (______itemAccountRefChildElement!= null) {
                                        parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "value", "value");
                                        parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "name", "name");
                                        parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "type", "type");
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ______itemAccountRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                    BeanDefinitionBuilder ______inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                    if (______inventorySiteRefChildElement!= null) {
                                        parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "value", "value");
                                        parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "name", "name");
                                        parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "type", "type");
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ______inventorySiteRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                    BeanDefinitionBuilder ______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______taxCodeRefChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                    if (______taxCodeRefChildElement!= null) {
                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "value", "value");
                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "name", "name");
                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "type", "type");
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ______taxCodeRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                parseProperty(___purchaseOrderItemLineDetailBuilder, ___purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                if (!parseObjectRef(___purchaseOrderItemLineDetailChildElement, ___purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                    BeanDefinitionBuilder ____purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                    if (____purchaseOrderItemLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____purchaseOrderItemLineDetailExChildElement, ____purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", ____purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("purchaseOrderItemLineDetail", ___purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                            BeanDefinitionBuilder ___salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                            Element ___salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                            if (___salesOrderItemLineDetailChildElement!= null) {
                                parseProperty(___salesOrderItemLineDetailBuilder, ___salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                parseProperty(___salesOrderItemLineDetailBuilder, ___salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                parseProperty(___salesOrderItemLineDetailBuilder, ___salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                if (!parseObjectRef(___salesOrderItemLineDetailChildElement, ___salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                    BeanDefinitionBuilder _____salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element _____salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                    if (_____salesItemLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(_____salesItemLineDetailExChildElement, _____salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _____salesItemLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___salesOrderItemLineDetailBuilder, ___salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                if (!parseObjectRef(___salesOrderItemLineDetailChildElement, ___salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                    BeanDefinitionBuilder ______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______itemRefChildElement = DomUtils.getChildElementByTagName(___salesOrderItemLineDetailChildElement, "item-ref");
                                    if (______itemRefChildElement!= null) {
                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "value", "value");
                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "name", "name");
                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "type", "type");
                                        ___salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", ______itemRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesOrderItemLineDetailChildElement, ___salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                    BeanDefinitionBuilder ______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______classRefChildElement = DomUtils.getChildElementByTagName(___salesOrderItemLineDetailChildElement, "class-ref");
                                    if (______classRefChildElement!= null) {
                                        parseProperty(______classRefBuilder, ______classRefChildElement, "value", "value");
                                        parseProperty(______classRefBuilder, ______classRefChildElement, "name", "name");
                                        parseProperty(______classRefBuilder, ______classRefChildElement, "type", "type");
                                        ___salesOrderItemLineDetailBuilder.addPropertyValue("classRef", ______classRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___salesOrderItemLineDetailBuilder, ___salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                parseProperty(___salesOrderItemLineDetailBuilder, ___salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                if (!parseObjectRef(___salesOrderItemLineDetailChildElement, ___salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                    BeanDefinitionBuilder ______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______priceLevelRefChildElement = DomUtils.getChildElementByTagName(___salesOrderItemLineDetailChildElement, "price-level-ref");
                                    if (______priceLevelRefChildElement!= null) {
                                        parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "value", "value");
                                        parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "name", "name");
                                        parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "type", "type");
                                        ___salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ______priceLevelRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesOrderItemLineDetailChildElement, ___salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                    BeanDefinitionBuilder ______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                    Element ______markupInfoChildElement = DomUtils.getChildElementByTagName(___salesOrderItemLineDetailChildElement, "markup-info");
                                    if (______markupInfoChildElement!= null) {
                                        parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percentBased", "percentBased");
                                        parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "value", "value");
                                        parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percent", "percent");
                                        if (!parseObjectRef(______markupInfoChildElement, ______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                            BeanDefinitionBuilder _______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______priceLevelRefChildElement = DomUtils.getChildElementByTagName(______markupInfoChildElement, "price-level-ref");
                                            if (_______priceLevelRefChildElement!= null) {
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "value", "value");
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "name", "name");
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "type", "type");
                                                ______markupInfoBuilder.addPropertyValue("priceLevelRef", _______priceLevelRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        ___salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ______markupInfoBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___salesOrderItemLineDetailBuilder, ___salesOrderItemLineDetailChildElement, "qty", "qty");
                                if (!parseObjectRef(___salesOrderItemLineDetailChildElement, ___salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                    BeanDefinitionBuilder ______uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                    Element ______uomRefChildElement = DomUtils.getChildElementByTagName(___salesOrderItemLineDetailChildElement, "uom-ref");
                                    if (______uomRefChildElement!= null) {
                                        parseProperty(______uomRefBuilder, ______uomRefChildElement, "unit", "unit");
                                        ___salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", ______uomRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesOrderItemLineDetailChildElement, ___salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                    BeanDefinitionBuilder ______itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______itemAccountRefChildElement = DomUtils.getChildElementByTagName(___salesOrderItemLineDetailChildElement, "item-account-ref");
                                    if (______itemAccountRefChildElement!= null) {
                                        parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "value", "value");
                                        parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "name", "name");
                                        parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "type", "type");
                                        ___salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ______itemAccountRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesOrderItemLineDetailChildElement, ___salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                    BeanDefinitionBuilder ______inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                    if (______inventorySiteRefChildElement!= null) {
                                        parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "value", "value");
                                        parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "name", "name");
                                        parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "type", "type");
                                        ___salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ______inventorySiteRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___salesOrderItemLineDetailChildElement, ___salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                    BeanDefinitionBuilder ______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ______taxCodeRefChildElement = DomUtils.getChildElementByTagName(___salesOrderItemLineDetailChildElement, "tax-code-ref");
                                    if (______taxCodeRefChildElement!= null) {
                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "value", "value");
                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "name", "name");
                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "type", "type");
                                        ___salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ______taxCodeRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___salesOrderItemLineDetailBuilder, ___salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                builder.addPropertyValue("salesOrderItemLineDetail", ___salesOrderItemLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                            BeanDefinitionBuilder ___itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                            Element ___itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                            if (___itemReceiptLineDetailChildElement!= null) {
                                if (!parseObjectRef(___itemReceiptLineDetailChildElement, ___itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                    BeanDefinitionBuilder ____itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(___itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                    if (____itemReceiptLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____itemReceiptLineDetailExChildElement, ____itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", ____itemReceiptLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("itemReceiptLineDetail", ___itemReceiptLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                            BeanDefinitionBuilder ___journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                            Element ___journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                            if (___journalEntryLineDetailChildElement!= null) {
                                parseProperty(___journalEntryLineDetailBuilder, ___journalEntryLineDetailChildElement, "postingType", "postingType");
                                if (!parseObjectRef(___journalEntryLineDetailChildElement, ___journalEntryLineDetailBuilder, "entity", "entity")) {
                                    BeanDefinitionBuilder ____entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                    Element ____entityChildElement = DomUtils.getChildElementByTagName(___journalEntryLineDetailChildElement, "entity");
                                    if (____entityChildElement!= null) {
                                        parseProperty(____entityBuilder, ____entityChildElement, "type", "type");
                                        if (!parseObjectRef(____entityChildElement, ____entityBuilder, "entity-ref", "entityRef")) {
                                            BeanDefinitionBuilder _____entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____entityRefChildElement = DomUtils.getChildElementByTagName(____entityChildElement, "entity-ref");
                                            if (_____entityRefChildElement!= null) {
                                                parseProperty(_____entityRefBuilder, _____entityRefChildElement, "value", "value");
                                                parseProperty(_____entityRefBuilder, _____entityRefChildElement, "name", "name");
                                                parseProperty(_____entityRefBuilder, _____entityRefChildElement, "type", "type");
                                                ____entityBuilder.addPropertyValue("entityRef", _____entityRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        ___journalEntryLineDetailBuilder.addPropertyValue("entity", ____entityBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___journalEntryLineDetailChildElement, ___journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                    BeanDefinitionBuilder ____accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____accountRefChildElement = DomUtils.getChildElementByTagName(___journalEntryLineDetailChildElement, "account-ref");
                                    if (____accountRefChildElement!= null) {
                                        parseProperty(____accountRefBuilder, ____accountRefChildElement, "value", "value");
                                        parseProperty(____accountRefBuilder, ____accountRefChildElement, "name", "name");
                                        parseProperty(____accountRefBuilder, ____accountRefChildElement, "type", "type");
                                        ___journalEntryLineDetailBuilder.addPropertyValue("accountRef", ____accountRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___journalEntryLineDetailChildElement, ___journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                    BeanDefinitionBuilder ____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____classRefChildElement = DomUtils.getChildElementByTagName(___journalEntryLineDetailChildElement, "class-ref");
                                    if (____classRefChildElement!= null) {
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "value", "value");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "name", "name");
                                        parseProperty(____classRefBuilder, ____classRefChildElement, "type", "type");
                                        ___journalEntryLineDetailBuilder.addPropertyValue("classRef", ____classRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___journalEntryLineDetailChildElement, ___journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                    BeanDefinitionBuilder ____departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____departmentRefChildElement = DomUtils.getChildElementByTagName(___journalEntryLineDetailChildElement, "department-ref");
                                    if (____departmentRefChildElement!= null) {
                                        parseProperty(____departmentRefBuilder, ____departmentRefChildElement, "value", "value");
                                        parseProperty(____departmentRefBuilder, ____departmentRefChildElement, "name", "name");
                                        parseProperty(____departmentRefBuilder, ____departmentRefChildElement, "type", "type");
                                        ___journalEntryLineDetailBuilder.addPropertyValue("departmentRef", ____departmentRefBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(___journalEntryLineDetailChildElement, ___journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                    BeanDefinitionBuilder ____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____taxCodeRefChildElement = DomUtils.getChildElementByTagName(___journalEntryLineDetailChildElement, "tax-code-ref");
                                    if (____taxCodeRefChildElement!= null) {
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "value", "value");
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "name", "name");
                                        parseProperty(____taxCodeRefBuilder, ____taxCodeRefChildElement, "type", "type");
                                        ___journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", ____taxCodeRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___journalEntryLineDetailBuilder, ___journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                parseProperty(___journalEntryLineDetailBuilder, ___journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                parseProperty(___journalEntryLineDetailBuilder, ___journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                if (!parseObjectRef(___journalEntryLineDetailChildElement, ___journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                    BeanDefinitionBuilder ____journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(___journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                    if (____journalEntryLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____journalEntryLineDetailExChildElement, ____journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", ____journalEntryLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("journalEntryLineDetail", ___journalEntryLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                            BeanDefinitionBuilder ___groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                            Element ___groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                            if (___groupLineDetailChildElement!= null) {
                                if (!parseObjectRef(___groupLineDetailChildElement, ___groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                    BeanDefinitionBuilder ____groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____groupItemRefChildElement = DomUtils.getChildElementByTagName(___groupLineDetailChildElement, "group-item-ref");
                                    if (____groupItemRefChildElement!= null) {
                                        parseProperty(____groupItemRefBuilder, ____groupItemRefChildElement, "value", "value");
                                        parseProperty(____groupItemRefBuilder, ____groupItemRefChildElement, "name", "name");
                                        parseProperty(____groupItemRefBuilder, ____groupItemRefChildElement, "type", "type");
                                        ___groupLineDetailBuilder.addPropertyValue("groupItemRef", ____groupItemRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___groupLineDetailBuilder, ___groupLineDetailChildElement, "quantity", "quantity");
                                parseProperty(___groupLineDetailBuilder, ___groupLineDetailChildElement, "serviceDate", "serviceDate");
                                parseListAndSetProperty(___groupLineDetailChildElement, ___groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                    public BeanDefinition parse(Element element) {
                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                        parseProperty(builder, element, "id", "id");
                                        parseProperty(builder, element, "lineNum", "lineNum");
                                        parseProperty(builder, element, "description", "description");
                                        parseProperty(builder, element, "amount", "amount");
                                        parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                            public BeanDefinition parse(Element element) {
                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                parseProperty(builder, element, "txnId", "txnId");
                                                parseProperty(builder, element, "txnType", "txnType");
                                                parseProperty(builder, element, "txnLineId", "txnLineId");
                                                return builder.getBeanDefinition();
                                            }

                                        }
                                        );
                                        parseProperty(builder, element, "detailType", "detailType");
                                        if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                            BeanDefinitionBuilder _____paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                            Element _____paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                            if (_____paymentLineDetailChildElement!= null) {
                                                if (!parseObjectRef(_____paymentLineDetailChildElement, _____paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                    BeanDefinitionBuilder ______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______itemRefChildElement = DomUtils.getChildElementByTagName(_____paymentLineDetailChildElement, "item-ref");
                                                    if (______itemRefChildElement!= null) {
                                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "value", "value");
                                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "name", "name");
                                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "type", "type");
                                                        _____paymentLineDetailBuilder.addPropertyValue("itemRef", ______itemRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____paymentLineDetailBuilder, _____paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                if (!parseObjectRef(_____paymentLineDetailChildElement, _____paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                    BeanDefinitionBuilder ______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______classRefChildElement = DomUtils.getChildElementByTagName(_____paymentLineDetailChildElement, "class-ref");
                                                    if (______classRefChildElement!= null) {
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "value", "value");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "name", "name");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "type", "type");
                                                        _____paymentLineDetailBuilder.addPropertyValue("classRef", ______classRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____paymentLineDetailBuilder, _____paymentLineDetailChildElement, "balance", "balance");
                                                if (!parseObjectRef(_____paymentLineDetailChildElement, _____paymentLineDetailBuilder, "discount", "discount")) {
                                                    BeanDefinitionBuilder ______discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                    Element ______discountChildElement = DomUtils.getChildElementByTagName(_____paymentLineDetailChildElement, "discount");
                                                    if (______discountChildElement!= null) {
                                                        if (!parseObjectRef(______discountChildElement, ______discountBuilder, "discount-ref", "discountRef")) {
                                                            BeanDefinitionBuilder _______discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______discountRefChildElement = DomUtils.getChildElementByTagName(______discountChildElement, "discount-ref");
                                                            if (_______discountRefChildElement!= null) {
                                                                parseProperty(_______discountRefBuilder, _______discountRefChildElement, "value", "value");
                                                                parseProperty(_______discountRefBuilder, _______discountRefChildElement, "name", "name");
                                                                parseProperty(_______discountRefBuilder, _______discountRefChildElement, "type", "type");
                                                                ______discountBuilder.addPropertyValue("discountRef", _______discountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______discountBuilder, ______discountChildElement, "percentBased", "percentBased");
                                                        parseProperty(______discountBuilder, ______discountChildElement, "discountPercent", "discountPercent");
                                                        if (!parseObjectRef(______discountChildElement, ______discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                            BeanDefinitionBuilder _______discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______discountAccountRefChildElement = DomUtils.getChildElementByTagName(______discountChildElement, "discount-account-ref");
                                                            if (_______discountAccountRefChildElement!= null) {
                                                                parseProperty(_______discountAccountRefBuilder, _______discountAccountRefChildElement, "value", "value");
                                                                parseProperty(_______discountAccountRefBuilder, _______discountAccountRefChildElement, "name", "name");
                                                                parseProperty(_______discountAccountRefBuilder, _______discountAccountRefChildElement, "type", "type");
                                                                ______discountBuilder.addPropertyValue("discountAccountRef", _______discountAccountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        _____paymentLineDetailBuilder.addPropertyValue("discount", ______discountBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____paymentLineDetailChildElement, _____paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                    BeanDefinitionBuilder ______paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______paymentLineExChildElement = DomUtils.getChildElementByTagName(_____paymentLineDetailChildElement, "payment-line-ex");
                                                    if (______paymentLineExChildElement!= null) {
                                                        parseListAndSetProperty(______paymentLineExChildElement, ______paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____paymentLineDetailBuilder.addPropertyValue("paymentLineEx", ______paymentLineExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("paymentLineDetail", _____paymentLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                            BeanDefinitionBuilder _____discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                            Element _____discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                            if (_____discountLineDetailChildElement!= null) {
                                                parseProperty(_____discountLineDetailBuilder, _____discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                if (!parseObjectRef(_____discountLineDetailChildElement, _____discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                    BeanDefinitionBuilder _______discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______discountRefChildElement = DomUtils.getChildElementByTagName(_____discountLineDetailChildElement, "discount-ref");
                                                    if (_______discountRefChildElement!= null) {
                                                        parseProperty(_______discountRefBuilder, _______discountRefChildElement, "value", "value");
                                                        parseProperty(_______discountRefBuilder, _______discountRefChildElement, "name", "name");
                                                        parseProperty(_______discountRefBuilder, _______discountRefChildElement, "type", "type");
                                                        _____discountLineDetailBuilder.addPropertyValue("discountRef", _______discountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____discountLineDetailBuilder, _____discountLineDetailChildElement, "percentBased", "percentBased");
                                                parseProperty(_____discountLineDetailBuilder, _____discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                if (!parseObjectRef(_____discountLineDetailChildElement, _____discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                    BeanDefinitionBuilder _______discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______discountAccountRefChildElement = DomUtils.getChildElementByTagName(_____discountLineDetailChildElement, "discount-account-ref");
                                                    if (_______discountAccountRefChildElement!= null) {
                                                        parseProperty(_______discountAccountRefBuilder, _______discountAccountRefChildElement, "value", "value");
                                                        parseProperty(_______discountAccountRefBuilder, _______discountAccountRefChildElement, "name", "name");
                                                        parseProperty(_______discountAccountRefBuilder, _______discountAccountRefChildElement, "type", "type");
                                                        _____discountLineDetailBuilder.addPropertyValue("discountAccountRef", _______discountAccountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____discountLineDetailBuilder, _____discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                if (!parseObjectRef(_____discountLineDetailChildElement, _____discountLineDetailBuilder, "class-ref", "classRef")) {
                                                    BeanDefinitionBuilder ______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______classRefChildElement = DomUtils.getChildElementByTagName(_____discountLineDetailChildElement, "class-ref");
                                                    if (______classRefChildElement!= null) {
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "value", "value");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "name", "name");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "type", "type");
                                                        _____discountLineDetailBuilder.addPropertyValue("classRef", ______classRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____discountLineDetailChildElement, _____discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                    BeanDefinitionBuilder ______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____discountLineDetailChildElement, "tax-code-ref");
                                                    if (______taxCodeRefChildElement!= null) {
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "value", "value");
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "name", "name");
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "type", "type");
                                                        _____discountLineDetailBuilder.addPropertyValue("taxCodeRef", ______taxCodeRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____discountLineDetailChildElement, _____discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                    BeanDefinitionBuilder ______discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______discountLineDetailExChildElement = DomUtils.getChildElementByTagName(_____discountLineDetailChildElement, "discount-line-detail-ex");
                                                    if (______discountLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______discountLineDetailExChildElement, ______discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", ______discountLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("discountLineDetail", _____discountLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                            BeanDefinitionBuilder _____taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                            Element _____taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                            if (_____taxLineDetailChildElement!= null) {
                                                if (!parseObjectRef(_____taxLineDetailChildElement, _____taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                    BeanDefinitionBuilder ______taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______taxRateRefChildElement = DomUtils.getChildElementByTagName(_____taxLineDetailChildElement, "tax-rate-ref");
                                                    if (______taxRateRefChildElement!= null) {
                                                        parseProperty(______taxRateRefBuilder, ______taxRateRefChildElement, "value", "value");
                                                        parseProperty(______taxRateRefBuilder, ______taxRateRefChildElement, "name", "name");
                                                        parseProperty(______taxRateRefBuilder, ______taxRateRefChildElement, "type", "type");
                                                        _____taxLineDetailBuilder.addPropertyValue("taxRateRef", ______taxRateRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____taxLineDetailBuilder, _____taxLineDetailChildElement, "percentBased", "percentBased");
                                                parseProperty(_____taxLineDetailBuilder, _____taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                parseProperty(_____taxLineDetailBuilder, _____taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                parseProperty(_____taxLineDetailBuilder, _____taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                parseProperty(_____taxLineDetailBuilder, _____taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                parseProperty(_____taxLineDetailBuilder, _____taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                if (!parseObjectRef(_____taxLineDetailChildElement, _____taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                    BeanDefinitionBuilder ______taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______taxLineDetailExChildElement = DomUtils.getChildElementByTagName(_____taxLineDetailChildElement, "tax-line-detail-ex");
                                                    if (______taxLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______taxLineDetailExChildElement, ______taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", ______taxLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("taxLineDetail", _____taxLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                            BeanDefinitionBuilder _____salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                            Element _____salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                            if (_____salesItemLineDetailChildElement!= null) {
                                                parseProperty(_____salesItemLineDetailBuilder, _____salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                if (!parseObjectRef(_____salesItemLineDetailChildElement, _____salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                    BeanDefinitionBuilder _______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______itemRefChildElement = DomUtils.getChildElementByTagName(_____salesItemLineDetailChildElement, "item-ref");
                                                    if (_______itemRefChildElement!= null) {
                                                        parseProperty(_______itemRefBuilder, _______itemRefChildElement, "value", "value");
                                                        parseProperty(_______itemRefBuilder, _______itemRefChildElement, "name", "name");
                                                        parseProperty(_______itemRefBuilder, _______itemRefChildElement, "type", "type");
                                                        _____salesItemLineDetailBuilder.addPropertyValue("itemRef", _______itemRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesItemLineDetailChildElement, _____salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                    BeanDefinitionBuilder _______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______classRefChildElement = DomUtils.getChildElementByTagName(_____salesItemLineDetailChildElement, "class-ref");
                                                    if (_______classRefChildElement!= null) {
                                                        parseProperty(_______classRefBuilder, _______classRefChildElement, "value", "value");
                                                        parseProperty(_______classRefBuilder, _______classRefChildElement, "name", "name");
                                                        parseProperty(_______classRefBuilder, _______classRefChildElement, "type", "type");
                                                        _____salesItemLineDetailBuilder.addPropertyValue("classRef", _______classRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____salesItemLineDetailBuilder, _____salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                parseProperty(_____salesItemLineDetailBuilder, _____salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                if (!parseObjectRef(_____salesItemLineDetailChildElement, _____salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                    BeanDefinitionBuilder _______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____salesItemLineDetailChildElement, "price-level-ref");
                                                    if (_______priceLevelRefChildElement!= null) {
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "value", "value");
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "name", "name");
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "type", "type");
                                                        _____salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", _______priceLevelRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesItemLineDetailChildElement, _____salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                    BeanDefinitionBuilder _______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                    Element _______markupInfoChildElement = DomUtils.getChildElementByTagName(_____salesItemLineDetailChildElement, "markup-info");
                                                    if (_______markupInfoChildElement!= null) {
                                                        parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percentBased", "percentBased");
                                                        parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "value", "value");
                                                        parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percent", "percent");
                                                        if (!parseObjectRef(_______markupInfoChildElement, _______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                            BeanDefinitionBuilder ________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______markupInfoChildElement, "price-level-ref");
                                                            if (________priceLevelRefChildElement!= null) {
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "value", "value");
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "name", "name");
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "type", "type");
                                                                _______markupInfoBuilder.addPropertyValue("priceLevelRef", ________priceLevelRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        _____salesItemLineDetailBuilder.addPropertyValue("markupInfo", _______markupInfoBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____salesItemLineDetailBuilder, _____salesItemLineDetailChildElement, "qty", "qty");
                                                if (!parseObjectRef(_____salesItemLineDetailChildElement, _____salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                    BeanDefinitionBuilder _______uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                    Element _______uomRefChildElement = DomUtils.getChildElementByTagName(_____salesItemLineDetailChildElement, "uom-ref");
                                                    if (_______uomRefChildElement!= null) {
                                                        parseProperty(_______uomRefBuilder, _______uomRefChildElement, "unit", "unit");
                                                        _____salesItemLineDetailBuilder.addPropertyValue("uomRef", _______uomRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesItemLineDetailChildElement, _____salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                    BeanDefinitionBuilder _______itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______itemAccountRefChildElement = DomUtils.getChildElementByTagName(_____salesItemLineDetailChildElement, "item-account-ref");
                                                    if (_______itemAccountRefChildElement!= null) {
                                                        parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "value", "value");
                                                        parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "name", "name");
                                                        parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "type", "type");
                                                        _____salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", _______itemAccountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesItemLineDetailChildElement, _____salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                    BeanDefinitionBuilder _______inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_____salesItemLineDetailChildElement, "inventory-site-ref");
                                                    if (_______inventorySiteRefChildElement!= null) {
                                                        parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "value", "value");
                                                        parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "name", "name");
                                                        parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "type", "type");
                                                        _____salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _______inventorySiteRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesItemLineDetailChildElement, _____salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                    BeanDefinitionBuilder _______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____salesItemLineDetailChildElement, "tax-code-ref");
                                                    if (_______taxCodeRefChildElement!= null) {
                                                        parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "value", "value");
                                                        parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "name", "name");
                                                        parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "type", "type");
                                                        _____salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", _______taxCodeRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____salesItemLineDetailBuilder, _____salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                parseProperty(_____salesItemLineDetailBuilder, _____salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                if (!parseObjectRef(_____salesItemLineDetailChildElement, _____salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                    BeanDefinitionBuilder ______salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_____salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                    if (______salesItemLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______salesItemLineDetailExChildElement, ______salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ______salesItemLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("salesItemLineDetail", _____salesItemLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                            BeanDefinitionBuilder _____descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                            Element _____descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                            if (_____descriptionLineDetailChildElement!= null) {
                                                parseProperty(_____descriptionLineDetailBuilder, _____descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                if (!parseObjectRef(_____descriptionLineDetailChildElement, _____descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                    BeanDefinitionBuilder ______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____descriptionLineDetailChildElement, "tax-code-ref");
                                                    if (______taxCodeRefChildElement!= null) {
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "value", "value");
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "name", "name");
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "type", "type");
                                                        _____descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", ______taxCodeRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____descriptionLineDetailChildElement, _____descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                    BeanDefinitionBuilder ______descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(_____descriptionLineDetailChildElement, "description-line-detail-ex");
                                                    if (______descriptionLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______descriptionLineDetailExChildElement, ______descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", ______descriptionLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("descriptionLineDetail", _____descriptionLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                            BeanDefinitionBuilder _____itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                            Element _____itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                            if (_____itemBasedExpenseLineDetailChildElement!= null) {
                                                parseProperty(_____itemBasedExpenseLineDetailBuilder, _____itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                    BeanDefinitionBuilder _______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______itemRefChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "item-ref");
                                                    if (_______itemRefChildElement!= null) {
                                                        parseProperty(_______itemRefBuilder, _______itemRefChildElement, "value", "value");
                                                        parseProperty(_______itemRefBuilder, _______itemRefChildElement, "name", "name");
                                                        parseProperty(_______itemRefBuilder, _______itemRefChildElement, "type", "type");
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", _______itemRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                    BeanDefinitionBuilder _______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______classRefChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "class-ref");
                                                    if (_______classRefChildElement!= null) {
                                                        parseProperty(_______classRefBuilder, _______classRefChildElement, "value", "value");
                                                        parseProperty(_______classRefBuilder, _______classRefChildElement, "name", "name");
                                                        parseProperty(_______classRefBuilder, _______classRefChildElement, "type", "type");
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _______classRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____itemBasedExpenseLineDetailBuilder, _____itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                parseProperty(_____itemBasedExpenseLineDetailBuilder, _____itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                    BeanDefinitionBuilder _______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                    if (_______priceLevelRefChildElement!= null) {
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "value", "value");
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "name", "name");
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "type", "type");
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", _______priceLevelRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                    BeanDefinitionBuilder _______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                    Element _______markupInfoChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "markup-info");
                                                    if (_______markupInfoChildElement!= null) {
                                                        parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percentBased", "percentBased");
                                                        parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "value", "value");
                                                        parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percent", "percent");
                                                        if (!parseObjectRef(_______markupInfoChildElement, _______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                            BeanDefinitionBuilder ________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______markupInfoChildElement, "price-level-ref");
                                                            if (________priceLevelRefChildElement!= null) {
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "value", "value");
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "name", "name");
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "type", "type");
                                                                _______markupInfoBuilder.addPropertyValue("priceLevelRef", ________priceLevelRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _______markupInfoBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____itemBasedExpenseLineDetailBuilder, _____itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                    BeanDefinitionBuilder _______uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                    Element _______uomRefChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                    if (_______uomRefChildElement!= null) {
                                                        parseProperty(_______uomRefBuilder, _______uomRefChildElement, "unit", "unit");
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", _______uomRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                    BeanDefinitionBuilder _______itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______itemAccountRefChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                    if (_______itemAccountRefChildElement!= null) {
                                                        parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "value", "value");
                                                        parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "name", "name");
                                                        parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "type", "type");
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", _______itemAccountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                    BeanDefinitionBuilder _______inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                    if (_______inventorySiteRefChildElement!= null) {
                                                        parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "value", "value");
                                                        parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "name", "name");
                                                        parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "type", "type");
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", _______inventorySiteRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                    BeanDefinitionBuilder _______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                    if (_______taxCodeRefChildElement!= null) {
                                                        parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "value", "value");
                                                        parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "name", "name");
                                                        parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "type", "type");
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _______taxCodeRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                    BeanDefinitionBuilder ______customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______customerRefChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                    if (______customerRefChildElement!= null) {
                                                        parseProperty(______customerRefBuilder, ______customerRefChildElement, "value", "value");
                                                        parseProperty(______customerRefBuilder, ______customerRefChildElement, "name", "name");
                                                        parseProperty(______customerRefBuilder, ______customerRefChildElement, "type", "type");
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ______customerRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____itemBasedExpenseLineDetailBuilder, _____itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                parseProperty(_____itemBasedExpenseLineDetailBuilder, _____itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                if (!parseObjectRef(_____itemBasedExpenseLineDetailChildElement, _____itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                    BeanDefinitionBuilder ______itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(_____itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                    if (______itemBasedExpenseLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______itemBasedExpenseLineDetailExChildElement, ______itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", ______itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("itemBasedExpenseLineDetail", _____itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                            BeanDefinitionBuilder _____accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                            Element _____accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                            if (_____accountBasedExpenseLineDetailChildElement!= null) {
                                                if (!parseObjectRef(_____accountBasedExpenseLineDetailChildElement, _____accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                    BeanDefinitionBuilder ______customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______customerRefChildElement = DomUtils.getChildElementByTagName(_____accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                    if (______customerRefChildElement!= null) {
                                                        parseProperty(______customerRefBuilder, ______customerRefChildElement, "value", "value");
                                                        parseProperty(______customerRefBuilder, ______customerRefChildElement, "name", "name");
                                                        parseProperty(______customerRefBuilder, ______customerRefChildElement, "type", "type");
                                                        _____accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ______customerRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____accountBasedExpenseLineDetailChildElement, _____accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                    BeanDefinitionBuilder ______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______classRefChildElement = DomUtils.getChildElementByTagName(_____accountBasedExpenseLineDetailChildElement, "class-ref");
                                                    if (______classRefChildElement!= null) {
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "value", "value");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "name", "name");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "type", "type");
                                                        _____accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ______classRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____accountBasedExpenseLineDetailChildElement, _____accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                    BeanDefinitionBuilder ______accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______accountRefChildElement = DomUtils.getChildElementByTagName(_____accountBasedExpenseLineDetailChildElement, "account-ref");
                                                    if (______accountRefChildElement!= null) {
                                                        parseProperty(______accountRefBuilder, ______accountRefChildElement, "value", "value");
                                                        parseProperty(______accountRefBuilder, ______accountRefChildElement, "name", "name");
                                                        parseProperty(______accountRefBuilder, ______accountRefChildElement, "type", "type");
                                                        _____accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", ______accountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____accountBasedExpenseLineDetailBuilder, _____accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                if (!parseObjectRef(_____accountBasedExpenseLineDetailChildElement, _____accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                    BeanDefinitionBuilder ______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                    Element ______markupInfoChildElement = DomUtils.getChildElementByTagName(_____accountBasedExpenseLineDetailChildElement, "markup-info");
                                                    if (______markupInfoChildElement!= null) {
                                                        parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percentBased", "percentBased");
                                                        parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "value", "value");
                                                        parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percent", "percent");
                                                        if (!parseObjectRef(______markupInfoChildElement, ______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                            BeanDefinitionBuilder _______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______priceLevelRefChildElement = DomUtils.getChildElementByTagName(______markupInfoChildElement, "price-level-ref");
                                                            if (_______priceLevelRefChildElement!= null) {
                                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "value", "value");
                                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "name", "name");
                                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "type", "type");
                                                                ______markupInfoBuilder.addPropertyValue("priceLevelRef", _______priceLevelRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        _____accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ______markupInfoBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____accountBasedExpenseLineDetailBuilder, _____accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                if (!parseObjectRef(_____accountBasedExpenseLineDetailChildElement, _____accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                    BeanDefinitionBuilder ______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                    if (______taxCodeRefChildElement!= null) {
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "value", "value");
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "name", "name");
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "type", "type");
                                                        _____accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ______taxCodeRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____accountBasedExpenseLineDetailBuilder, _____accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                if (!parseObjectRef(_____accountBasedExpenseLineDetailChildElement, _____accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                    BeanDefinitionBuilder ______expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(_____accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                    if (______expenseDetailLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______expenseDetailLineDetailExChildElement, ______expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", ______expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("accountBasedExpenseLineDetail", _____accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                            BeanDefinitionBuilder _____depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                            Element _____depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                            if (_____depositLineDetailChildElement!= null) {
                                                if (!parseObjectRef(_____depositLineDetailChildElement, _____depositLineDetailBuilder, "entity", "entity")) {
                                                    BeanDefinitionBuilder ______entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______entityChildElement = DomUtils.getChildElementByTagName(_____depositLineDetailChildElement, "entity");
                                                    if (______entityChildElement!= null) {
                                                        parseProperty(______entityBuilder, ______entityChildElement, "value", "value");
                                                        parseProperty(______entityBuilder, ______entityChildElement, "name", "name");
                                                        parseProperty(______entityBuilder, ______entityChildElement, "type", "type");
                                                        _____depositLineDetailBuilder.addPropertyValue("entity", ______entityBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____depositLineDetailChildElement, _____depositLineDetailBuilder, "class-ref", "classRef")) {
                                                    BeanDefinitionBuilder ______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______classRefChildElement = DomUtils.getChildElementByTagName(_____depositLineDetailChildElement, "class-ref");
                                                    if (______classRefChildElement!= null) {
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "value", "value");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "name", "name");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "type", "type");
                                                        _____depositLineDetailBuilder.addPropertyValue("classRef", ______classRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____depositLineDetailChildElement, _____depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                    BeanDefinitionBuilder ______accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______accountRefChildElement = DomUtils.getChildElementByTagName(_____depositLineDetailChildElement, "account-ref");
                                                    if (______accountRefChildElement!= null) {
                                                        parseProperty(______accountRefBuilder, ______accountRefChildElement, "value", "value");
                                                        parseProperty(______accountRefBuilder, ______accountRefChildElement, "name", "name");
                                                        parseProperty(______accountRefBuilder, ______accountRefChildElement, "type", "type");
                                                        _____depositLineDetailBuilder.addPropertyValue("accountRef", ______accountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____depositLineDetailChildElement, _____depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                    BeanDefinitionBuilder ______paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______paymentMethodRefChildElement = DomUtils.getChildElementByTagName(_____depositLineDetailChildElement, "payment-method-ref");
                                                    if (______paymentMethodRefChildElement!= null) {
                                                        parseProperty(______paymentMethodRefBuilder, ______paymentMethodRefChildElement, "value", "value");
                                                        parseProperty(______paymentMethodRefBuilder, ______paymentMethodRefChildElement, "name", "name");
                                                        parseProperty(______paymentMethodRefBuilder, ______paymentMethodRefChildElement, "type", "type");
                                                        _____depositLineDetailBuilder.addPropertyValue("paymentMethodRef", ______paymentMethodRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____depositLineDetailBuilder, _____depositLineDetailChildElement, "checkNum", "checkNum");
                                                parseProperty(_____depositLineDetailBuilder, _____depositLineDetailChildElement, "txnType", "txnType");
                                                if (!parseObjectRef(_____depositLineDetailChildElement, _____depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                    BeanDefinitionBuilder ______depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______depositLineDetailExChildElement = DomUtils.getChildElementByTagName(_____depositLineDetailChildElement, "deposit-line-detail-ex");
                                                    if (______depositLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______depositLineDetailExChildElement, ______depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", ______depositLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("depositLineDetail", _____depositLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                            BeanDefinitionBuilder _____purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                            Element _____purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                            if (_____purchaseOrderItemLineDetailChildElement!= null) {
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                    BeanDefinitionBuilder _______salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element _______salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                    if (_______salesItemLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(_______salesItemLineDetailExChildElement, _______salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _______salesItemLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                    BeanDefinitionBuilder ________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________itemRefChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "item-ref");
                                                    if (________itemRefChildElement!= null) {
                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "value", "value");
                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "name", "name");
                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "type", "type");
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", ________itemRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                    BeanDefinitionBuilder ________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________classRefChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "class-ref");
                                                    if (________classRefChildElement!= null) {
                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "value", "value");
                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "name", "name");
                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "type", "type");
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", ________classRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                    BeanDefinitionBuilder ________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                    if (________priceLevelRefChildElement!= null) {
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "value", "value");
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "name", "name");
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "type", "type");
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ________priceLevelRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                    BeanDefinitionBuilder ________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                    Element ________markupInfoChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "markup-info");
                                                    if (________markupInfoChildElement!= null) {
                                                        parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percentBased", "percentBased");
                                                        parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "value", "value");
                                                        parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percent", "percent");
                                                        if (!parseObjectRef(________markupInfoChildElement, ________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                            BeanDefinitionBuilder _________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________markupInfoChildElement, "price-level-ref");
                                                            if (_________priceLevelRefChildElement!= null) {
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "value", "value");
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "name", "name");
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "type", "type");
                                                                ________markupInfoBuilder.addPropertyValue("priceLevelRef", _________priceLevelRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ________markupInfoBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                    BeanDefinitionBuilder ________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                    Element ________uomRefChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                    if (________uomRefChildElement!= null) {
                                                        parseProperty(________uomRefBuilder, ________uomRefChildElement, "unit", "unit");
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", ________uomRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                    BeanDefinitionBuilder ________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                    if (________itemAccountRefChildElement!= null) {
                                                        parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "value", "value");
                                                        parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "name", "name");
                                                        parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "type", "type");
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ________itemAccountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                    BeanDefinitionBuilder ________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                    if (________inventorySiteRefChildElement!= null) {
                                                        parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "value", "value");
                                                        parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "name", "name");
                                                        parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "type", "type");
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ________inventorySiteRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                    BeanDefinitionBuilder ________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                    if (________taxCodeRefChildElement!= null) {
                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "value", "value");
                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "name", "name");
                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "type", "type");
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ________taxCodeRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                parseProperty(_____purchaseOrderItemLineDetailBuilder, _____purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                if (!parseObjectRef(_____purchaseOrderItemLineDetailChildElement, _____purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                    BeanDefinitionBuilder ______purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_____purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                    if (______purchaseOrderItemLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______purchaseOrderItemLineDetailExChildElement, ______purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", ______purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("purchaseOrderItemLineDetail", _____purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                            BeanDefinitionBuilder _____salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                            Element _____salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                            if (_____salesOrderItemLineDetailChildElement!= null) {
                                                parseProperty(_____salesOrderItemLineDetailBuilder, _____salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                parseProperty(_____salesOrderItemLineDetailBuilder, _____salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                parseProperty(_____salesOrderItemLineDetailBuilder, _____salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                if (!parseObjectRef(_____salesOrderItemLineDetailChildElement, _____salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                    BeanDefinitionBuilder _______salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element _______salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_____salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                    if (_______salesItemLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(_______salesItemLineDetailExChildElement, _______salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _______salesItemLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____salesOrderItemLineDetailBuilder, _____salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                if (!parseObjectRef(_____salesOrderItemLineDetailChildElement, _____salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                    BeanDefinitionBuilder ________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________itemRefChildElement = DomUtils.getChildElementByTagName(_____salesOrderItemLineDetailChildElement, "item-ref");
                                                    if (________itemRefChildElement!= null) {
                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "value", "value");
                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "name", "name");
                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "type", "type");
                                                        _____salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", ________itemRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesOrderItemLineDetailChildElement, _____salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                    BeanDefinitionBuilder ________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________classRefChildElement = DomUtils.getChildElementByTagName(_____salesOrderItemLineDetailChildElement, "class-ref");
                                                    if (________classRefChildElement!= null) {
                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "value", "value");
                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "name", "name");
                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "type", "type");
                                                        _____salesOrderItemLineDetailBuilder.addPropertyValue("classRef", ________classRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____salesOrderItemLineDetailBuilder, _____salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                parseProperty(_____salesOrderItemLineDetailBuilder, _____salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                if (!parseObjectRef(_____salesOrderItemLineDetailChildElement, _____salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                    BeanDefinitionBuilder ________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____salesOrderItemLineDetailChildElement, "price-level-ref");
                                                    if (________priceLevelRefChildElement!= null) {
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "value", "value");
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "name", "name");
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "type", "type");
                                                        _____salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ________priceLevelRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesOrderItemLineDetailChildElement, _____salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                    BeanDefinitionBuilder ________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                    Element ________markupInfoChildElement = DomUtils.getChildElementByTagName(_____salesOrderItemLineDetailChildElement, "markup-info");
                                                    if (________markupInfoChildElement!= null) {
                                                        parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percentBased", "percentBased");
                                                        parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "value", "value");
                                                        parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percent", "percent");
                                                        if (!parseObjectRef(________markupInfoChildElement, ________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                            BeanDefinitionBuilder _________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________markupInfoChildElement, "price-level-ref");
                                                            if (_________priceLevelRefChildElement!= null) {
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "value", "value");
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "name", "name");
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "type", "type");
                                                                ________markupInfoBuilder.addPropertyValue("priceLevelRef", _________priceLevelRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        _____salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ________markupInfoBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____salesOrderItemLineDetailBuilder, _____salesOrderItemLineDetailChildElement, "qty", "qty");
                                                if (!parseObjectRef(_____salesOrderItemLineDetailChildElement, _____salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                    BeanDefinitionBuilder ________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                    Element ________uomRefChildElement = DomUtils.getChildElementByTagName(_____salesOrderItemLineDetailChildElement, "uom-ref");
                                                    if (________uomRefChildElement!= null) {
                                                        parseProperty(________uomRefBuilder, ________uomRefChildElement, "unit", "unit");
                                                        _____salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", ________uomRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesOrderItemLineDetailChildElement, _____salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                    BeanDefinitionBuilder ________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_____salesOrderItemLineDetailChildElement, "item-account-ref");
                                                    if (________itemAccountRefChildElement!= null) {
                                                        parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "value", "value");
                                                        parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "name", "name");
                                                        parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "type", "type");
                                                        _____salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ________itemAccountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesOrderItemLineDetailChildElement, _____salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                    BeanDefinitionBuilder ________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_____salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                    if (________inventorySiteRefChildElement!= null) {
                                                        parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "value", "value");
                                                        parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "name", "name");
                                                        parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "type", "type");
                                                        _____salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ________inventorySiteRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____salesOrderItemLineDetailChildElement, _____salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                    BeanDefinitionBuilder ________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                    if (________taxCodeRefChildElement!= null) {
                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "value", "value");
                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "name", "name");
                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "type", "type");
                                                        _____salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ________taxCodeRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____salesOrderItemLineDetailBuilder, _____salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                builder.addPropertyValue("salesOrderItemLineDetail", _____salesOrderItemLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                            BeanDefinitionBuilder _____itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                            Element _____itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                            if (_____itemReceiptLineDetailChildElement!= null) {
                                                if (!parseObjectRef(_____itemReceiptLineDetailChildElement, _____itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                    BeanDefinitionBuilder ______itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(_____itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                    if (______itemReceiptLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______itemReceiptLineDetailExChildElement, ______itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", ______itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("itemReceiptLineDetail", _____itemReceiptLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                            BeanDefinitionBuilder _____journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                            Element _____journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                            if (_____journalEntryLineDetailChildElement!= null) {
                                                parseProperty(_____journalEntryLineDetailBuilder, _____journalEntryLineDetailChildElement, "postingType", "postingType");
                                                if (!parseObjectRef(_____journalEntryLineDetailChildElement, _____journalEntryLineDetailBuilder, "entity", "entity")) {
                                                    BeanDefinitionBuilder ______entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                    Element ______entityChildElement = DomUtils.getChildElementByTagName(_____journalEntryLineDetailChildElement, "entity");
                                                    if (______entityChildElement!= null) {
                                                        parseProperty(______entityBuilder, ______entityChildElement, "type", "type");
                                                        if (!parseObjectRef(______entityChildElement, ______entityBuilder, "entity-ref", "entityRef")) {
                                                            BeanDefinitionBuilder _______entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______entityRefChildElement = DomUtils.getChildElementByTagName(______entityChildElement, "entity-ref");
                                                            if (_______entityRefChildElement!= null) {
                                                                parseProperty(_______entityRefBuilder, _______entityRefChildElement, "value", "value");
                                                                parseProperty(_______entityRefBuilder, _______entityRefChildElement, "name", "name");
                                                                parseProperty(_______entityRefBuilder, _______entityRefChildElement, "type", "type");
                                                                ______entityBuilder.addPropertyValue("entityRef", _______entityRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        _____journalEntryLineDetailBuilder.addPropertyValue("entity", ______entityBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____journalEntryLineDetailChildElement, _____journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                    BeanDefinitionBuilder ______accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______accountRefChildElement = DomUtils.getChildElementByTagName(_____journalEntryLineDetailChildElement, "account-ref");
                                                    if (______accountRefChildElement!= null) {
                                                        parseProperty(______accountRefBuilder, ______accountRefChildElement, "value", "value");
                                                        parseProperty(______accountRefBuilder, ______accountRefChildElement, "name", "name");
                                                        parseProperty(______accountRefBuilder, ______accountRefChildElement, "type", "type");
                                                        _____journalEntryLineDetailBuilder.addPropertyValue("accountRef", ______accountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____journalEntryLineDetailChildElement, _____journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                    BeanDefinitionBuilder ______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______classRefChildElement = DomUtils.getChildElementByTagName(_____journalEntryLineDetailChildElement, "class-ref");
                                                    if (______classRefChildElement!= null) {
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "value", "value");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "name", "name");
                                                        parseProperty(______classRefBuilder, ______classRefChildElement, "type", "type");
                                                        _____journalEntryLineDetailBuilder.addPropertyValue("classRef", ______classRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____journalEntryLineDetailChildElement, _____journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                    BeanDefinitionBuilder ______departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______departmentRefChildElement = DomUtils.getChildElementByTagName(_____journalEntryLineDetailChildElement, "department-ref");
                                                    if (______departmentRefChildElement!= null) {
                                                        parseProperty(______departmentRefBuilder, ______departmentRefChildElement, "value", "value");
                                                        parseProperty(______departmentRefBuilder, ______departmentRefChildElement, "name", "name");
                                                        parseProperty(______departmentRefBuilder, ______departmentRefChildElement, "type", "type");
                                                        _____journalEntryLineDetailBuilder.addPropertyValue("departmentRef", ______departmentRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(_____journalEntryLineDetailChildElement, _____journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                    BeanDefinitionBuilder ______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____journalEntryLineDetailChildElement, "tax-code-ref");
                                                    if (______taxCodeRefChildElement!= null) {
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "value", "value");
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "name", "name");
                                                        parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "type", "type");
                                                        _____journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", ______taxCodeRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____journalEntryLineDetailBuilder, _____journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                parseProperty(_____journalEntryLineDetailBuilder, _____journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                parseProperty(_____journalEntryLineDetailBuilder, _____journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                if (!parseObjectRef(_____journalEntryLineDetailChildElement, _____journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                    BeanDefinitionBuilder ______journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(_____journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                    if (______journalEntryLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______journalEntryLineDetailExChildElement, ______journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", ______journalEntryLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("journalEntryLineDetail", _____journalEntryLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                            BeanDefinitionBuilder _____groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                            Element _____groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                            if (_____groupLineDetailChildElement!= null) {
                                                if (!parseObjectRef(_____groupLineDetailChildElement, _____groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                    BeanDefinitionBuilder ______groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______groupItemRefChildElement = DomUtils.getChildElementByTagName(_____groupLineDetailChildElement, "group-item-ref");
                                                    if (______groupItemRefChildElement!= null) {
                                                        parseProperty(______groupItemRefBuilder, ______groupItemRefChildElement, "value", "value");
                                                        parseProperty(______groupItemRefBuilder, ______groupItemRefChildElement, "name", "name");
                                                        parseProperty(______groupItemRefBuilder, ______groupItemRefChildElement, "type", "type");
                                                        _____groupLineDetailBuilder.addPropertyValue("groupItemRef", ______groupItemRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____groupLineDetailBuilder, _____groupLineDetailChildElement, "quantity", "quantity");
                                                parseProperty(_____groupLineDetailBuilder, _____groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                parseListAndSetProperty(_____groupLineDetailChildElement, _____groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                    public BeanDefinition parse(Element element) {
                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                        parseProperty(builder, element, "id", "id");
                                                        parseProperty(builder, element, "lineNum", "lineNum");
                                                        parseProperty(builder, element, "description", "description");
                                                        parseProperty(builder, element, "amount", "amount");
                                                        parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                            public BeanDefinition parse(Element element) {
                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                parseProperty(builder, element, "txnId", "txnId");
                                                                parseProperty(builder, element, "txnType", "txnType");
                                                                parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                return builder.getBeanDefinition();
                                                            }

                                                        }
                                                        );
                                                        parseProperty(builder, element, "detailType", "detailType");
                                                        if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                            BeanDefinitionBuilder _______paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                            Element _______paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                            if (_______paymentLineDetailChildElement!= null) {
                                                                if (!parseObjectRef(_______paymentLineDetailChildElement, _______paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                    BeanDefinitionBuilder ________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________itemRefChildElement = DomUtils.getChildElementByTagName(_______paymentLineDetailChildElement, "item-ref");
                                                                    if (________itemRefChildElement!= null) {
                                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "value", "value");
                                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "name", "name");
                                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "type", "type");
                                                                        _______paymentLineDetailBuilder.addPropertyValue("itemRef", ________itemRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______paymentLineDetailBuilder, _______paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                if (!parseObjectRef(_______paymentLineDetailChildElement, _______paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                    BeanDefinitionBuilder ________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________classRefChildElement = DomUtils.getChildElementByTagName(_______paymentLineDetailChildElement, "class-ref");
                                                                    if (________classRefChildElement!= null) {
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "value", "value");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "name", "name");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "type", "type");
                                                                        _______paymentLineDetailBuilder.addPropertyValue("classRef", ________classRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______paymentLineDetailBuilder, _______paymentLineDetailChildElement, "balance", "balance");
                                                                if (!parseObjectRef(_______paymentLineDetailChildElement, _______paymentLineDetailBuilder, "discount", "discount")) {
                                                                    BeanDefinitionBuilder ________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                    Element ________discountChildElement = DomUtils.getChildElementByTagName(_______paymentLineDetailChildElement, "discount");
                                                                    if (________discountChildElement!= null) {
                                                                        if (!parseObjectRef(________discountChildElement, ________discountBuilder, "discount-ref", "discountRef")) {
                                                                            BeanDefinitionBuilder _________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________discountRefChildElement = DomUtils.getChildElementByTagName(________discountChildElement, "discount-ref");
                                                                            if (_________discountRefChildElement!= null) {
                                                                                parseProperty(_________discountRefBuilder, _________discountRefChildElement, "value", "value");
                                                                                parseProperty(_________discountRefBuilder, _________discountRefChildElement, "name", "name");
                                                                                parseProperty(_________discountRefBuilder, _________discountRefChildElement, "type", "type");
                                                                                ________discountBuilder.addPropertyValue("discountRef", _________discountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________discountBuilder, ________discountChildElement, "percentBased", "percentBased");
                                                                        parseProperty(________discountBuilder, ________discountChildElement, "discountPercent", "discountPercent");
                                                                        if (!parseObjectRef(________discountChildElement, ________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                            BeanDefinitionBuilder _________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________discountAccountRefChildElement = DomUtils.getChildElementByTagName(________discountChildElement, "discount-account-ref");
                                                                            if (_________discountAccountRefChildElement!= null) {
                                                                                parseProperty(_________discountAccountRefBuilder, _________discountAccountRefChildElement, "value", "value");
                                                                                parseProperty(_________discountAccountRefBuilder, _________discountAccountRefChildElement, "name", "name");
                                                                                parseProperty(_________discountAccountRefBuilder, _________discountAccountRefChildElement, "type", "type");
                                                                                ________discountBuilder.addPropertyValue("discountAccountRef", _________discountAccountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        _______paymentLineDetailBuilder.addPropertyValue("discount", ________discountBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______paymentLineDetailChildElement, _______paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                    BeanDefinitionBuilder ________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________paymentLineExChildElement = DomUtils.getChildElementByTagName(_______paymentLineDetailChildElement, "payment-line-ex");
                                                                    if (________paymentLineExChildElement!= null) {
                                                                        parseListAndSetProperty(________paymentLineExChildElement, ________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______paymentLineDetailBuilder.addPropertyValue("paymentLineEx", ________paymentLineExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("paymentLineDetail", _______paymentLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                            BeanDefinitionBuilder _______discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                            Element _______discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                            if (_______discountLineDetailChildElement!= null) {
                                                                parseProperty(_______discountLineDetailBuilder, _______discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                if (!parseObjectRef(_______discountLineDetailChildElement, _______discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                    BeanDefinitionBuilder _________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________discountRefChildElement = DomUtils.getChildElementByTagName(_______discountLineDetailChildElement, "discount-ref");
                                                                    if (_________discountRefChildElement!= null) {
                                                                        parseProperty(_________discountRefBuilder, _________discountRefChildElement, "value", "value");
                                                                        parseProperty(_________discountRefBuilder, _________discountRefChildElement, "name", "name");
                                                                        parseProperty(_________discountRefBuilder, _________discountRefChildElement, "type", "type");
                                                                        _______discountLineDetailBuilder.addPropertyValue("discountRef", _________discountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______discountLineDetailBuilder, _______discountLineDetailChildElement, "percentBased", "percentBased");
                                                                parseProperty(_______discountLineDetailBuilder, _______discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                if (!parseObjectRef(_______discountLineDetailChildElement, _______discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                    BeanDefinitionBuilder _________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_______discountLineDetailChildElement, "discount-account-ref");
                                                                    if (_________discountAccountRefChildElement!= null) {
                                                                        parseProperty(_________discountAccountRefBuilder, _________discountAccountRefChildElement, "value", "value");
                                                                        parseProperty(_________discountAccountRefBuilder, _________discountAccountRefChildElement, "name", "name");
                                                                        parseProperty(_________discountAccountRefBuilder, _________discountAccountRefChildElement, "type", "type");
                                                                        _______discountLineDetailBuilder.addPropertyValue("discountAccountRef", _________discountAccountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______discountLineDetailBuilder, _______discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                if (!parseObjectRef(_______discountLineDetailChildElement, _______discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                    BeanDefinitionBuilder ________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________classRefChildElement = DomUtils.getChildElementByTagName(_______discountLineDetailChildElement, "class-ref");
                                                                    if (________classRefChildElement!= null) {
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "value", "value");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "name", "name");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "type", "type");
                                                                        _______discountLineDetailBuilder.addPropertyValue("classRef", ________classRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______discountLineDetailChildElement, _______discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                    BeanDefinitionBuilder ________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______discountLineDetailChildElement, "tax-code-ref");
                                                                    if (________taxCodeRefChildElement!= null) {
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "value", "value");
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "name", "name");
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "type", "type");
                                                                        _______discountLineDetailBuilder.addPropertyValue("taxCodeRef", ________taxCodeRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______discountLineDetailChildElement, _______discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(_______discountLineDetailChildElement, "discount-line-detail-ex");
                                                                    if (________discountLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________discountLineDetailExChildElement, ________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", ________discountLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("discountLineDetail", _______discountLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                            BeanDefinitionBuilder _______taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                            Element _______taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                            if (_______taxLineDetailChildElement!= null) {
                                                                if (!parseObjectRef(_______taxLineDetailChildElement, _______taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                    BeanDefinitionBuilder ________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________taxRateRefChildElement = DomUtils.getChildElementByTagName(_______taxLineDetailChildElement, "tax-rate-ref");
                                                                    if (________taxRateRefChildElement!= null) {
                                                                        parseProperty(________taxRateRefBuilder, ________taxRateRefChildElement, "value", "value");
                                                                        parseProperty(________taxRateRefBuilder, ________taxRateRefChildElement, "name", "name");
                                                                        parseProperty(________taxRateRefBuilder, ________taxRateRefChildElement, "type", "type");
                                                                        _______taxLineDetailBuilder.addPropertyValue("taxRateRef", ________taxRateRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______taxLineDetailBuilder, _______taxLineDetailChildElement, "percentBased", "percentBased");
                                                                parseProperty(_______taxLineDetailBuilder, _______taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                parseProperty(_______taxLineDetailBuilder, _______taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                parseProperty(_______taxLineDetailBuilder, _______taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                parseProperty(_______taxLineDetailBuilder, _______taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                parseProperty(_______taxLineDetailBuilder, _______taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                if (!parseObjectRef(_______taxLineDetailChildElement, _______taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(_______taxLineDetailChildElement, "tax-line-detail-ex");
                                                                    if (________taxLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________taxLineDetailExChildElement, ________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", ________taxLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("taxLineDetail", _______taxLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                            BeanDefinitionBuilder _______salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                            Element _______salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                            if (_______salesItemLineDetailChildElement!= null) {
                                                                parseProperty(_______salesItemLineDetailBuilder, _______salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                if (!parseObjectRef(_______salesItemLineDetailChildElement, _______salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                    BeanDefinitionBuilder _________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________itemRefChildElement = DomUtils.getChildElementByTagName(_______salesItemLineDetailChildElement, "item-ref");
                                                                    if (_________itemRefChildElement!= null) {
                                                                        parseProperty(_________itemRefBuilder, _________itemRefChildElement, "value", "value");
                                                                        parseProperty(_________itemRefBuilder, _________itemRefChildElement, "name", "name");
                                                                        parseProperty(_________itemRefBuilder, _________itemRefChildElement, "type", "type");
                                                                        _______salesItemLineDetailBuilder.addPropertyValue("itemRef", _________itemRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesItemLineDetailChildElement, _______salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                    BeanDefinitionBuilder _________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________classRefChildElement = DomUtils.getChildElementByTagName(_______salesItemLineDetailChildElement, "class-ref");
                                                                    if (_________classRefChildElement!= null) {
                                                                        parseProperty(_________classRefBuilder, _________classRefChildElement, "value", "value");
                                                                        parseProperty(_________classRefBuilder, _________classRefChildElement, "name", "name");
                                                                        parseProperty(_________classRefBuilder, _________classRefChildElement, "type", "type");
                                                                        _______salesItemLineDetailBuilder.addPropertyValue("classRef", _________classRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______salesItemLineDetailBuilder, _______salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                parseProperty(_______salesItemLineDetailBuilder, _______salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                if (!parseObjectRef(_______salesItemLineDetailChildElement, _______salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                    BeanDefinitionBuilder _________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______salesItemLineDetailChildElement, "price-level-ref");
                                                                    if (_________priceLevelRefChildElement!= null) {
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "value", "value");
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "name", "name");
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "type", "type");
                                                                        _______salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", _________priceLevelRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesItemLineDetailChildElement, _______salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                    BeanDefinitionBuilder _________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                    Element _________markupInfoChildElement = DomUtils.getChildElementByTagName(_______salesItemLineDetailChildElement, "markup-info");
                                                                    if (_________markupInfoChildElement!= null) {
                                                                        parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percentBased", "percentBased");
                                                                        parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "value", "value");
                                                                        parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percent", "percent");
                                                                        if (!parseObjectRef(_________markupInfoChildElement, _________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                            BeanDefinitionBuilder __________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________markupInfoChildElement, "price-level-ref");
                                                                            if (__________priceLevelRefChildElement!= null) {
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "value", "value");
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "name", "name");
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "type", "type");
                                                                                _________markupInfoBuilder.addPropertyValue("priceLevelRef", __________priceLevelRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        _______salesItemLineDetailBuilder.addPropertyValue("markupInfo", _________markupInfoBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______salesItemLineDetailBuilder, _______salesItemLineDetailChildElement, "qty", "qty");
                                                                if (!parseObjectRef(_______salesItemLineDetailChildElement, _______salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                    BeanDefinitionBuilder _________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                    Element _________uomRefChildElement = DomUtils.getChildElementByTagName(_______salesItemLineDetailChildElement, "uom-ref");
                                                                    if (_________uomRefChildElement!= null) {
                                                                        parseProperty(_________uomRefBuilder, _________uomRefChildElement, "unit", "unit");
                                                                        _______salesItemLineDetailBuilder.addPropertyValue("uomRef", _________uomRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesItemLineDetailChildElement, _______salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                    BeanDefinitionBuilder _________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_______salesItemLineDetailChildElement, "item-account-ref");
                                                                    if (_________itemAccountRefChildElement!= null) {
                                                                        parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "value", "value");
                                                                        parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "name", "name");
                                                                        parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "type", "type");
                                                                        _______salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", _________itemAccountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesItemLineDetailChildElement, _______salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                    BeanDefinitionBuilder _________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_______salesItemLineDetailChildElement, "inventory-site-ref");
                                                                    if (_________inventorySiteRefChildElement!= null) {
                                                                        parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "value", "value");
                                                                        parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "name", "name");
                                                                        parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "type", "type");
                                                                        _______salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _________inventorySiteRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesItemLineDetailChildElement, _______salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                    BeanDefinitionBuilder _________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______salesItemLineDetailChildElement, "tax-code-ref");
                                                                    if (_________taxCodeRefChildElement!= null) {
                                                                        parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "value", "value");
                                                                        parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "name", "name");
                                                                        parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "type", "type");
                                                                        _______salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", _________taxCodeRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______salesItemLineDetailBuilder, _______salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                parseProperty(_______salesItemLineDetailBuilder, _______salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                if (!parseObjectRef(_______salesItemLineDetailChildElement, _______salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_______salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                    if (________salesItemLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________salesItemLineDetailExChildElement, ________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("salesItemLineDetail", _______salesItemLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                            BeanDefinitionBuilder _______descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                            Element _______descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                            if (_______descriptionLineDetailChildElement!= null) {
                                                                parseProperty(_______descriptionLineDetailBuilder, _______descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                if (!parseObjectRef(_______descriptionLineDetailChildElement, _______descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                    BeanDefinitionBuilder ________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______descriptionLineDetailChildElement, "tax-code-ref");
                                                                    if (________taxCodeRefChildElement!= null) {
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "value", "value");
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "name", "name");
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "type", "type");
                                                                        _______descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", ________taxCodeRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______descriptionLineDetailChildElement, _______descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(_______descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                    if (________descriptionLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________descriptionLineDetailExChildElement, ________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", ________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("descriptionLineDetail", _______descriptionLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                            BeanDefinitionBuilder _______itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                            Element _______itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                            if (_______itemBasedExpenseLineDetailChildElement!= null) {
                                                                parseProperty(_______itemBasedExpenseLineDetailBuilder, _______itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                    BeanDefinitionBuilder _________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________itemRefChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                    if (_________itemRefChildElement!= null) {
                                                                        parseProperty(_________itemRefBuilder, _________itemRefChildElement, "value", "value");
                                                                        parseProperty(_________itemRefBuilder, _________itemRefChildElement, "name", "name");
                                                                        parseProperty(_________itemRefBuilder, _________itemRefChildElement, "type", "type");
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", _________itemRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                    BeanDefinitionBuilder _________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________classRefChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                    if (_________classRefChildElement!= null) {
                                                                        parseProperty(_________classRefBuilder, _________classRefChildElement, "value", "value");
                                                                        parseProperty(_________classRefBuilder, _________classRefChildElement, "name", "name");
                                                                        parseProperty(_________classRefBuilder, _________classRefChildElement, "type", "type");
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _________classRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______itemBasedExpenseLineDetailBuilder, _______itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                parseProperty(_______itemBasedExpenseLineDetailBuilder, _______itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                    BeanDefinitionBuilder _________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                    if (_________priceLevelRefChildElement!= null) {
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "value", "value");
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "name", "name");
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "type", "type");
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", _________priceLevelRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                    BeanDefinitionBuilder _________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                    Element _________markupInfoChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                    if (_________markupInfoChildElement!= null) {
                                                                        parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percentBased", "percentBased");
                                                                        parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "value", "value");
                                                                        parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percent", "percent");
                                                                        if (!parseObjectRef(_________markupInfoChildElement, _________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                            BeanDefinitionBuilder __________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________markupInfoChildElement, "price-level-ref");
                                                                            if (__________priceLevelRefChildElement!= null) {
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "value", "value");
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "name", "name");
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "type", "type");
                                                                                _________markupInfoBuilder.addPropertyValue("priceLevelRef", __________priceLevelRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _________markupInfoBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______itemBasedExpenseLineDetailBuilder, _______itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                    BeanDefinitionBuilder _________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                    Element _________uomRefChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                    if (_________uomRefChildElement!= null) {
                                                                        parseProperty(_________uomRefBuilder, _________uomRefChildElement, "unit", "unit");
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", _________uomRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                    BeanDefinitionBuilder _________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                    if (_________itemAccountRefChildElement!= null) {
                                                                        parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "value", "value");
                                                                        parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "name", "name");
                                                                        parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "type", "type");
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", _________itemAccountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                    BeanDefinitionBuilder _________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                    if (_________inventorySiteRefChildElement!= null) {
                                                                        parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "value", "value");
                                                                        parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "name", "name");
                                                                        parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "type", "type");
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", _________inventorySiteRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                    BeanDefinitionBuilder _________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                    if (_________taxCodeRefChildElement!= null) {
                                                                        parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "value", "value");
                                                                        parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "name", "name");
                                                                        parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "type", "type");
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _________taxCodeRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                    BeanDefinitionBuilder ________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________customerRefChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                    if (________customerRefChildElement!= null) {
                                                                        parseProperty(________customerRefBuilder, ________customerRefChildElement, "value", "value");
                                                                        parseProperty(________customerRefBuilder, ________customerRefChildElement, "name", "name");
                                                                        parseProperty(________customerRefBuilder, ________customerRefChildElement, "type", "type");
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ________customerRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______itemBasedExpenseLineDetailBuilder, _______itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                parseProperty(_______itemBasedExpenseLineDetailBuilder, _______itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                if (!parseObjectRef(_______itemBasedExpenseLineDetailChildElement, _______itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(_______itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                    if (________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________itemBasedExpenseLineDetailExChildElement, ________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", ________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("itemBasedExpenseLineDetail", _______itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                            BeanDefinitionBuilder _______accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                            Element _______accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                            if (_______accountBasedExpenseLineDetailChildElement!= null) {
                                                                if (!parseObjectRef(_______accountBasedExpenseLineDetailChildElement, _______accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                    BeanDefinitionBuilder ________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________customerRefChildElement = DomUtils.getChildElementByTagName(_______accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                    if (________customerRefChildElement!= null) {
                                                                        parseProperty(________customerRefBuilder, ________customerRefChildElement, "value", "value");
                                                                        parseProperty(________customerRefBuilder, ________customerRefChildElement, "name", "name");
                                                                        parseProperty(________customerRefBuilder, ________customerRefChildElement, "type", "type");
                                                                        _______accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ________customerRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______accountBasedExpenseLineDetailChildElement, _______accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                    BeanDefinitionBuilder ________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________classRefChildElement = DomUtils.getChildElementByTagName(_______accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                    if (________classRefChildElement!= null) {
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "value", "value");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "name", "name");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "type", "type");
                                                                        _______accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ________classRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______accountBasedExpenseLineDetailChildElement, _______accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                    BeanDefinitionBuilder ________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________accountRefChildElement = DomUtils.getChildElementByTagName(_______accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                    if (________accountRefChildElement!= null) {
                                                                        parseProperty(________accountRefBuilder, ________accountRefChildElement, "value", "value");
                                                                        parseProperty(________accountRefBuilder, ________accountRefChildElement, "name", "name");
                                                                        parseProperty(________accountRefBuilder, ________accountRefChildElement, "type", "type");
                                                                        _______accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", ________accountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______accountBasedExpenseLineDetailBuilder, _______accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                if (!parseObjectRef(_______accountBasedExpenseLineDetailChildElement, _______accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                    BeanDefinitionBuilder ________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                    Element ________markupInfoChildElement = DomUtils.getChildElementByTagName(_______accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                    if (________markupInfoChildElement!= null) {
                                                                        parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percentBased", "percentBased");
                                                                        parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "value", "value");
                                                                        parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percent", "percent");
                                                                        if (!parseObjectRef(________markupInfoChildElement, ________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                            BeanDefinitionBuilder _________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________markupInfoChildElement, "price-level-ref");
                                                                            if (_________priceLevelRefChildElement!= null) {
                                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "value", "value");
                                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "name", "name");
                                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "type", "type");
                                                                                ________markupInfoBuilder.addPropertyValue("priceLevelRef", _________priceLevelRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        _______accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ________markupInfoBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______accountBasedExpenseLineDetailBuilder, _______accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                if (!parseObjectRef(_______accountBasedExpenseLineDetailChildElement, _______accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                    BeanDefinitionBuilder ________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                    if (________taxCodeRefChildElement!= null) {
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "value", "value");
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "name", "name");
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "type", "type");
                                                                        _______accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ________taxCodeRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______accountBasedExpenseLineDetailBuilder, _______accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                if (!parseObjectRef(_______accountBasedExpenseLineDetailChildElement, _______accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(_______accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                    if (________expenseDetailLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________expenseDetailLineDetailExChildElement, ________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", ________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("accountBasedExpenseLineDetail", _______accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                            BeanDefinitionBuilder _______depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                            Element _______depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                            if (_______depositLineDetailChildElement!= null) {
                                                                if (!parseObjectRef(_______depositLineDetailChildElement, _______depositLineDetailBuilder, "entity", "entity")) {
                                                                    BeanDefinitionBuilder ________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________entityChildElement = DomUtils.getChildElementByTagName(_______depositLineDetailChildElement, "entity");
                                                                    if (________entityChildElement!= null) {
                                                                        parseProperty(________entityBuilder, ________entityChildElement, "value", "value");
                                                                        parseProperty(________entityBuilder, ________entityChildElement, "name", "name");
                                                                        parseProperty(________entityBuilder, ________entityChildElement, "type", "type");
                                                                        _______depositLineDetailBuilder.addPropertyValue("entity", ________entityBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______depositLineDetailChildElement, _______depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                    BeanDefinitionBuilder ________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________classRefChildElement = DomUtils.getChildElementByTagName(_______depositLineDetailChildElement, "class-ref");
                                                                    if (________classRefChildElement!= null) {
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "value", "value");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "name", "name");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "type", "type");
                                                                        _______depositLineDetailBuilder.addPropertyValue("classRef", ________classRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______depositLineDetailChildElement, _______depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                    BeanDefinitionBuilder ________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________accountRefChildElement = DomUtils.getChildElementByTagName(_______depositLineDetailChildElement, "account-ref");
                                                                    if (________accountRefChildElement!= null) {
                                                                        parseProperty(________accountRefBuilder, ________accountRefChildElement, "value", "value");
                                                                        parseProperty(________accountRefBuilder, ________accountRefChildElement, "name", "name");
                                                                        parseProperty(________accountRefBuilder, ________accountRefChildElement, "type", "type");
                                                                        _______depositLineDetailBuilder.addPropertyValue("accountRef", ________accountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______depositLineDetailChildElement, _______depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                    BeanDefinitionBuilder ________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(_______depositLineDetailChildElement, "payment-method-ref");
                                                                    if (________paymentMethodRefChildElement!= null) {
                                                                        parseProperty(________paymentMethodRefBuilder, ________paymentMethodRefChildElement, "value", "value");
                                                                        parseProperty(________paymentMethodRefBuilder, ________paymentMethodRefChildElement, "name", "name");
                                                                        parseProperty(________paymentMethodRefBuilder, ________paymentMethodRefChildElement, "type", "type");
                                                                        _______depositLineDetailBuilder.addPropertyValue("paymentMethodRef", ________paymentMethodRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______depositLineDetailBuilder, _______depositLineDetailChildElement, "checkNum", "checkNum");
                                                                parseProperty(_______depositLineDetailBuilder, _______depositLineDetailChildElement, "txnType", "txnType");
                                                                if (!parseObjectRef(_______depositLineDetailChildElement, _______depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(_______depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                    if (________depositLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________depositLineDetailExChildElement, ________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", ________depositLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("depositLineDetail", _______depositLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                            BeanDefinitionBuilder _______purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                            Element _______purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                            if (_______purchaseOrderItemLineDetailChildElement!= null) {
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                    BeanDefinitionBuilder _________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element _________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                    if (_________salesItemLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(_________salesItemLineDetailExChildElement, _________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                    BeanDefinitionBuilder __________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________itemRefChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                    if (__________itemRefChildElement!= null) {
                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "value", "value");
                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "name", "name");
                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "type", "type");
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", __________itemRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                    BeanDefinitionBuilder __________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________classRefChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                    if (__________classRefChildElement!= null) {
                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "value", "value");
                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "name", "name");
                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "type", "type");
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", __________classRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                    BeanDefinitionBuilder __________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                    if (__________priceLevelRefChildElement!= null) {
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "value", "value");
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "name", "name");
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "type", "type");
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", __________priceLevelRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                    BeanDefinitionBuilder __________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                    Element __________markupInfoChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                    if (__________markupInfoChildElement!= null) {
                                                                        parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percentBased", "percentBased");
                                                                        parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "value", "value");
                                                                        parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percent", "percent");
                                                                        if (!parseObjectRef(__________markupInfoChildElement, __________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                            BeanDefinitionBuilder ___________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________markupInfoChildElement, "price-level-ref");
                                                                            if (___________priceLevelRefChildElement!= null) {
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "value", "value");
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "name", "name");
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "type", "type");
                                                                                __________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________priceLevelRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", __________markupInfoBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                    BeanDefinitionBuilder __________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                    Element __________uomRefChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                    if (__________uomRefChildElement!= null) {
                                                                        parseProperty(__________uomRefBuilder, __________uomRefChildElement, "unit", "unit");
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", __________uomRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                    BeanDefinitionBuilder __________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                    if (__________itemAccountRefChildElement!= null) {
                                                                        parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "value", "value");
                                                                        parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "name", "name");
                                                                        parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "type", "type");
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", __________itemAccountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                    BeanDefinitionBuilder __________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                    if (__________inventorySiteRefChildElement!= null) {
                                                                        parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "value", "value");
                                                                        parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "name", "name");
                                                                        parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "type", "type");
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", __________inventorySiteRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                    BeanDefinitionBuilder __________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                    if (__________taxCodeRefChildElement!= null) {
                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "value", "value");
                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "name", "name");
                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "type", "type");
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", __________taxCodeRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                parseProperty(_______purchaseOrderItemLineDetailBuilder, _______purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                if (!parseObjectRef(_______purchaseOrderItemLineDetailChildElement, _______purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_______purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                    if (________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________purchaseOrderItemLineDetailExChildElement, ________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", ________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("purchaseOrderItemLineDetail", _______purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                            BeanDefinitionBuilder _______salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                            Element _______salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                            if (_______salesOrderItemLineDetailChildElement!= null) {
                                                                parseProperty(_______salesOrderItemLineDetailBuilder, _______salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                parseProperty(_______salesOrderItemLineDetailBuilder, _______salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                parseProperty(_______salesOrderItemLineDetailBuilder, _______salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                if (!parseObjectRef(_______salesOrderItemLineDetailChildElement, _______salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                    BeanDefinitionBuilder _________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element _________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_______salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                    if (_________salesItemLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(_________salesItemLineDetailExChildElement, _________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______salesOrderItemLineDetailBuilder, _______salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                if (!parseObjectRef(_______salesOrderItemLineDetailChildElement, _______salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                    BeanDefinitionBuilder __________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________itemRefChildElement = DomUtils.getChildElementByTagName(_______salesOrderItemLineDetailChildElement, "item-ref");
                                                                    if (__________itemRefChildElement!= null) {
                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "value", "value");
                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "name", "name");
                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "type", "type");
                                                                        _______salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", __________itemRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesOrderItemLineDetailChildElement, _______salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                    BeanDefinitionBuilder __________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________classRefChildElement = DomUtils.getChildElementByTagName(_______salesOrderItemLineDetailChildElement, "class-ref");
                                                                    if (__________classRefChildElement!= null) {
                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "value", "value");
                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "name", "name");
                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "type", "type");
                                                                        _______salesOrderItemLineDetailBuilder.addPropertyValue("classRef", __________classRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______salesOrderItemLineDetailBuilder, _______salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                parseProperty(_______salesOrderItemLineDetailBuilder, _______salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                if (!parseObjectRef(_______salesOrderItemLineDetailChildElement, _______salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                    BeanDefinitionBuilder __________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                    if (__________priceLevelRefChildElement!= null) {
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "value", "value");
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "name", "name");
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "type", "type");
                                                                        _______salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", __________priceLevelRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesOrderItemLineDetailChildElement, _______salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                    BeanDefinitionBuilder __________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                    Element __________markupInfoChildElement = DomUtils.getChildElementByTagName(_______salesOrderItemLineDetailChildElement, "markup-info");
                                                                    if (__________markupInfoChildElement!= null) {
                                                                        parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percentBased", "percentBased");
                                                                        parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "value", "value");
                                                                        parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percent", "percent");
                                                                        if (!parseObjectRef(__________markupInfoChildElement, __________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                            BeanDefinitionBuilder ___________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________markupInfoChildElement, "price-level-ref");
                                                                            if (___________priceLevelRefChildElement!= null) {
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "value", "value");
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "name", "name");
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "type", "type");
                                                                                __________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________priceLevelRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        _______salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", __________markupInfoBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______salesOrderItemLineDetailBuilder, _______salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                if (!parseObjectRef(_______salesOrderItemLineDetailChildElement, _______salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                    BeanDefinitionBuilder __________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                    Element __________uomRefChildElement = DomUtils.getChildElementByTagName(_______salesOrderItemLineDetailChildElement, "uom-ref");
                                                                    if (__________uomRefChildElement!= null) {
                                                                        parseProperty(__________uomRefBuilder, __________uomRefChildElement, "unit", "unit");
                                                                        _______salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", __________uomRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesOrderItemLineDetailChildElement, _______salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                    BeanDefinitionBuilder __________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_______salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                    if (__________itemAccountRefChildElement!= null) {
                                                                        parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "value", "value");
                                                                        parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "name", "name");
                                                                        parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "type", "type");
                                                                        _______salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", __________itemAccountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesOrderItemLineDetailChildElement, _______salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                    BeanDefinitionBuilder __________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_______salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                    if (__________inventorySiteRefChildElement!= null) {
                                                                        parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "value", "value");
                                                                        parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "name", "name");
                                                                        parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "type", "type");
                                                                        _______salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", __________inventorySiteRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______salesOrderItemLineDetailChildElement, _______salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                    BeanDefinitionBuilder __________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                    if (__________taxCodeRefChildElement!= null) {
                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "value", "value");
                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "name", "name");
                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "type", "type");
                                                                        _______salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", __________taxCodeRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______salesOrderItemLineDetailBuilder, _______salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                builder.addPropertyValue("salesOrderItemLineDetail", _______salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                            BeanDefinitionBuilder _______itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                            Element _______itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                            if (_______itemReceiptLineDetailChildElement!= null) {
                                                                if (!parseObjectRef(_______itemReceiptLineDetailChildElement, _______itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(_______itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                    if (________itemReceiptLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________itemReceiptLineDetailExChildElement, ________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", ________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("itemReceiptLineDetail", _______itemReceiptLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                            BeanDefinitionBuilder _______journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                            Element _______journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                            if (_______journalEntryLineDetailChildElement!= null) {
                                                                parseProperty(_______journalEntryLineDetailBuilder, _______journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                if (!parseObjectRef(_______journalEntryLineDetailChildElement, _______journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                    BeanDefinitionBuilder ________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                    Element ________entityChildElement = DomUtils.getChildElementByTagName(_______journalEntryLineDetailChildElement, "entity");
                                                                    if (________entityChildElement!= null) {
                                                                        parseProperty(________entityBuilder, ________entityChildElement, "type", "type");
                                                                        if (!parseObjectRef(________entityChildElement, ________entityBuilder, "entity-ref", "entityRef")) {
                                                                            BeanDefinitionBuilder _________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________entityRefChildElement = DomUtils.getChildElementByTagName(________entityChildElement, "entity-ref");
                                                                            if (_________entityRefChildElement!= null) {
                                                                                parseProperty(_________entityRefBuilder, _________entityRefChildElement, "value", "value");
                                                                                parseProperty(_________entityRefBuilder, _________entityRefChildElement, "name", "name");
                                                                                parseProperty(_________entityRefBuilder, _________entityRefChildElement, "type", "type");
                                                                                ________entityBuilder.addPropertyValue("entityRef", _________entityRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        _______journalEntryLineDetailBuilder.addPropertyValue("entity", ________entityBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______journalEntryLineDetailChildElement, _______journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                    BeanDefinitionBuilder ________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________accountRefChildElement = DomUtils.getChildElementByTagName(_______journalEntryLineDetailChildElement, "account-ref");
                                                                    if (________accountRefChildElement!= null) {
                                                                        parseProperty(________accountRefBuilder, ________accountRefChildElement, "value", "value");
                                                                        parseProperty(________accountRefBuilder, ________accountRefChildElement, "name", "name");
                                                                        parseProperty(________accountRefBuilder, ________accountRefChildElement, "type", "type");
                                                                        _______journalEntryLineDetailBuilder.addPropertyValue("accountRef", ________accountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______journalEntryLineDetailChildElement, _______journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                    BeanDefinitionBuilder ________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________classRefChildElement = DomUtils.getChildElementByTagName(_______journalEntryLineDetailChildElement, "class-ref");
                                                                    if (________classRefChildElement!= null) {
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "value", "value");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "name", "name");
                                                                        parseProperty(________classRefBuilder, ________classRefChildElement, "type", "type");
                                                                        _______journalEntryLineDetailBuilder.addPropertyValue("classRef", ________classRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______journalEntryLineDetailChildElement, _______journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                    BeanDefinitionBuilder ________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________departmentRefChildElement = DomUtils.getChildElementByTagName(_______journalEntryLineDetailChildElement, "department-ref");
                                                                    if (________departmentRefChildElement!= null) {
                                                                        parseProperty(________departmentRefBuilder, ________departmentRefChildElement, "value", "value");
                                                                        parseProperty(________departmentRefBuilder, ________departmentRefChildElement, "name", "name");
                                                                        parseProperty(________departmentRefBuilder, ________departmentRefChildElement, "type", "type");
                                                                        _______journalEntryLineDetailBuilder.addPropertyValue("departmentRef", ________departmentRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(_______journalEntryLineDetailChildElement, _______journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                    BeanDefinitionBuilder ________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______journalEntryLineDetailChildElement, "tax-code-ref");
                                                                    if (________taxCodeRefChildElement!= null) {
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "value", "value");
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "name", "name");
                                                                        parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "type", "type");
                                                                        _______journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", ________taxCodeRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______journalEntryLineDetailBuilder, _______journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                parseProperty(_______journalEntryLineDetailBuilder, _______journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                parseProperty(_______journalEntryLineDetailBuilder, _______journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                if (!parseObjectRef(_______journalEntryLineDetailChildElement, _______journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(_______journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                    if (________journalEntryLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________journalEntryLineDetailExChildElement, ________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", ________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("journalEntryLineDetail", _______journalEntryLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                            BeanDefinitionBuilder _______groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                            Element _______groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                            if (_______groupLineDetailChildElement!= null) {
                                                                if (!parseObjectRef(_______groupLineDetailChildElement, _______groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                    BeanDefinitionBuilder ________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________groupItemRefChildElement = DomUtils.getChildElementByTagName(_______groupLineDetailChildElement, "group-item-ref");
                                                                    if (________groupItemRefChildElement!= null) {
                                                                        parseProperty(________groupItemRefBuilder, ________groupItemRefChildElement, "value", "value");
                                                                        parseProperty(________groupItemRefBuilder, ________groupItemRefChildElement, "name", "name");
                                                                        parseProperty(________groupItemRefBuilder, ________groupItemRefChildElement, "type", "type");
                                                                        _______groupLineDetailBuilder.addPropertyValue("groupItemRef", ________groupItemRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______groupLineDetailBuilder, _______groupLineDetailChildElement, "quantity", "quantity");
                                                                parseProperty(_______groupLineDetailBuilder, _______groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                parseListAndSetProperty(_______groupLineDetailChildElement, _______groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                    public BeanDefinition parse(Element element) {
                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                        parseProperty(builder, element, "id", "id");
                                                                        parseProperty(builder, element, "lineNum", "lineNum");
                                                                        parseProperty(builder, element, "description", "description");
                                                                        parseProperty(builder, element, "amount", "amount");
                                                                        parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                            public BeanDefinition parse(Element element) {
                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                parseProperty(builder, element, "txnId", "txnId");
                                                                                parseProperty(builder, element, "txnType", "txnType");
                                                                                parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                return builder.getBeanDefinition();
                                                                            }

                                                                        }
                                                                        );
                                                                        parseProperty(builder, element, "detailType", "detailType");
                                                                        if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                            BeanDefinitionBuilder _________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                            Element _________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                            if (_________paymentLineDetailChildElement!= null) {
                                                                                if (!parseObjectRef(_________paymentLineDetailChildElement, _________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                    BeanDefinitionBuilder __________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________itemRefChildElement = DomUtils.getChildElementByTagName(_________paymentLineDetailChildElement, "item-ref");
                                                                                    if (__________itemRefChildElement!= null) {
                                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "value", "value");
                                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "name", "name");
                                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "type", "type");
                                                                                        _________paymentLineDetailBuilder.addPropertyValue("itemRef", __________itemRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________paymentLineDetailBuilder, _________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                if (!parseObjectRef(_________paymentLineDetailChildElement, _________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                    BeanDefinitionBuilder __________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________classRefChildElement = DomUtils.getChildElementByTagName(_________paymentLineDetailChildElement, "class-ref");
                                                                                    if (__________classRefChildElement!= null) {
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "value", "value");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "name", "name");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "type", "type");
                                                                                        _________paymentLineDetailBuilder.addPropertyValue("classRef", __________classRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________paymentLineDetailBuilder, _________paymentLineDetailChildElement, "balance", "balance");
                                                                                if (!parseObjectRef(_________paymentLineDetailChildElement, _________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                    BeanDefinitionBuilder __________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                    Element __________discountChildElement = DomUtils.getChildElementByTagName(_________paymentLineDetailChildElement, "discount");
                                                                                    if (__________discountChildElement!= null) {
                                                                                        if (!parseObjectRef(__________discountChildElement, __________discountBuilder, "discount-ref", "discountRef")) {
                                                                                            BeanDefinitionBuilder ___________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________discountRefChildElement = DomUtils.getChildElementByTagName(__________discountChildElement, "discount-ref");
                                                                                            if (___________discountRefChildElement!= null) {
                                                                                                parseProperty(___________discountRefBuilder, ___________discountRefChildElement, "value", "value");
                                                                                                parseProperty(___________discountRefBuilder, ___________discountRefChildElement, "name", "name");
                                                                                                parseProperty(___________discountRefBuilder, ___________discountRefChildElement, "type", "type");
                                                                                                __________discountBuilder.addPropertyValue("discountRef", ___________discountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________discountBuilder, __________discountChildElement, "percentBased", "percentBased");
                                                                                        parseProperty(__________discountBuilder, __________discountChildElement, "discountPercent", "discountPercent");
                                                                                        if (!parseObjectRef(__________discountChildElement, __________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                            BeanDefinitionBuilder ___________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________discountAccountRefChildElement = DomUtils.getChildElementByTagName(__________discountChildElement, "discount-account-ref");
                                                                                            if (___________discountAccountRefChildElement!= null) {
                                                                                                parseProperty(___________discountAccountRefBuilder, ___________discountAccountRefChildElement, "value", "value");
                                                                                                parseProperty(___________discountAccountRefBuilder, ___________discountAccountRefChildElement, "name", "name");
                                                                                                parseProperty(___________discountAccountRefBuilder, ___________discountAccountRefChildElement, "type", "type");
                                                                                                __________discountBuilder.addPropertyValue("discountAccountRef", ___________discountAccountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        _________paymentLineDetailBuilder.addPropertyValue("discount", __________discountBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________paymentLineDetailChildElement, _________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                    BeanDefinitionBuilder __________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________paymentLineExChildElement = DomUtils.getChildElementByTagName(_________paymentLineDetailChildElement, "payment-line-ex");
                                                                                    if (__________paymentLineExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________paymentLineExChildElement, __________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", __________paymentLineExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("paymentLineDetail", _________paymentLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                            BeanDefinitionBuilder _________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                            Element _________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                            if (_________discountLineDetailChildElement!= null) {
                                                                                parseProperty(_________discountLineDetailBuilder, _________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                if (!parseObjectRef(_________discountLineDetailChildElement, _________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                    BeanDefinitionBuilder ___________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________discountRefChildElement = DomUtils.getChildElementByTagName(_________discountLineDetailChildElement, "discount-ref");
                                                                                    if (___________discountRefChildElement!= null) {
                                                                                        parseProperty(___________discountRefBuilder, ___________discountRefChildElement, "value", "value");
                                                                                        parseProperty(___________discountRefBuilder, ___________discountRefChildElement, "name", "name");
                                                                                        parseProperty(___________discountRefBuilder, ___________discountRefChildElement, "type", "type");
                                                                                        _________discountLineDetailBuilder.addPropertyValue("discountRef", ___________discountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________discountLineDetailBuilder, _________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                parseProperty(_________discountLineDetailBuilder, _________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                if (!parseObjectRef(_________discountLineDetailChildElement, _________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                    BeanDefinitionBuilder ___________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_________discountLineDetailChildElement, "discount-account-ref");
                                                                                    if (___________discountAccountRefChildElement!= null) {
                                                                                        parseProperty(___________discountAccountRefBuilder, ___________discountAccountRefChildElement, "value", "value");
                                                                                        parseProperty(___________discountAccountRefBuilder, ___________discountAccountRefChildElement, "name", "name");
                                                                                        parseProperty(___________discountAccountRefBuilder, ___________discountAccountRefChildElement, "type", "type");
                                                                                        _________discountLineDetailBuilder.addPropertyValue("discountAccountRef", ___________discountAccountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________discountLineDetailBuilder, _________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                if (!parseObjectRef(_________discountLineDetailChildElement, _________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                    BeanDefinitionBuilder __________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________classRefChildElement = DomUtils.getChildElementByTagName(_________discountLineDetailChildElement, "class-ref");
                                                                                    if (__________classRefChildElement!= null) {
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "value", "value");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "name", "name");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "type", "type");
                                                                                        _________discountLineDetailBuilder.addPropertyValue("classRef", __________classRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________discountLineDetailChildElement, _________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                    BeanDefinitionBuilder __________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________discountLineDetailChildElement, "tax-code-ref");
                                                                                    if (__________taxCodeRefChildElement!= null) {
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "value", "value");
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "name", "name");
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "type", "type");
                                                                                        _________discountLineDetailBuilder.addPropertyValue("taxCodeRef", __________taxCodeRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________discountLineDetailChildElement, _________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(_________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                    if (__________discountLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________discountLineDetailExChildElement, __________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", __________discountLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("discountLineDetail", _________discountLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                            BeanDefinitionBuilder _________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                            Element _________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                            if (_________taxLineDetailChildElement!= null) {
                                                                                if (!parseObjectRef(_________taxLineDetailChildElement, _________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                    BeanDefinitionBuilder __________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________taxRateRefChildElement = DomUtils.getChildElementByTagName(_________taxLineDetailChildElement, "tax-rate-ref");
                                                                                    if (__________taxRateRefChildElement!= null) {
                                                                                        parseProperty(__________taxRateRefBuilder, __________taxRateRefChildElement, "value", "value");
                                                                                        parseProperty(__________taxRateRefBuilder, __________taxRateRefChildElement, "name", "name");
                                                                                        parseProperty(__________taxRateRefBuilder, __________taxRateRefChildElement, "type", "type");
                                                                                        _________taxLineDetailBuilder.addPropertyValue("taxRateRef", __________taxRateRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________taxLineDetailBuilder, _________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                parseProperty(_________taxLineDetailBuilder, _________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                parseProperty(_________taxLineDetailBuilder, _________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                parseProperty(_________taxLineDetailBuilder, _________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                parseProperty(_________taxLineDetailBuilder, _________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                parseProperty(_________taxLineDetailBuilder, _________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                if (!parseObjectRef(_________taxLineDetailChildElement, _________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(_________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                    if (__________taxLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________taxLineDetailExChildElement, __________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", __________taxLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("taxLineDetail", _________taxLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                            BeanDefinitionBuilder _________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                            Element _________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                            if (_________salesItemLineDetailChildElement!= null) {
                                                                                parseProperty(_________salesItemLineDetailBuilder, _________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                if (!parseObjectRef(_________salesItemLineDetailChildElement, _________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                    BeanDefinitionBuilder ___________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________itemRefChildElement = DomUtils.getChildElementByTagName(_________salesItemLineDetailChildElement, "item-ref");
                                                                                    if (___________itemRefChildElement!= null) {
                                                                                        parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "value", "value");
                                                                                        parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "name", "name");
                                                                                        parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "type", "type");
                                                                                        _________salesItemLineDetailBuilder.addPropertyValue("itemRef", ___________itemRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesItemLineDetailChildElement, _________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                    BeanDefinitionBuilder ___________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________classRefChildElement = DomUtils.getChildElementByTagName(_________salesItemLineDetailChildElement, "class-ref");
                                                                                    if (___________classRefChildElement!= null) {
                                                                                        parseProperty(___________classRefBuilder, ___________classRefChildElement, "value", "value");
                                                                                        parseProperty(___________classRefBuilder, ___________classRefChildElement, "name", "name");
                                                                                        parseProperty(___________classRefBuilder, ___________classRefChildElement, "type", "type");
                                                                                        _________salesItemLineDetailBuilder.addPropertyValue("classRef", ___________classRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________salesItemLineDetailBuilder, _________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                parseProperty(_________salesItemLineDetailBuilder, _________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                if (!parseObjectRef(_________salesItemLineDetailChildElement, _________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                    BeanDefinitionBuilder ___________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________salesItemLineDetailChildElement, "price-level-ref");
                                                                                    if (___________priceLevelRefChildElement!= null) {
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "value", "value");
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "name", "name");
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "type", "type");
                                                                                        _________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", ___________priceLevelRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesItemLineDetailChildElement, _________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                    BeanDefinitionBuilder ___________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                    Element ___________markupInfoChildElement = DomUtils.getChildElementByTagName(_________salesItemLineDetailChildElement, "markup-info");
                                                                                    if (___________markupInfoChildElement!= null) {
                                                                                        parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percentBased", "percentBased");
                                                                                        parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "value", "value");
                                                                                        parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percent", "percent");
                                                                                        if (!parseObjectRef(___________markupInfoChildElement, ___________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                            BeanDefinitionBuilder ____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________markupInfoChildElement, "price-level-ref");
                                                                                            if (____________priceLevelRefChildElement!= null) {
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "value", "value");
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "name", "name");
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "type", "type");
                                                                                                ___________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________priceLevelRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        _________salesItemLineDetailBuilder.addPropertyValue("markupInfo", ___________markupInfoBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________salesItemLineDetailBuilder, _________salesItemLineDetailChildElement, "qty", "qty");
                                                                                if (!parseObjectRef(_________salesItemLineDetailChildElement, _________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                    BeanDefinitionBuilder ___________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                    Element ___________uomRefChildElement = DomUtils.getChildElementByTagName(_________salesItemLineDetailChildElement, "uom-ref");
                                                                                    if (___________uomRefChildElement!= null) {
                                                                                        parseProperty(___________uomRefBuilder, ___________uomRefChildElement, "unit", "unit");
                                                                                        _________salesItemLineDetailBuilder.addPropertyValue("uomRef", ___________uomRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesItemLineDetailChildElement, _________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                    BeanDefinitionBuilder ___________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_________salesItemLineDetailChildElement, "item-account-ref");
                                                                                    if (___________itemAccountRefChildElement!= null) {
                                                                                        parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "value", "value");
                                                                                        parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "name", "name");
                                                                                        parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "type", "type");
                                                                                        _________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", ___________itemAccountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesItemLineDetailChildElement, _________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                    BeanDefinitionBuilder ___________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                    if (___________inventorySiteRefChildElement!= null) {
                                                                                        parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "value", "value");
                                                                                        parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "name", "name");
                                                                                        parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "type", "type");
                                                                                        _________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ___________inventorySiteRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesItemLineDetailChildElement, _________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                    BeanDefinitionBuilder ___________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                    if (___________taxCodeRefChildElement!= null) {
                                                                                        parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "value", "value");
                                                                                        parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "name", "name");
                                                                                        parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "type", "type");
                                                                                        _________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", ___________taxCodeRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________salesItemLineDetailBuilder, _________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                parseProperty(_________salesItemLineDetailBuilder, _________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                if (!parseObjectRef(_________salesItemLineDetailChildElement, _________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                    if (__________salesItemLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________salesItemLineDetailExChildElement, __________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", __________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("salesItemLineDetail", _________salesItemLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                            BeanDefinitionBuilder _________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                            Element _________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                            if (_________descriptionLineDetailChildElement!= null) {
                                                                                parseProperty(_________descriptionLineDetailBuilder, _________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                if (!parseObjectRef(_________descriptionLineDetailChildElement, _________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                    BeanDefinitionBuilder __________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                    if (__________taxCodeRefChildElement!= null) {
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "value", "value");
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "name", "name");
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "type", "type");
                                                                                        _________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", __________taxCodeRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________descriptionLineDetailChildElement, _________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(_________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                    if (__________descriptionLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________descriptionLineDetailExChildElement, __________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", __________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("descriptionLineDetail", _________descriptionLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                            BeanDefinitionBuilder _________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                            Element _________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                            if (_________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                parseProperty(_________itemBasedExpenseLineDetailBuilder, _________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                    BeanDefinitionBuilder ___________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________itemRefChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                    if (___________itemRefChildElement!= null) {
                                                                                        parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "value", "value");
                                                                                        parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "name", "name");
                                                                                        parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "type", "type");
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", ___________itemRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                    BeanDefinitionBuilder ___________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________classRefChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                    if (___________classRefChildElement!= null) {
                                                                                        parseProperty(___________classRefBuilder, ___________classRefChildElement, "value", "value");
                                                                                        parseProperty(___________classRefBuilder, ___________classRefChildElement, "name", "name");
                                                                                        parseProperty(___________classRefBuilder, ___________classRefChildElement, "type", "type");
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ___________classRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________itemBasedExpenseLineDetailBuilder, _________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                parseProperty(_________itemBasedExpenseLineDetailBuilder, _________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                    BeanDefinitionBuilder ___________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                    if (___________priceLevelRefChildElement!= null) {
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "value", "value");
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "name", "name");
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "type", "type");
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", ___________priceLevelRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                    BeanDefinitionBuilder ___________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                    Element ___________markupInfoChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                    if (___________markupInfoChildElement!= null) {
                                                                                        parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percentBased", "percentBased");
                                                                                        parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "value", "value");
                                                                                        parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percent", "percent");
                                                                                        if (!parseObjectRef(___________markupInfoChildElement, ___________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                            BeanDefinitionBuilder ____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________markupInfoChildElement, "price-level-ref");
                                                                                            if (____________priceLevelRefChildElement!= null) {
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "value", "value");
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "name", "name");
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "type", "type");
                                                                                                ___________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________priceLevelRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ___________markupInfoBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________itemBasedExpenseLineDetailBuilder, _________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                    BeanDefinitionBuilder ___________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                    Element ___________uomRefChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                    if (___________uomRefChildElement!= null) {
                                                                                        parseProperty(___________uomRefBuilder, ___________uomRefChildElement, "unit", "unit");
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", ___________uomRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                    BeanDefinitionBuilder ___________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                    if (___________itemAccountRefChildElement!= null) {
                                                                                        parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "value", "value");
                                                                                        parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "name", "name");
                                                                                        parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "type", "type");
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", ___________itemAccountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                    BeanDefinitionBuilder ___________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                    if (___________inventorySiteRefChildElement!= null) {
                                                                                        parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "value", "value");
                                                                                        parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "name", "name");
                                                                                        parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "type", "type");
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", ___________inventorySiteRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                    BeanDefinitionBuilder ___________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                    if (___________taxCodeRefChildElement!= null) {
                                                                                        parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "value", "value");
                                                                                        parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "name", "name");
                                                                                        parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "type", "type");
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ___________taxCodeRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                    BeanDefinitionBuilder __________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________customerRefChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                    if (__________customerRefChildElement!= null) {
                                                                                        parseProperty(__________customerRefBuilder, __________customerRefChildElement, "value", "value");
                                                                                        parseProperty(__________customerRefBuilder, __________customerRefChildElement, "name", "name");
                                                                                        parseProperty(__________customerRefBuilder, __________customerRefChildElement, "type", "type");
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", __________customerRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________itemBasedExpenseLineDetailBuilder, _________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                parseProperty(_________itemBasedExpenseLineDetailBuilder, _________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                if (!parseObjectRef(_________itemBasedExpenseLineDetailChildElement, _________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(_________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                    if (__________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________itemBasedExpenseLineDetailExChildElement, __________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", __________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("itemBasedExpenseLineDetail", _________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                            BeanDefinitionBuilder _________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                            Element _________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                            if (_________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                if (!parseObjectRef(_________accountBasedExpenseLineDetailChildElement, _________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                    BeanDefinitionBuilder __________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________customerRefChildElement = DomUtils.getChildElementByTagName(_________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                    if (__________customerRefChildElement!= null) {
                                                                                        parseProperty(__________customerRefBuilder, __________customerRefChildElement, "value", "value");
                                                                                        parseProperty(__________customerRefBuilder, __________customerRefChildElement, "name", "name");
                                                                                        parseProperty(__________customerRefBuilder, __________customerRefChildElement, "type", "type");
                                                                                        _________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", __________customerRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________accountBasedExpenseLineDetailChildElement, _________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                    BeanDefinitionBuilder __________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________classRefChildElement = DomUtils.getChildElementByTagName(_________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                    if (__________classRefChildElement!= null) {
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "value", "value");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "name", "name");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "type", "type");
                                                                                        _________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", __________classRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________accountBasedExpenseLineDetailChildElement, _________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                    BeanDefinitionBuilder __________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________accountRefChildElement = DomUtils.getChildElementByTagName(_________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                    if (__________accountRefChildElement!= null) {
                                                                                        parseProperty(__________accountRefBuilder, __________accountRefChildElement, "value", "value");
                                                                                        parseProperty(__________accountRefBuilder, __________accountRefChildElement, "name", "name");
                                                                                        parseProperty(__________accountRefBuilder, __________accountRefChildElement, "type", "type");
                                                                                        _________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", __________accountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________accountBasedExpenseLineDetailBuilder, _________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                if (!parseObjectRef(_________accountBasedExpenseLineDetailChildElement, _________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                    BeanDefinitionBuilder __________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                    Element __________markupInfoChildElement = DomUtils.getChildElementByTagName(_________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                    if (__________markupInfoChildElement!= null) {
                                                                                        parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percentBased", "percentBased");
                                                                                        parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "value", "value");
                                                                                        parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percent", "percent");
                                                                                        if (!parseObjectRef(__________markupInfoChildElement, __________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                            BeanDefinitionBuilder ___________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________markupInfoChildElement, "price-level-ref");
                                                                                            if (___________priceLevelRefChildElement!= null) {
                                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "value", "value");
                                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "name", "name");
                                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "type", "type");
                                                                                                __________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________priceLevelRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        _________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", __________markupInfoBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________accountBasedExpenseLineDetailBuilder, _________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                if (!parseObjectRef(_________accountBasedExpenseLineDetailChildElement, _________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                    BeanDefinitionBuilder __________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                    if (__________taxCodeRefChildElement!= null) {
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "value", "value");
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "name", "name");
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "type", "type");
                                                                                        _________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", __________taxCodeRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________accountBasedExpenseLineDetailBuilder, _________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                if (!parseObjectRef(_________accountBasedExpenseLineDetailChildElement, _________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(_________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                    if (__________expenseDetailLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________expenseDetailLineDetailExChildElement, __________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", __________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("accountBasedExpenseLineDetail", _________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                            BeanDefinitionBuilder _________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                            Element _________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                            if (_________depositLineDetailChildElement!= null) {
                                                                                if (!parseObjectRef(_________depositLineDetailChildElement, _________depositLineDetailBuilder, "entity", "entity")) {
                                                                                    BeanDefinitionBuilder __________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________entityChildElement = DomUtils.getChildElementByTagName(_________depositLineDetailChildElement, "entity");
                                                                                    if (__________entityChildElement!= null) {
                                                                                        parseProperty(__________entityBuilder, __________entityChildElement, "value", "value");
                                                                                        parseProperty(__________entityBuilder, __________entityChildElement, "name", "name");
                                                                                        parseProperty(__________entityBuilder, __________entityChildElement, "type", "type");
                                                                                        _________depositLineDetailBuilder.addPropertyValue("entity", __________entityBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________depositLineDetailChildElement, _________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                    BeanDefinitionBuilder __________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________classRefChildElement = DomUtils.getChildElementByTagName(_________depositLineDetailChildElement, "class-ref");
                                                                                    if (__________classRefChildElement!= null) {
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "value", "value");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "name", "name");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "type", "type");
                                                                                        _________depositLineDetailBuilder.addPropertyValue("classRef", __________classRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________depositLineDetailChildElement, _________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                    BeanDefinitionBuilder __________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________accountRefChildElement = DomUtils.getChildElementByTagName(_________depositLineDetailChildElement, "account-ref");
                                                                                    if (__________accountRefChildElement!= null) {
                                                                                        parseProperty(__________accountRefBuilder, __________accountRefChildElement, "value", "value");
                                                                                        parseProperty(__________accountRefBuilder, __________accountRefChildElement, "name", "name");
                                                                                        parseProperty(__________accountRefBuilder, __________accountRefChildElement, "type", "type");
                                                                                        _________depositLineDetailBuilder.addPropertyValue("accountRef", __________accountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________depositLineDetailChildElement, _________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                    BeanDefinitionBuilder __________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(_________depositLineDetailChildElement, "payment-method-ref");
                                                                                    if (__________paymentMethodRefChildElement!= null) {
                                                                                        parseProperty(__________paymentMethodRefBuilder, __________paymentMethodRefChildElement, "value", "value");
                                                                                        parseProperty(__________paymentMethodRefBuilder, __________paymentMethodRefChildElement, "name", "name");
                                                                                        parseProperty(__________paymentMethodRefBuilder, __________paymentMethodRefChildElement, "type", "type");
                                                                                        _________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", __________paymentMethodRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________depositLineDetailBuilder, _________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                parseProperty(_________depositLineDetailBuilder, _________depositLineDetailChildElement, "txnType", "txnType");
                                                                                if (!parseObjectRef(_________depositLineDetailChildElement, _________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(_________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                    if (__________depositLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________depositLineDetailExChildElement, __________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", __________depositLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("depositLineDetail", _________depositLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                            BeanDefinitionBuilder _________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                            Element _________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                            if (_________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                    BeanDefinitionBuilder ___________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element ___________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                    if (___________salesItemLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(___________salesItemLineDetailExChildElement, ___________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ___________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                    BeanDefinitionBuilder ____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________itemRefChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                    if (____________itemRefChildElement!= null) {
                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "value", "value");
                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "name", "name");
                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "type", "type");
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", ____________itemRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                    BeanDefinitionBuilder ____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________classRefChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                    if (____________classRefChildElement!= null) {
                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "value", "value");
                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "name", "name");
                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "type", "type");
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", ____________classRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                    BeanDefinitionBuilder ____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                    if (____________priceLevelRefChildElement!= null) {
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "value", "value");
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "name", "name");
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "type", "type");
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ____________priceLevelRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                    BeanDefinitionBuilder ____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                    Element ____________markupInfoChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                    if (____________markupInfoChildElement!= null) {
                                                                                        parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                        parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "value", "value");
                                                                                        parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percent", "percent");
                                                                                        if (!parseObjectRef(____________markupInfoChildElement, ____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                            BeanDefinitionBuilder _____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________markupInfoChildElement, "price-level-ref");
                                                                                            if (_____________priceLevelRefChildElement!= null) {
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "value", "value");
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "name", "name");
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "type", "type");
                                                                                                ____________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________priceLevelRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ____________markupInfoBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                    BeanDefinitionBuilder ____________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                    Element ____________uomRefChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                    if (____________uomRefChildElement!= null) {
                                                                                        parseProperty(____________uomRefBuilder, ____________uomRefChildElement, "unit", "unit");
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", ____________uomRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                    BeanDefinitionBuilder ____________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                    if (____________itemAccountRefChildElement!= null) {
                                                                                        parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "value", "value");
                                                                                        parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "name", "name");
                                                                                        parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "type", "type");
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ____________itemAccountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                    BeanDefinitionBuilder ____________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                    if (____________inventorySiteRefChildElement!= null) {
                                                                                        parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "value", "value");
                                                                                        parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "name", "name");
                                                                                        parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "type", "type");
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ____________inventorySiteRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                    BeanDefinitionBuilder ____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                    if (____________taxCodeRefChildElement!= null) {
                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "value", "value");
                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "name", "name");
                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "type", "type");
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ____________taxCodeRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                parseProperty(_________purchaseOrderItemLineDetailBuilder, _________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                if (!parseObjectRef(_________purchaseOrderItemLineDetailChildElement, _________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                    if (__________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________purchaseOrderItemLineDetailExChildElement, __________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", __________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("purchaseOrderItemLineDetail", _________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                            BeanDefinitionBuilder _________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                            Element _________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                            if (_________salesOrderItemLineDetailChildElement!= null) {
                                                                                parseProperty(_________salesOrderItemLineDetailBuilder, _________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                parseProperty(_________salesOrderItemLineDetailBuilder, _________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                parseProperty(_________salesOrderItemLineDetailBuilder, _________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                if (!parseObjectRef(_________salesOrderItemLineDetailChildElement, _________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                    BeanDefinitionBuilder ___________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element ___________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                    if (___________salesItemLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(___________salesItemLineDetailExChildElement, ___________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ___________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________salesOrderItemLineDetailBuilder, _________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                if (!parseObjectRef(_________salesOrderItemLineDetailChildElement, _________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                    BeanDefinitionBuilder ____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________itemRefChildElement = DomUtils.getChildElementByTagName(_________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                    if (____________itemRefChildElement!= null) {
                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "value", "value");
                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "name", "name");
                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "type", "type");
                                                                                        _________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", ____________itemRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesOrderItemLineDetailChildElement, _________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                    BeanDefinitionBuilder ____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________classRefChildElement = DomUtils.getChildElementByTagName(_________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                    if (____________classRefChildElement!= null) {
                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "value", "value");
                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "name", "name");
                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "type", "type");
                                                                                        _________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", ____________classRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________salesOrderItemLineDetailBuilder, _________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                parseProperty(_________salesOrderItemLineDetailBuilder, _________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                if (!parseObjectRef(_________salesOrderItemLineDetailChildElement, _________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                    BeanDefinitionBuilder ____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                    if (____________priceLevelRefChildElement!= null) {
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "value", "value");
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "name", "name");
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "type", "type");
                                                                                        _________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ____________priceLevelRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesOrderItemLineDetailChildElement, _________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                    BeanDefinitionBuilder ____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                    Element ____________markupInfoChildElement = DomUtils.getChildElementByTagName(_________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                    if (____________markupInfoChildElement!= null) {
                                                                                        parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                        parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "value", "value");
                                                                                        parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percent", "percent");
                                                                                        if (!parseObjectRef(____________markupInfoChildElement, ____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                            BeanDefinitionBuilder _____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________markupInfoChildElement, "price-level-ref");
                                                                                            if (_____________priceLevelRefChildElement!= null) {
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "value", "value");
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "name", "name");
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "type", "type");
                                                                                                ____________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________priceLevelRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        _________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ____________markupInfoBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________salesOrderItemLineDetailBuilder, _________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                if (!parseObjectRef(_________salesOrderItemLineDetailChildElement, _________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                    BeanDefinitionBuilder ____________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                    Element ____________uomRefChildElement = DomUtils.getChildElementByTagName(_________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                    if (____________uomRefChildElement!= null) {
                                                                                        parseProperty(____________uomRefBuilder, ____________uomRefChildElement, "unit", "unit");
                                                                                        _________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", ____________uomRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesOrderItemLineDetailChildElement, _________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                    BeanDefinitionBuilder ____________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                    if (____________itemAccountRefChildElement!= null) {
                                                                                        parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "value", "value");
                                                                                        parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "name", "name");
                                                                                        parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "type", "type");
                                                                                        _________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ____________itemAccountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesOrderItemLineDetailChildElement, _________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                    BeanDefinitionBuilder ____________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                    if (____________inventorySiteRefChildElement!= null) {
                                                                                        parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "value", "value");
                                                                                        parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "name", "name");
                                                                                        parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "type", "type");
                                                                                        _________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ____________inventorySiteRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________salesOrderItemLineDetailChildElement, _________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                    BeanDefinitionBuilder ____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                    if (____________taxCodeRefChildElement!= null) {
                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "value", "value");
                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "name", "name");
                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "type", "type");
                                                                                        _________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ____________taxCodeRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________salesOrderItemLineDetailBuilder, _________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                builder.addPropertyValue("salesOrderItemLineDetail", _________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                            BeanDefinitionBuilder _________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                            Element _________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                            if (_________itemReceiptLineDetailChildElement!= null) {
                                                                                if (!parseObjectRef(_________itemReceiptLineDetailChildElement, _________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(_________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                    if (__________itemReceiptLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________itemReceiptLineDetailExChildElement, __________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", __________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("itemReceiptLineDetail", _________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                            BeanDefinitionBuilder _________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                            Element _________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                            if (_________journalEntryLineDetailChildElement!= null) {
                                                                                parseProperty(_________journalEntryLineDetailBuilder, _________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                if (!parseObjectRef(_________journalEntryLineDetailChildElement, _________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                    BeanDefinitionBuilder __________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                    Element __________entityChildElement = DomUtils.getChildElementByTagName(_________journalEntryLineDetailChildElement, "entity");
                                                                                    if (__________entityChildElement!= null) {
                                                                                        parseProperty(__________entityBuilder, __________entityChildElement, "type", "type");
                                                                                        if (!parseObjectRef(__________entityChildElement, __________entityBuilder, "entity-ref", "entityRef")) {
                                                                                            BeanDefinitionBuilder ___________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________entityRefChildElement = DomUtils.getChildElementByTagName(__________entityChildElement, "entity-ref");
                                                                                            if (___________entityRefChildElement!= null) {
                                                                                                parseProperty(___________entityRefBuilder, ___________entityRefChildElement, "value", "value");
                                                                                                parseProperty(___________entityRefBuilder, ___________entityRefChildElement, "name", "name");
                                                                                                parseProperty(___________entityRefBuilder, ___________entityRefChildElement, "type", "type");
                                                                                                __________entityBuilder.addPropertyValue("entityRef", ___________entityRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        _________journalEntryLineDetailBuilder.addPropertyValue("entity", __________entityBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________journalEntryLineDetailChildElement, _________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                    BeanDefinitionBuilder __________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________accountRefChildElement = DomUtils.getChildElementByTagName(_________journalEntryLineDetailChildElement, "account-ref");
                                                                                    if (__________accountRefChildElement!= null) {
                                                                                        parseProperty(__________accountRefBuilder, __________accountRefChildElement, "value", "value");
                                                                                        parseProperty(__________accountRefBuilder, __________accountRefChildElement, "name", "name");
                                                                                        parseProperty(__________accountRefBuilder, __________accountRefChildElement, "type", "type");
                                                                                        _________journalEntryLineDetailBuilder.addPropertyValue("accountRef", __________accountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________journalEntryLineDetailChildElement, _________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                    BeanDefinitionBuilder __________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________classRefChildElement = DomUtils.getChildElementByTagName(_________journalEntryLineDetailChildElement, "class-ref");
                                                                                    if (__________classRefChildElement!= null) {
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "value", "value");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "name", "name");
                                                                                        parseProperty(__________classRefBuilder, __________classRefChildElement, "type", "type");
                                                                                        _________journalEntryLineDetailBuilder.addPropertyValue("classRef", __________classRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________journalEntryLineDetailChildElement, _________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                    BeanDefinitionBuilder __________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________departmentRefChildElement = DomUtils.getChildElementByTagName(_________journalEntryLineDetailChildElement, "department-ref");
                                                                                    if (__________departmentRefChildElement!= null) {
                                                                                        parseProperty(__________departmentRefBuilder, __________departmentRefChildElement, "value", "value");
                                                                                        parseProperty(__________departmentRefBuilder, __________departmentRefChildElement, "name", "name");
                                                                                        parseProperty(__________departmentRefBuilder, __________departmentRefChildElement, "type", "type");
                                                                                        _________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", __________departmentRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(_________journalEntryLineDetailChildElement, _________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                    BeanDefinitionBuilder __________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                    if (__________taxCodeRefChildElement!= null) {
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "value", "value");
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "name", "name");
                                                                                        parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "type", "type");
                                                                                        _________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", __________taxCodeRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________journalEntryLineDetailBuilder, _________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                parseProperty(_________journalEntryLineDetailBuilder, _________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                parseProperty(_________journalEntryLineDetailBuilder, _________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                if (!parseObjectRef(_________journalEntryLineDetailChildElement, _________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(_________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                    if (__________journalEntryLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________journalEntryLineDetailExChildElement, __________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", __________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("journalEntryLineDetail", _________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                            BeanDefinitionBuilder _________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                            Element _________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                            if (_________groupLineDetailChildElement!= null) {
                                                                                if (!parseObjectRef(_________groupLineDetailChildElement, _________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                    BeanDefinitionBuilder __________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________groupItemRefChildElement = DomUtils.getChildElementByTagName(_________groupLineDetailChildElement, "group-item-ref");
                                                                                    if (__________groupItemRefChildElement!= null) {
                                                                                        parseProperty(__________groupItemRefBuilder, __________groupItemRefChildElement, "value", "value");
                                                                                        parseProperty(__________groupItemRefBuilder, __________groupItemRefChildElement, "name", "name");
                                                                                        parseProperty(__________groupItemRefBuilder, __________groupItemRefChildElement, "type", "type");
                                                                                        _________groupLineDetailBuilder.addPropertyValue("groupItemRef", __________groupItemRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________groupLineDetailBuilder, _________groupLineDetailChildElement, "quantity", "quantity");
                                                                                parseProperty(_________groupLineDetailBuilder, _________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                parseListAndSetProperty(_________groupLineDetailChildElement, _________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                    public BeanDefinition parse(Element element) {
                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                        parseProperty(builder, element, "id", "id");
                                                                                        parseProperty(builder, element, "lineNum", "lineNum");
                                                                                        parseProperty(builder, element, "description", "description");
                                                                                        parseProperty(builder, element, "amount", "amount");
                                                                                        parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                            public BeanDefinition parse(Element element) {
                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                                parseProperty(builder, element, "txnId", "txnId");
                                                                                                parseProperty(builder, element, "txnType", "txnType");
                                                                                                parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                                return builder.getBeanDefinition();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        parseProperty(builder, element, "detailType", "detailType");
                                                                                        if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                            if (___________paymentLineDetailChildElement!= null) {
                                                                                                if (!parseObjectRef(___________paymentLineDetailChildElement, ___________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                    BeanDefinitionBuilder ____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________itemRefChildElement = DomUtils.getChildElementByTagName(___________paymentLineDetailChildElement, "item-ref");
                                                                                                    if (____________itemRefChildElement!= null) {
                                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "value", "value");
                                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "name", "name");
                                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "type", "type");
                                                                                                        ___________paymentLineDetailBuilder.addPropertyValue("itemRef", ____________itemRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________paymentLineDetailBuilder, ___________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                if (!parseObjectRef(___________paymentLineDetailChildElement, ___________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                    BeanDefinitionBuilder ____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________classRefChildElement = DomUtils.getChildElementByTagName(___________paymentLineDetailChildElement, "class-ref");
                                                                                                    if (____________classRefChildElement!= null) {
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "value", "value");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "name", "name");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "type", "type");
                                                                                                        ___________paymentLineDetailBuilder.addPropertyValue("classRef", ____________classRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________paymentLineDetailBuilder, ___________paymentLineDetailChildElement, "balance", "balance");
                                                                                                if (!parseObjectRef(___________paymentLineDetailChildElement, ___________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                                    BeanDefinitionBuilder ____________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                                    Element ____________discountChildElement = DomUtils.getChildElementByTagName(___________paymentLineDetailChildElement, "discount");
                                                                                                    if (____________discountChildElement!= null) {
                                                                                                        if (!parseObjectRef(____________discountChildElement, ____________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                            BeanDefinitionBuilder _____________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________discountRefChildElement = DomUtils.getChildElementByTagName(____________discountChildElement, "discount-ref");
                                                                                                            if (_____________discountRefChildElement!= null) {
                                                                                                                parseProperty(_____________discountRefBuilder, _____________discountRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________discountRefBuilder, _____________discountRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________discountRefBuilder, _____________discountRefChildElement, "type", "type");
                                                                                                                ____________discountBuilder.addPropertyValue("discountRef", _____________discountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________discountBuilder, ____________discountChildElement, "percentBased", "percentBased");
                                                                                                        parseProperty(____________discountBuilder, ____________discountChildElement, "discountPercent", "discountPercent");
                                                                                                        if (!parseObjectRef(____________discountChildElement, ____________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                            BeanDefinitionBuilder _____________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________discountAccountRefChildElement = DomUtils.getChildElementByTagName(____________discountChildElement, "discount-account-ref");
                                                                                                            if (_____________discountAccountRefChildElement!= null) {
                                                                                                                parseProperty(_____________discountAccountRefBuilder, _____________discountAccountRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________discountAccountRefBuilder, _____________discountAccountRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________discountAccountRefBuilder, _____________discountAccountRefChildElement, "type", "type");
                                                                                                                ____________discountBuilder.addPropertyValue("discountAccountRef", _____________discountAccountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        ___________paymentLineDetailBuilder.addPropertyValue("discount", ____________discountBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________paymentLineDetailChildElement, ___________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                                    BeanDefinitionBuilder ____________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________paymentLineExChildElement = DomUtils.getChildElementByTagName(___________paymentLineDetailChildElement, "payment-line-ex");
                                                                                                    if (____________paymentLineExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________paymentLineExChildElement, ____________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", ____________paymentLineExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("paymentLineDetail", ___________paymentLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                            if (___________discountLineDetailChildElement!= null) {
                                                                                                parseProperty(___________discountLineDetailBuilder, ___________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                if (!parseObjectRef(___________discountLineDetailChildElement, ___________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                                    BeanDefinitionBuilder _____________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________discountRefChildElement = DomUtils.getChildElementByTagName(___________discountLineDetailChildElement, "discount-ref");
                                                                                                    if (_____________discountRefChildElement!= null) {
                                                                                                        parseProperty(_____________discountRefBuilder, _____________discountRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________discountRefBuilder, _____________discountRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________discountRefBuilder, _____________discountRefChildElement, "type", "type");
                                                                                                        ___________discountLineDetailBuilder.addPropertyValue("discountRef", _____________discountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________discountLineDetailBuilder, ___________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                                parseProperty(___________discountLineDetailBuilder, ___________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                                if (!parseObjectRef(___________discountLineDetailChildElement, ___________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                    BeanDefinitionBuilder _____________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________discountAccountRefChildElement = DomUtils.getChildElementByTagName(___________discountLineDetailChildElement, "discount-account-ref");
                                                                                                    if (_____________discountAccountRefChildElement!= null) {
                                                                                                        parseProperty(_____________discountAccountRefBuilder, _____________discountAccountRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________discountAccountRefBuilder, _____________discountAccountRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________discountAccountRefBuilder, _____________discountAccountRefChildElement, "type", "type");
                                                                                                        ___________discountLineDetailBuilder.addPropertyValue("discountAccountRef", _____________discountAccountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________discountLineDetailBuilder, ___________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                if (!parseObjectRef(___________discountLineDetailChildElement, ___________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                    BeanDefinitionBuilder ____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________classRefChildElement = DomUtils.getChildElementByTagName(___________discountLineDetailChildElement, "class-ref");
                                                                                                    if (____________classRefChildElement!= null) {
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "value", "value");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "name", "name");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "type", "type");
                                                                                                        ___________discountLineDetailBuilder.addPropertyValue("classRef", ____________classRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________discountLineDetailChildElement, ___________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                    BeanDefinitionBuilder ____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________discountLineDetailChildElement, "tax-code-ref");
                                                                                                    if (____________taxCodeRefChildElement!= null) {
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "value", "value");
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "name", "name");
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "type", "type");
                                                                                                        ___________discountLineDetailBuilder.addPropertyValue("taxCodeRef", ____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________discountLineDetailChildElement, ___________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(___________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                                    if (____________discountLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________discountLineDetailExChildElement, ____________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", ____________discountLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("discountLineDetail", ___________discountLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                            if (___________taxLineDetailChildElement!= null) {
                                                                                                if (!parseObjectRef(___________taxLineDetailChildElement, ___________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                                    BeanDefinitionBuilder ____________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________taxRateRefChildElement = DomUtils.getChildElementByTagName(___________taxLineDetailChildElement, "tax-rate-ref");
                                                                                                    if (____________taxRateRefChildElement!= null) {
                                                                                                        parseProperty(____________taxRateRefBuilder, ____________taxRateRefChildElement, "value", "value");
                                                                                                        parseProperty(____________taxRateRefBuilder, ____________taxRateRefChildElement, "name", "name");
                                                                                                        parseProperty(____________taxRateRefBuilder, ____________taxRateRefChildElement, "type", "type");
                                                                                                        ___________taxLineDetailBuilder.addPropertyValue("taxRateRef", ____________taxRateRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________taxLineDetailBuilder, ___________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                                parseProperty(___________taxLineDetailBuilder, ___________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                                parseProperty(___________taxLineDetailBuilder, ___________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                                parseProperty(___________taxLineDetailBuilder, ___________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                                parseProperty(___________taxLineDetailBuilder, ___________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                                parseProperty(___________taxLineDetailBuilder, ___________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                if (!parseObjectRef(___________taxLineDetailChildElement, ___________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(___________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                                    if (____________taxLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________taxLineDetailExChildElement, ____________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", ____________taxLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("taxLineDetail", ___________taxLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                            if (___________salesItemLineDetailChildElement!= null) {
                                                                                                parseProperty(___________salesItemLineDetailBuilder, ___________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                if (!parseObjectRef(___________salesItemLineDetailChildElement, ___________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                    BeanDefinitionBuilder _____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________itemRefChildElement = DomUtils.getChildElementByTagName(___________salesItemLineDetailChildElement, "item-ref");
                                                                                                    if (_____________itemRefChildElement!= null) {
                                                                                                        parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "type", "type");
                                                                                                        ___________salesItemLineDetailBuilder.addPropertyValue("itemRef", _____________itemRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesItemLineDetailChildElement, ___________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                    BeanDefinitionBuilder _____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________classRefChildElement = DomUtils.getChildElementByTagName(___________salesItemLineDetailChildElement, "class-ref");
                                                                                                    if (_____________classRefChildElement!= null) {
                                                                                                        parseProperty(_____________classRefBuilder, _____________classRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________classRefBuilder, _____________classRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________classRefBuilder, _____________classRefChildElement, "type", "type");
                                                                                                        ___________salesItemLineDetailBuilder.addPropertyValue("classRef", _____________classRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________salesItemLineDetailBuilder, ___________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                parseProperty(___________salesItemLineDetailBuilder, ___________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                if (!parseObjectRef(___________salesItemLineDetailChildElement, ___________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                    BeanDefinitionBuilder _____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________salesItemLineDetailChildElement, "price-level-ref");
                                                                                                    if (_____________priceLevelRefChildElement!= null) {
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "type", "type");
                                                                                                        ___________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", _____________priceLevelRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesItemLineDetailChildElement, ___________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                    BeanDefinitionBuilder _____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                    Element _____________markupInfoChildElement = DomUtils.getChildElementByTagName(___________salesItemLineDetailChildElement, "markup-info");
                                                                                                    if (_____________markupInfoChildElement!= null) {
                                                                                                        parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                        parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "value", "value");
                                                                                                        parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percent", "percent");
                                                                                                        if (!parseObjectRef(_____________markupInfoChildElement, _____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                            BeanDefinitionBuilder ______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________markupInfoChildElement, "price-level-ref");
                                                                                                            if (______________priceLevelRefChildElement!= null) {
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "value", "value");
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "name", "name");
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "type", "type");
                                                                                                                _____________markupInfoBuilder.addPropertyValue("priceLevelRef", ______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        ___________salesItemLineDetailBuilder.addPropertyValue("markupInfo", _____________markupInfoBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________salesItemLineDetailBuilder, ___________salesItemLineDetailChildElement, "qty", "qty");
                                                                                                if (!parseObjectRef(___________salesItemLineDetailChildElement, ___________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                    BeanDefinitionBuilder _____________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                    Element _____________uomRefChildElement = DomUtils.getChildElementByTagName(___________salesItemLineDetailChildElement, "uom-ref");
                                                                                                    if (_____________uomRefChildElement!= null) {
                                                                                                        parseProperty(_____________uomRefBuilder, _____________uomRefChildElement, "unit", "unit");
                                                                                                        ___________salesItemLineDetailBuilder.addPropertyValue("uomRef", _____________uomRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesItemLineDetailChildElement, ___________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                    BeanDefinitionBuilder _____________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________itemAccountRefChildElement = DomUtils.getChildElementByTagName(___________salesItemLineDetailChildElement, "item-account-ref");
                                                                                                    if (_____________itemAccountRefChildElement!= null) {
                                                                                                        parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "type", "type");
                                                                                                        ___________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", _____________itemAccountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesItemLineDetailChildElement, ___________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                    BeanDefinitionBuilder _____________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                                    if (_____________inventorySiteRefChildElement!= null) {
                                                                                                        parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "type", "type");
                                                                                                        ___________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _____________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesItemLineDetailChildElement, ___________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                    BeanDefinitionBuilder _____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                                    if (_____________taxCodeRefChildElement!= null) {
                                                                                                        parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "type", "type");
                                                                                                        ___________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", _____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________salesItemLineDetailBuilder, ___________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                parseProperty(___________salesItemLineDetailBuilder, ___________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                if (!parseObjectRef(___________salesItemLineDetailChildElement, ___________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                    if (____________salesItemLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________salesItemLineDetailExChildElement, ____________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ____________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("salesItemLineDetail", ___________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                            if (___________descriptionLineDetailChildElement!= null) {
                                                                                                parseProperty(___________descriptionLineDetailBuilder, ___________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                if (!parseObjectRef(___________descriptionLineDetailChildElement, ___________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                    BeanDefinitionBuilder ____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                                    if (____________taxCodeRefChildElement!= null) {
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "value", "value");
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "name", "name");
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "type", "type");
                                                                                                        ___________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", ____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________descriptionLineDetailChildElement, ___________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(___________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                                    if (____________descriptionLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________descriptionLineDetailExChildElement, ____________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", ____________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("descriptionLineDetail", ___________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                            if (___________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                                parseProperty(___________itemBasedExpenseLineDetailBuilder, ___________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                    BeanDefinitionBuilder _____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________itemRefChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                                    if (_____________itemRefChildElement!= null) {
                                                                                                        parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "type", "type");
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", _____________itemRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                    BeanDefinitionBuilder _____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________classRefChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                    if (_____________classRefChildElement!= null) {
                                                                                                        parseProperty(_____________classRefBuilder, _____________classRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________classRefBuilder, _____________classRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________classRefBuilder, _____________classRefChildElement, "type", "type");
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _____________classRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________itemBasedExpenseLineDetailBuilder, ___________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                parseProperty(___________itemBasedExpenseLineDetailBuilder, ___________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                    BeanDefinitionBuilder _____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                                    if (_____________priceLevelRefChildElement!= null) {
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "type", "type");
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", _____________priceLevelRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                    BeanDefinitionBuilder _____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                    Element _____________markupInfoChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                    if (_____________markupInfoChildElement!= null) {
                                                                                                        parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                        parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "value", "value");
                                                                                                        parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percent", "percent");
                                                                                                        if (!parseObjectRef(_____________markupInfoChildElement, _____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                            BeanDefinitionBuilder ______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________markupInfoChildElement, "price-level-ref");
                                                                                                            if (______________priceLevelRefChildElement!= null) {
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "value", "value");
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "name", "name");
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "type", "type");
                                                                                                                _____________markupInfoBuilder.addPropertyValue("priceLevelRef", ______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _____________markupInfoBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________itemBasedExpenseLineDetailBuilder, ___________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                    BeanDefinitionBuilder _____________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                    Element _____________uomRefChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                                    if (_____________uomRefChildElement!= null) {
                                                                                                        parseProperty(_____________uomRefBuilder, _____________uomRefChildElement, "unit", "unit");
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", _____________uomRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                    BeanDefinitionBuilder _____________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________itemAccountRefChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                                    if (_____________itemAccountRefChildElement!= null) {
                                                                                                        parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "type", "type");
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", _____________itemAccountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                    BeanDefinitionBuilder _____________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                                    if (_____________inventorySiteRefChildElement!= null) {
                                                                                                        parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "type", "type");
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", _____________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                    BeanDefinitionBuilder _____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                    if (_____________taxCodeRefChildElement!= null) {
                                                                                                        parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "type", "type");
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                    BeanDefinitionBuilder ____________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________customerRefChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                    if (____________customerRefChildElement!= null) {
                                                                                                        parseProperty(____________customerRefBuilder, ____________customerRefChildElement, "value", "value");
                                                                                                        parseProperty(____________customerRefBuilder, ____________customerRefChildElement, "name", "name");
                                                                                                        parseProperty(____________customerRefBuilder, ____________customerRefChildElement, "type", "type");
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ____________customerRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________itemBasedExpenseLineDetailBuilder, ___________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                parseProperty(___________itemBasedExpenseLineDetailBuilder, ___________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                if (!parseObjectRef(___________itemBasedExpenseLineDetailChildElement, ___________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(___________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                                    if (____________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________itemBasedExpenseLineDetailExChildElement, ____________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", ____________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("itemBasedExpenseLineDetail", ___________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                            if (___________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                                if (!parseObjectRef(___________accountBasedExpenseLineDetailChildElement, ___________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                    BeanDefinitionBuilder ____________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________customerRefChildElement = DomUtils.getChildElementByTagName(___________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                    if (____________customerRefChildElement!= null) {
                                                                                                        parseProperty(____________customerRefBuilder, ____________customerRefChildElement, "value", "value");
                                                                                                        parseProperty(____________customerRefBuilder, ____________customerRefChildElement, "name", "name");
                                                                                                        parseProperty(____________customerRefBuilder, ____________customerRefChildElement, "type", "type");
                                                                                                        ___________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ____________customerRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________accountBasedExpenseLineDetailChildElement, ___________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                    BeanDefinitionBuilder ____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________classRefChildElement = DomUtils.getChildElementByTagName(___________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                    if (____________classRefChildElement!= null) {
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "value", "value");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "name", "name");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "type", "type");
                                                                                                        ___________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ____________classRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________accountBasedExpenseLineDetailChildElement, ___________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                    BeanDefinitionBuilder ____________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________accountRefChildElement = DomUtils.getChildElementByTagName(___________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                                    if (____________accountRefChildElement!= null) {
                                                                                                        parseProperty(____________accountRefBuilder, ____________accountRefChildElement, "value", "value");
                                                                                                        parseProperty(____________accountRefBuilder, ____________accountRefChildElement, "name", "name");
                                                                                                        parseProperty(____________accountRefBuilder, ____________accountRefChildElement, "type", "type");
                                                                                                        ___________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", ____________accountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________accountBasedExpenseLineDetailBuilder, ___________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                if (!parseObjectRef(___________accountBasedExpenseLineDetailChildElement, ___________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                    BeanDefinitionBuilder ____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                    Element ____________markupInfoChildElement = DomUtils.getChildElementByTagName(___________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                    if (____________markupInfoChildElement!= null) {
                                                                                                        parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                        parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "value", "value");
                                                                                                        parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percent", "percent");
                                                                                                        if (!parseObjectRef(____________markupInfoChildElement, ____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                            BeanDefinitionBuilder _____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________markupInfoChildElement, "price-level-ref");
                                                                                                            if (_____________priceLevelRefChildElement!= null) {
                                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "type", "type");
                                                                                                                ____________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________priceLevelRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        ___________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ____________markupInfoBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________accountBasedExpenseLineDetailBuilder, ___________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                if (!parseObjectRef(___________accountBasedExpenseLineDetailChildElement, ___________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                    BeanDefinitionBuilder ____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                    if (____________taxCodeRefChildElement!= null) {
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "value", "value");
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "name", "name");
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "type", "type");
                                                                                                        ___________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________accountBasedExpenseLineDetailBuilder, ___________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                if (!parseObjectRef(___________accountBasedExpenseLineDetailChildElement, ___________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(___________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                                    if (____________expenseDetailLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________expenseDetailLineDetailExChildElement, ____________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", ____________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("accountBasedExpenseLineDetail", ___________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                            if (___________depositLineDetailChildElement!= null) {
                                                                                                if (!parseObjectRef(___________depositLineDetailChildElement, ___________depositLineDetailBuilder, "entity", "entity")) {
                                                                                                    BeanDefinitionBuilder ____________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________entityChildElement = DomUtils.getChildElementByTagName(___________depositLineDetailChildElement, "entity");
                                                                                                    if (____________entityChildElement!= null) {
                                                                                                        parseProperty(____________entityBuilder, ____________entityChildElement, "value", "value");
                                                                                                        parseProperty(____________entityBuilder, ____________entityChildElement, "name", "name");
                                                                                                        parseProperty(____________entityBuilder, ____________entityChildElement, "type", "type");
                                                                                                        ___________depositLineDetailBuilder.addPropertyValue("entity", ____________entityBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________depositLineDetailChildElement, ___________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                    BeanDefinitionBuilder ____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________classRefChildElement = DomUtils.getChildElementByTagName(___________depositLineDetailChildElement, "class-ref");
                                                                                                    if (____________classRefChildElement!= null) {
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "value", "value");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "name", "name");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "type", "type");
                                                                                                        ___________depositLineDetailBuilder.addPropertyValue("classRef", ____________classRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________depositLineDetailChildElement, ___________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                    BeanDefinitionBuilder ____________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________accountRefChildElement = DomUtils.getChildElementByTagName(___________depositLineDetailChildElement, "account-ref");
                                                                                                    if (____________accountRefChildElement!= null) {
                                                                                                        parseProperty(____________accountRefBuilder, ____________accountRefChildElement, "value", "value");
                                                                                                        parseProperty(____________accountRefBuilder, ____________accountRefChildElement, "name", "name");
                                                                                                        parseProperty(____________accountRefBuilder, ____________accountRefChildElement, "type", "type");
                                                                                                        ___________depositLineDetailBuilder.addPropertyValue("accountRef", ____________accountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________depositLineDetailChildElement, ___________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                                    BeanDefinitionBuilder ____________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(___________depositLineDetailChildElement, "payment-method-ref");
                                                                                                    if (____________paymentMethodRefChildElement!= null) {
                                                                                                        parseProperty(____________paymentMethodRefBuilder, ____________paymentMethodRefChildElement, "value", "value");
                                                                                                        parseProperty(____________paymentMethodRefBuilder, ____________paymentMethodRefChildElement, "name", "name");
                                                                                                        parseProperty(____________paymentMethodRefBuilder, ____________paymentMethodRefChildElement, "type", "type");
                                                                                                        ___________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", ____________paymentMethodRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________depositLineDetailBuilder, ___________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                                parseProperty(___________depositLineDetailBuilder, ___________depositLineDetailChildElement, "txnType", "txnType");
                                                                                                if (!parseObjectRef(___________depositLineDetailChildElement, ___________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(___________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                                    if (____________depositLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________depositLineDetailExChildElement, ____________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", ____________depositLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("depositLineDetail", ___________depositLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                            if (___________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder _____________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element _____________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                    if (_____________salesItemLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(_____________salesItemLineDetailExChildElement, _____________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _____________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                    BeanDefinitionBuilder ______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________itemRefChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                                    if (______________itemRefChildElement!= null) {
                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "value", "value");
                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "name", "name");
                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "type", "type");
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", ______________itemRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                    BeanDefinitionBuilder ______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________classRefChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                                    if (______________classRefChildElement!= null) {
                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "value", "value");
                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "name", "name");
                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "type", "type");
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", ______________classRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                    BeanDefinitionBuilder ______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                    if (______________priceLevelRefChildElement!= null) {
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "value", "value");
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "name", "name");
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "type", "type");
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                    BeanDefinitionBuilder ______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                    Element ______________markupInfoChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                                    if (______________markupInfoChildElement!= null) {
                                                                                                        parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                        parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "value", "value");
                                                                                                        parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percent", "percent");
                                                                                                        if (!parseObjectRef(______________markupInfoChildElement, ______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                            BeanDefinitionBuilder _______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________markupInfoChildElement, "price-level-ref");
                                                                                                            if (_______________priceLevelRefChildElement!= null) {
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "type", "type");
                                                                                                                ______________markupInfoBuilder.addPropertyValue("priceLevelRef", _______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ______________markupInfoBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                    BeanDefinitionBuilder ______________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                    Element ______________uomRefChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                                    if (______________uomRefChildElement!= null) {
                                                                                                        parseProperty(______________uomRefBuilder, ______________uomRefChildElement, "unit", "unit");
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", ______________uomRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                    BeanDefinitionBuilder ______________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________itemAccountRefChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                    if (______________itemAccountRefChildElement!= null) {
                                                                                                        parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "value", "value");
                                                                                                        parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "name", "name");
                                                                                                        parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "type", "type");
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ______________itemAccountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                    BeanDefinitionBuilder ______________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                    if (______________inventorySiteRefChildElement!= null) {
                                                                                                        parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "value", "value");
                                                                                                        parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "name", "name");
                                                                                                        parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "type", "type");
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ______________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                    BeanDefinitionBuilder ______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                    if (______________taxCodeRefChildElement!= null) {
                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "value", "value");
                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "name", "name");
                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "type", "type");
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                parseProperty(___________purchaseOrderItemLineDetailBuilder, ___________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                                if (!parseObjectRef(___________purchaseOrderItemLineDetailChildElement, ___________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                                    if (____________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________purchaseOrderItemLineDetailExChildElement, ____________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", ____________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("purchaseOrderItemLineDetail", ___________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                            if (___________salesOrderItemLineDetailChildElement!= null) {
                                                                                                parseProperty(___________salesOrderItemLineDetailBuilder, ___________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                parseProperty(___________salesOrderItemLineDetailBuilder, ___________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                parseProperty(___________salesOrderItemLineDetailBuilder, ___________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                if (!parseObjectRef(___________salesOrderItemLineDetailChildElement, ___________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder _____________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element _____________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                    if (_____________salesItemLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(_____________salesItemLineDetailExChildElement, _____________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _____________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________salesOrderItemLineDetailBuilder, ___________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                if (!parseObjectRef(___________salesOrderItemLineDetailChildElement, ___________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                    BeanDefinitionBuilder ______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________itemRefChildElement = DomUtils.getChildElementByTagName(___________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                                    if (______________itemRefChildElement!= null) {
                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "value", "value");
                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "name", "name");
                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "type", "type");
                                                                                                        ___________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", ______________itemRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesOrderItemLineDetailChildElement, ___________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                    BeanDefinitionBuilder ______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________classRefChildElement = DomUtils.getChildElementByTagName(___________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                                    if (______________classRefChildElement!= null) {
                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "value", "value");
                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "name", "name");
                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "type", "type");
                                                                                                        ___________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", ______________classRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________salesOrderItemLineDetailBuilder, ___________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                parseProperty(___________salesOrderItemLineDetailBuilder, ___________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                if (!parseObjectRef(___________salesOrderItemLineDetailChildElement, ___________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                    BeanDefinitionBuilder ______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                    if (______________priceLevelRefChildElement!= null) {
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "value", "value");
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "name", "name");
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "type", "type");
                                                                                                        ___________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesOrderItemLineDetailChildElement, ___________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                    BeanDefinitionBuilder ______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                    Element ______________markupInfoChildElement = DomUtils.getChildElementByTagName(___________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                                    if (______________markupInfoChildElement!= null) {
                                                                                                        parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                        parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "value", "value");
                                                                                                        parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percent", "percent");
                                                                                                        if (!parseObjectRef(______________markupInfoChildElement, ______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                            BeanDefinitionBuilder _______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________markupInfoChildElement, "price-level-ref");
                                                                                                            if (_______________priceLevelRefChildElement!= null) {
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "type", "type");
                                                                                                                ______________markupInfoBuilder.addPropertyValue("priceLevelRef", _______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        ___________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ______________markupInfoBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________salesOrderItemLineDetailBuilder, ___________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                if (!parseObjectRef(___________salesOrderItemLineDetailChildElement, ___________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                    BeanDefinitionBuilder ______________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                    Element ______________uomRefChildElement = DomUtils.getChildElementByTagName(___________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                                    if (______________uomRefChildElement!= null) {
                                                                                                        parseProperty(______________uomRefBuilder, ______________uomRefChildElement, "unit", "unit");
                                                                                                        ___________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", ______________uomRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesOrderItemLineDetailChildElement, ___________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                    BeanDefinitionBuilder ______________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________itemAccountRefChildElement = DomUtils.getChildElementByTagName(___________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                    if (______________itemAccountRefChildElement!= null) {
                                                                                                        parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "value", "value");
                                                                                                        parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "name", "name");
                                                                                                        parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "type", "type");
                                                                                                        ___________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ______________itemAccountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesOrderItemLineDetailChildElement, ___________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                    BeanDefinitionBuilder ______________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                    if (______________inventorySiteRefChildElement!= null) {
                                                                                                        parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "value", "value");
                                                                                                        parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "name", "name");
                                                                                                        parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "type", "type");
                                                                                                        ___________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ______________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________salesOrderItemLineDetailChildElement, ___________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                    BeanDefinitionBuilder ______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                    if (______________taxCodeRefChildElement!= null) {
                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "value", "value");
                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "name", "name");
                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "type", "type");
                                                                                                        ___________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________salesOrderItemLineDetailBuilder, ___________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                builder.addPropertyValue("salesOrderItemLineDetail", ___________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                            if (___________itemReceiptLineDetailChildElement!= null) {
                                                                                                if (!parseObjectRef(___________itemReceiptLineDetailChildElement, ___________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(___________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                                    if (____________itemReceiptLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________itemReceiptLineDetailExChildElement, ____________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", ____________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("itemReceiptLineDetail", ___________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                            if (___________journalEntryLineDetailChildElement!= null) {
                                                                                                parseProperty(___________journalEntryLineDetailBuilder, ___________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                                if (!parseObjectRef(___________journalEntryLineDetailChildElement, ___________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                                    BeanDefinitionBuilder ____________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                                    Element ____________entityChildElement = DomUtils.getChildElementByTagName(___________journalEntryLineDetailChildElement, "entity");
                                                                                                    if (____________entityChildElement!= null) {
                                                                                                        parseProperty(____________entityBuilder, ____________entityChildElement, "type", "type");
                                                                                                        if (!parseObjectRef(____________entityChildElement, ____________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                            BeanDefinitionBuilder _____________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________entityRefChildElement = DomUtils.getChildElementByTagName(____________entityChildElement, "entity-ref");
                                                                                                            if (_____________entityRefChildElement!= null) {
                                                                                                                parseProperty(_____________entityRefBuilder, _____________entityRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________entityRefBuilder, _____________entityRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________entityRefBuilder, _____________entityRefChildElement, "type", "type");
                                                                                                                ____________entityBuilder.addPropertyValue("entityRef", _____________entityRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        ___________journalEntryLineDetailBuilder.addPropertyValue("entity", ____________entityBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________journalEntryLineDetailChildElement, ___________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                    BeanDefinitionBuilder ____________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________accountRefChildElement = DomUtils.getChildElementByTagName(___________journalEntryLineDetailChildElement, "account-ref");
                                                                                                    if (____________accountRefChildElement!= null) {
                                                                                                        parseProperty(____________accountRefBuilder, ____________accountRefChildElement, "value", "value");
                                                                                                        parseProperty(____________accountRefBuilder, ____________accountRefChildElement, "name", "name");
                                                                                                        parseProperty(____________accountRefBuilder, ____________accountRefChildElement, "type", "type");
                                                                                                        ___________journalEntryLineDetailBuilder.addPropertyValue("accountRef", ____________accountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________journalEntryLineDetailChildElement, ___________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                    BeanDefinitionBuilder ____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________classRefChildElement = DomUtils.getChildElementByTagName(___________journalEntryLineDetailChildElement, "class-ref");
                                                                                                    if (____________classRefChildElement!= null) {
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "value", "value");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "name", "name");
                                                                                                        parseProperty(____________classRefBuilder, ____________classRefChildElement, "type", "type");
                                                                                                        ___________journalEntryLineDetailBuilder.addPropertyValue("classRef", ____________classRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________journalEntryLineDetailChildElement, ___________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                                    BeanDefinitionBuilder ____________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________departmentRefChildElement = DomUtils.getChildElementByTagName(___________journalEntryLineDetailChildElement, "department-ref");
                                                                                                    if (____________departmentRefChildElement!= null) {
                                                                                                        parseProperty(____________departmentRefBuilder, ____________departmentRefChildElement, "value", "value");
                                                                                                        parseProperty(____________departmentRefBuilder, ____________departmentRefChildElement, "name", "name");
                                                                                                        parseProperty(____________departmentRefBuilder, ____________departmentRefChildElement, "type", "type");
                                                                                                        ___________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", ____________departmentRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(___________journalEntryLineDetailChildElement, ___________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                    BeanDefinitionBuilder ____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                                    if (____________taxCodeRefChildElement!= null) {
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "value", "value");
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "name", "name");
                                                                                                        parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "type", "type");
                                                                                                        ___________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", ____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________journalEntryLineDetailBuilder, ___________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                                parseProperty(___________journalEntryLineDetailBuilder, ___________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                parseProperty(___________journalEntryLineDetailBuilder, ___________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                if (!parseObjectRef(___________journalEntryLineDetailChildElement, ___________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(___________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                                    if (____________journalEntryLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________journalEntryLineDetailExChildElement, ____________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", ____________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("journalEntryLineDetail", ___________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                            if (___________groupLineDetailChildElement!= null) {
                                                                                                if (!parseObjectRef(___________groupLineDetailChildElement, ___________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                                    BeanDefinitionBuilder ____________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________groupItemRefChildElement = DomUtils.getChildElementByTagName(___________groupLineDetailChildElement, "group-item-ref");
                                                                                                    if (____________groupItemRefChildElement!= null) {
                                                                                                        parseProperty(____________groupItemRefBuilder, ____________groupItemRefChildElement, "value", "value");
                                                                                                        parseProperty(____________groupItemRefBuilder, ____________groupItemRefChildElement, "name", "name");
                                                                                                        parseProperty(____________groupItemRefBuilder, ____________groupItemRefChildElement, "type", "type");
                                                                                                        ___________groupLineDetailBuilder.addPropertyValue("groupItemRef", ____________groupItemRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________groupLineDetailBuilder, ___________groupLineDetailChildElement, "quantity", "quantity");
                                                                                                parseProperty(___________groupLineDetailBuilder, ___________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                parseListAndSetProperty(___________groupLineDetailChildElement, ___________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                                        parseProperty(builder, element, "id", "id");
                                                                                                        parseProperty(builder, element, "lineNum", "lineNum");
                                                                                                        parseProperty(builder, element, "description", "description");
                                                                                                        parseProperty(builder, element, "amount", "amount");
                                                                                                        parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                                                parseProperty(builder, element, "txnId", "txnId");
                                                                                                                parseProperty(builder, element, "txnType", "txnType");
                                                                                                                parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                                                return builder.getBeanDefinition();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        parseProperty(builder, element, "detailType", "detailType");
                                                                                                        if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                                            if (_____________paymentLineDetailChildElement!= null) {
                                                                                                                if (!parseObjectRef(_____________paymentLineDetailChildElement, _____________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                    BeanDefinitionBuilder ______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________itemRefChildElement = DomUtils.getChildElementByTagName(_____________paymentLineDetailChildElement, "item-ref");
                                                                                                                    if (______________itemRefChildElement!= null) {
                                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "type", "type");
                                                                                                                        _____________paymentLineDetailBuilder.addPropertyValue("itemRef", ______________itemRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________paymentLineDetailBuilder, _____________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                if (!parseObjectRef(_____________paymentLineDetailChildElement, _____________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                    BeanDefinitionBuilder ______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________classRefChildElement = DomUtils.getChildElementByTagName(_____________paymentLineDetailChildElement, "class-ref");
                                                                                                                    if (______________classRefChildElement!= null) {
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "type", "type");
                                                                                                                        _____________paymentLineDetailBuilder.addPropertyValue("classRef", ______________classRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________paymentLineDetailBuilder, _____________paymentLineDetailChildElement, "balance", "balance");
                                                                                                                if (!parseObjectRef(_____________paymentLineDetailChildElement, _____________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                                                    BeanDefinitionBuilder ______________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                                                    Element ______________discountChildElement = DomUtils.getChildElementByTagName(_____________paymentLineDetailChildElement, "discount");
                                                                                                                    if (______________discountChildElement!= null) {
                                                                                                                        if (!parseObjectRef(______________discountChildElement, ______________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                                            BeanDefinitionBuilder _______________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________discountRefChildElement = DomUtils.getChildElementByTagName(______________discountChildElement, "discount-ref");
                                                                                                                            if (_______________discountRefChildElement!= null) {
                                                                                                                                parseProperty(_______________discountRefBuilder, _______________discountRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________discountRefBuilder, _______________discountRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________discountRefBuilder, _______________discountRefChildElement, "type", "type");
                                                                                                                                ______________discountBuilder.addPropertyValue("discountRef", _______________discountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________discountBuilder, ______________discountChildElement, "percentBased", "percentBased");
                                                                                                                        parseProperty(______________discountBuilder, ______________discountChildElement, "discountPercent", "discountPercent");
                                                                                                                        if (!parseObjectRef(______________discountChildElement, ______________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                            BeanDefinitionBuilder _______________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________discountAccountRefChildElement = DomUtils.getChildElementByTagName(______________discountChildElement, "discount-account-ref");
                                                                                                                            if (_______________discountAccountRefChildElement!= null) {
                                                                                                                                parseProperty(_______________discountAccountRefBuilder, _______________discountAccountRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________discountAccountRefBuilder, _______________discountAccountRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________discountAccountRefBuilder, _______________discountAccountRefChildElement, "type", "type");
                                                                                                                                ______________discountBuilder.addPropertyValue("discountAccountRef", _______________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        _____________paymentLineDetailBuilder.addPropertyValue("discount", ______________discountBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________paymentLineDetailChildElement, _____________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                                                    BeanDefinitionBuilder ______________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________paymentLineExChildElement = DomUtils.getChildElementByTagName(_____________paymentLineDetailChildElement, "payment-line-ex");
                                                                                                                    if (______________paymentLineExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________paymentLineExChildElement, ______________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", ______________paymentLineExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("paymentLineDetail", _____________paymentLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                                            if (_____________discountLineDetailChildElement!= null) {
                                                                                                                parseProperty(_____________discountLineDetailBuilder, _____________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                if (!parseObjectRef(_____________discountLineDetailChildElement, _____________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                                                    BeanDefinitionBuilder _______________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________discountRefChildElement = DomUtils.getChildElementByTagName(_____________discountLineDetailChildElement, "discount-ref");
                                                                                                                    if (_______________discountRefChildElement!= null) {
                                                                                                                        parseProperty(_______________discountRefBuilder, _______________discountRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________discountRefBuilder, _______________discountRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________discountRefBuilder, _______________discountRefChildElement, "type", "type");
                                                                                                                        _____________discountLineDetailBuilder.addPropertyValue("discountRef", _______________discountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________discountLineDetailBuilder, _____________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                parseProperty(_____________discountLineDetailBuilder, _____________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                                                if (!parseObjectRef(_____________discountLineDetailChildElement, _____________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                    BeanDefinitionBuilder _______________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_____________discountLineDetailChildElement, "discount-account-ref");
                                                                                                                    if (_______________discountAccountRefChildElement!= null) {
                                                                                                                        parseProperty(_______________discountAccountRefBuilder, _______________discountAccountRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________discountAccountRefBuilder, _______________discountAccountRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________discountAccountRefBuilder, _______________discountAccountRefChildElement, "type", "type");
                                                                                                                        _____________discountLineDetailBuilder.addPropertyValue("discountAccountRef", _______________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________discountLineDetailBuilder, _____________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                if (!parseObjectRef(_____________discountLineDetailChildElement, _____________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                    BeanDefinitionBuilder ______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________classRefChildElement = DomUtils.getChildElementByTagName(_____________discountLineDetailChildElement, "class-ref");
                                                                                                                    if (______________classRefChildElement!= null) {
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "type", "type");
                                                                                                                        _____________discountLineDetailBuilder.addPropertyValue("classRef", ______________classRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________discountLineDetailChildElement, _____________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                    BeanDefinitionBuilder ______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____________discountLineDetailChildElement, "tax-code-ref");
                                                                                                                    if (______________taxCodeRefChildElement!= null) {
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "type", "type");
                                                                                                                        _____________discountLineDetailBuilder.addPropertyValue("taxCodeRef", ______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________discountLineDetailChildElement, _____________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                                                    if (______________discountLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________discountLineDetailExChildElement, ______________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", ______________discountLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("discountLineDetail", _____________discountLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                                            if (_____________taxLineDetailChildElement!= null) {
                                                                                                                if (!parseObjectRef(_____________taxLineDetailChildElement, _____________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                                                    BeanDefinitionBuilder ______________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________taxRateRefChildElement = DomUtils.getChildElementByTagName(_____________taxLineDetailChildElement, "tax-rate-ref");
                                                                                                                    if (______________taxRateRefChildElement!= null) {
                                                                                                                        parseProperty(______________taxRateRefBuilder, ______________taxRateRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________taxRateRefBuilder, ______________taxRateRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________taxRateRefBuilder, ______________taxRateRefChildElement, "type", "type");
                                                                                                                        _____________taxLineDetailBuilder.addPropertyValue("taxRateRef", ______________taxRateRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________taxLineDetailBuilder, _____________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                parseProperty(_____________taxLineDetailBuilder, _____________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                                                parseProperty(_____________taxLineDetailBuilder, _____________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                                                parseProperty(_____________taxLineDetailBuilder, _____________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                                                parseProperty(_____________taxLineDetailBuilder, _____________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                                                parseProperty(_____________taxLineDetailBuilder, _____________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                if (!parseObjectRef(_____________taxLineDetailChildElement, _____________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                                                    if (______________taxLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________taxLineDetailExChildElement, ______________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", ______________taxLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("taxLineDetail", _____________taxLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                                            if (_____________salesItemLineDetailChildElement!= null) {
                                                                                                                parseProperty(_____________salesItemLineDetailBuilder, _____________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                if (!parseObjectRef(_____________salesItemLineDetailChildElement, _____________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                    BeanDefinitionBuilder _______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________itemRefChildElement = DomUtils.getChildElementByTagName(_____________salesItemLineDetailChildElement, "item-ref");
                                                                                                                    if (_______________itemRefChildElement!= null) {
                                                                                                                        parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "type", "type");
                                                                                                                        _____________salesItemLineDetailBuilder.addPropertyValue("itemRef", _______________itemRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesItemLineDetailChildElement, _____________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                    BeanDefinitionBuilder _______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________classRefChildElement = DomUtils.getChildElementByTagName(_____________salesItemLineDetailChildElement, "class-ref");
                                                                                                                    if (_______________classRefChildElement!= null) {
                                                                                                                        parseProperty(_______________classRefBuilder, _______________classRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________classRefBuilder, _______________classRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________classRefBuilder, _______________classRefChildElement, "type", "type");
                                                                                                                        _____________salesItemLineDetailBuilder.addPropertyValue("classRef", _______________classRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________salesItemLineDetailBuilder, _____________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                parseProperty(_____________salesItemLineDetailBuilder, _____________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                if (!parseObjectRef(_____________salesItemLineDetailChildElement, _____________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                    BeanDefinitionBuilder _______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________salesItemLineDetailChildElement, "price-level-ref");
                                                                                                                    if (_______________priceLevelRefChildElement!= null) {
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "type", "type");
                                                                                                                        _____________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", _______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesItemLineDetailChildElement, _____________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                    BeanDefinitionBuilder _______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                    Element _______________markupInfoChildElement = DomUtils.getChildElementByTagName(_____________salesItemLineDetailChildElement, "markup-info");
                                                                                                                    if (_______________markupInfoChildElement!= null) {
                                                                                                                        parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                        parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "value", "value");
                                                                                                                        parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percent", "percent");
                                                                                                                        if (!parseObjectRef(_______________markupInfoChildElement, _______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                            BeanDefinitionBuilder ________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______________markupInfoChildElement, "price-level-ref");
                                                                                                                            if (________________priceLevelRefChildElement!= null) {
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "type", "type");
                                                                                                                                _______________markupInfoBuilder.addPropertyValue("priceLevelRef", ________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        _____________salesItemLineDetailBuilder.addPropertyValue("markupInfo", _______________markupInfoBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________salesItemLineDetailBuilder, _____________salesItemLineDetailChildElement, "qty", "qty");
                                                                                                                if (!parseObjectRef(_____________salesItemLineDetailChildElement, _____________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                    BeanDefinitionBuilder _______________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                    Element _______________uomRefChildElement = DomUtils.getChildElementByTagName(_____________salesItemLineDetailChildElement, "uom-ref");
                                                                                                                    if (_______________uomRefChildElement!= null) {
                                                                                                                        parseProperty(_______________uomRefBuilder, _______________uomRefChildElement, "unit", "unit");
                                                                                                                        _____________salesItemLineDetailBuilder.addPropertyValue("uomRef", _______________uomRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesItemLineDetailChildElement, _____________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                    BeanDefinitionBuilder _______________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_____________salesItemLineDetailChildElement, "item-account-ref");
                                                                                                                    if (_______________itemAccountRefChildElement!= null) {
                                                                                                                        parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "type", "type");
                                                                                                                        _____________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", _______________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesItemLineDetailChildElement, _____________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                    BeanDefinitionBuilder _______________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_____________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                    if (_______________inventorySiteRefChildElement!= null) {
                                                                                                                        parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "type", "type");
                                                                                                                        _____________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _______________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesItemLineDetailChildElement, _____________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                    BeanDefinitionBuilder _______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                                                    if (_______________taxCodeRefChildElement!= null) {
                                                                                                                        parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "type", "type");
                                                                                                                        _____________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", _______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________salesItemLineDetailBuilder, _____________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                parseProperty(_____________salesItemLineDetailBuilder, _____________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                if (!parseObjectRef(_____________salesItemLineDetailChildElement, _____________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                    if (______________salesItemLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________salesItemLineDetailExChildElement, ______________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ______________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("salesItemLineDetail", _____________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                                            if (_____________descriptionLineDetailChildElement!= null) {
                                                                                                                parseProperty(_____________descriptionLineDetailBuilder, _____________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                if (!parseObjectRef(_____________descriptionLineDetailChildElement, _____________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                    BeanDefinitionBuilder ______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                                                    if (______________taxCodeRefChildElement!= null) {
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "type", "type");
                                                                                                                        _____________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", ______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________descriptionLineDetailChildElement, _____________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                                                    if (______________descriptionLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________descriptionLineDetailExChildElement, ______________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", ______________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("descriptionLineDetail", _____________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                                            if (_____________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                                                parseProperty(_____________itemBasedExpenseLineDetailBuilder, _____________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                    BeanDefinitionBuilder _______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________itemRefChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                                                    if (_______________itemRefChildElement!= null) {
                                                                                                                        parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "type", "type");
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", _______________itemRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                    BeanDefinitionBuilder _______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________classRefChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                    if (_______________classRefChildElement!= null) {
                                                                                                                        parseProperty(_______________classRefBuilder, _______________classRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________classRefBuilder, _______________classRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________classRefBuilder, _______________classRefChildElement, "type", "type");
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _______________classRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________itemBasedExpenseLineDetailBuilder, _____________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                parseProperty(_____________itemBasedExpenseLineDetailBuilder, _____________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                    BeanDefinitionBuilder _______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                                                    if (_______________priceLevelRefChildElement!= null) {
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "type", "type");
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", _______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                    BeanDefinitionBuilder _______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                    Element _______________markupInfoChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                    if (_______________markupInfoChildElement!= null) {
                                                                                                                        parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                        parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "value", "value");
                                                                                                                        parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percent", "percent");
                                                                                                                        if (!parseObjectRef(_______________markupInfoChildElement, _______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                            BeanDefinitionBuilder ________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______________markupInfoChildElement, "price-level-ref");
                                                                                                                            if (________________priceLevelRefChildElement!= null) {
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "type", "type");
                                                                                                                                _______________markupInfoBuilder.addPropertyValue("priceLevelRef", ________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _______________markupInfoBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________itemBasedExpenseLineDetailBuilder, _____________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                    BeanDefinitionBuilder _______________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                    Element _______________uomRefChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                                                    if (_______________uomRefChildElement!= null) {
                                                                                                                        parseProperty(_______________uomRefBuilder, _______________uomRefChildElement, "unit", "unit");
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", _______________uomRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                    BeanDefinitionBuilder _______________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                                                    if (_______________itemAccountRefChildElement!= null) {
                                                                                                                        parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "type", "type");
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", _______________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                    BeanDefinitionBuilder _______________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                                                    if (_______________inventorySiteRefChildElement!= null) {
                                                                                                                        parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "type", "type");
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", _______________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                    BeanDefinitionBuilder _______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                    if (_______________taxCodeRefChildElement!= null) {
                                                                                                                        parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "type", "type");
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                    BeanDefinitionBuilder ______________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________customerRefChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                    if (______________customerRefChildElement!= null) {
                                                                                                                        parseProperty(______________customerRefBuilder, ______________customerRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________customerRefBuilder, ______________customerRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________customerRefBuilder, ______________customerRefChildElement, "type", "type");
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ______________customerRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________itemBasedExpenseLineDetailBuilder, _____________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                parseProperty(_____________itemBasedExpenseLineDetailBuilder, _____________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                if (!parseObjectRef(_____________itemBasedExpenseLineDetailChildElement, _____________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                                                    if (______________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________itemBasedExpenseLineDetailExChildElement, ______________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", ______________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("itemBasedExpenseLineDetail", _____________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                                            if (_____________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                                                if (!parseObjectRef(_____________accountBasedExpenseLineDetailChildElement, _____________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                    BeanDefinitionBuilder ______________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________customerRefChildElement = DomUtils.getChildElementByTagName(_____________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                    if (______________customerRefChildElement!= null) {
                                                                                                                        parseProperty(______________customerRefBuilder, ______________customerRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________customerRefBuilder, ______________customerRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________customerRefBuilder, ______________customerRefChildElement, "type", "type");
                                                                                                                        _____________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ______________customerRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________accountBasedExpenseLineDetailChildElement, _____________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                    BeanDefinitionBuilder ______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________classRefChildElement = DomUtils.getChildElementByTagName(_____________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                    if (______________classRefChildElement!= null) {
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "type", "type");
                                                                                                                        _____________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ______________classRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________accountBasedExpenseLineDetailChildElement, _____________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                    BeanDefinitionBuilder ______________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________accountRefChildElement = DomUtils.getChildElementByTagName(_____________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                                                    if (______________accountRefChildElement!= null) {
                                                                                                                        parseProperty(______________accountRefBuilder, ______________accountRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________accountRefBuilder, ______________accountRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________accountRefBuilder, ______________accountRefChildElement, "type", "type");
                                                                                                                        _____________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", ______________accountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________accountBasedExpenseLineDetailBuilder, _____________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                if (!parseObjectRef(_____________accountBasedExpenseLineDetailChildElement, _____________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                    BeanDefinitionBuilder ______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                    Element ______________markupInfoChildElement = DomUtils.getChildElementByTagName(_____________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                    if (______________markupInfoChildElement!= null) {
                                                                                                                        parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                        parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "value", "value");
                                                                                                                        parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percent", "percent");
                                                                                                                        if (!parseObjectRef(______________markupInfoChildElement, ______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                            BeanDefinitionBuilder _______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________markupInfoChildElement, "price-level-ref");
                                                                                                                            if (_______________priceLevelRefChildElement!= null) {
                                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "type", "type");
                                                                                                                                ______________markupInfoBuilder.addPropertyValue("priceLevelRef", _______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        _____________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ______________markupInfoBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________accountBasedExpenseLineDetailBuilder, _____________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                if (!parseObjectRef(_____________accountBasedExpenseLineDetailChildElement, _____________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                    BeanDefinitionBuilder ______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                    if (______________taxCodeRefChildElement!= null) {
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "type", "type");
                                                                                                                        _____________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________accountBasedExpenseLineDetailBuilder, _____________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                if (!parseObjectRef(_____________accountBasedExpenseLineDetailChildElement, _____________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                                                    if (______________expenseDetailLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________expenseDetailLineDetailExChildElement, ______________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", ______________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("accountBasedExpenseLineDetail", _____________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                                            if (_____________depositLineDetailChildElement!= null) {
                                                                                                                if (!parseObjectRef(_____________depositLineDetailChildElement, _____________depositLineDetailBuilder, "entity", "entity")) {
                                                                                                                    BeanDefinitionBuilder ______________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________entityChildElement = DomUtils.getChildElementByTagName(_____________depositLineDetailChildElement, "entity");
                                                                                                                    if (______________entityChildElement!= null) {
                                                                                                                        parseProperty(______________entityBuilder, ______________entityChildElement, "value", "value");
                                                                                                                        parseProperty(______________entityBuilder, ______________entityChildElement, "name", "name");
                                                                                                                        parseProperty(______________entityBuilder, ______________entityChildElement, "type", "type");
                                                                                                                        _____________depositLineDetailBuilder.addPropertyValue("entity", ______________entityBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________depositLineDetailChildElement, _____________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                    BeanDefinitionBuilder ______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________classRefChildElement = DomUtils.getChildElementByTagName(_____________depositLineDetailChildElement, "class-ref");
                                                                                                                    if (______________classRefChildElement!= null) {
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "type", "type");
                                                                                                                        _____________depositLineDetailBuilder.addPropertyValue("classRef", ______________classRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________depositLineDetailChildElement, _____________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                    BeanDefinitionBuilder ______________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________accountRefChildElement = DomUtils.getChildElementByTagName(_____________depositLineDetailChildElement, "account-ref");
                                                                                                                    if (______________accountRefChildElement!= null) {
                                                                                                                        parseProperty(______________accountRefBuilder, ______________accountRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________accountRefBuilder, ______________accountRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________accountRefBuilder, ______________accountRefChildElement, "type", "type");
                                                                                                                        _____________depositLineDetailBuilder.addPropertyValue("accountRef", ______________accountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________depositLineDetailChildElement, _____________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                                                    BeanDefinitionBuilder ______________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(_____________depositLineDetailChildElement, "payment-method-ref");
                                                                                                                    if (______________paymentMethodRefChildElement!= null) {
                                                                                                                        parseProperty(______________paymentMethodRefBuilder, ______________paymentMethodRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________paymentMethodRefBuilder, ______________paymentMethodRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________paymentMethodRefBuilder, ______________paymentMethodRefChildElement, "type", "type");
                                                                                                                        _____________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", ______________paymentMethodRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________depositLineDetailBuilder, _____________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                                                parseProperty(_____________depositLineDetailBuilder, _____________depositLineDetailChildElement, "txnType", "txnType");
                                                                                                                if (!parseObjectRef(_____________depositLineDetailChildElement, _____________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                                                    if (______________depositLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________depositLineDetailExChildElement, ______________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", ______________depositLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("depositLineDetail", _____________depositLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                                            if (_____________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder _______________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                    if (_______________salesItemLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(_______________salesItemLineDetailExChildElement, _______________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _______________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                    BeanDefinitionBuilder ________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________itemRefChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                                                    if (________________itemRefChildElement!= null) {
                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "type", "type");
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", ________________itemRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                    BeanDefinitionBuilder ________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________classRefChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                                                    if (________________classRefChildElement!= null) {
                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "type", "type");
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", ________________classRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                    BeanDefinitionBuilder ________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                    if (________________priceLevelRefChildElement!= null) {
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "type", "type");
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                    BeanDefinitionBuilder ________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                    Element ________________markupInfoChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                                                    if (________________markupInfoChildElement!= null) {
                                                                                                                        parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                        parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "value", "value");
                                                                                                                        parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percent", "percent");
                                                                                                                        if (!parseObjectRef(________________markupInfoChildElement, ________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                            BeanDefinitionBuilder _________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________________markupInfoChildElement, "price-level-ref");
                                                                                                                            if (_________________priceLevelRefChildElement!= null) {
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "type", "type");
                                                                                                                                ________________markupInfoBuilder.addPropertyValue("priceLevelRef", _________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ________________markupInfoBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                    BeanDefinitionBuilder ________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                    Element ________________uomRefChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                    if (________________uomRefChildElement!= null) {
                                                                                                                        parseProperty(________________uomRefBuilder, ________________uomRefChildElement, "unit", "unit");
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", ________________uomRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                    BeanDefinitionBuilder ________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                    if (________________itemAccountRefChildElement!= null) {
                                                                                                                        parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "type", "type");
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                    BeanDefinitionBuilder ________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                    if (________________inventorySiteRefChildElement!= null) {
                                                                                                                        parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "type", "type");
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                    BeanDefinitionBuilder ________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                    if (________________taxCodeRefChildElement!= null) {
                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "type", "type");
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                parseProperty(_____________purchaseOrderItemLineDetailBuilder, _____________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                                                if (!parseObjectRef(_____________purchaseOrderItemLineDetailChildElement, _____________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                                                    if (______________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________purchaseOrderItemLineDetailExChildElement, ______________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", ______________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("purchaseOrderItemLineDetail", _____________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                                            if (_____________salesOrderItemLineDetailChildElement!= null) {
                                                                                                                parseProperty(_____________salesOrderItemLineDetailBuilder, _____________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                parseProperty(_____________salesOrderItemLineDetailBuilder, _____________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                parseProperty(_____________salesOrderItemLineDetailBuilder, _____________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                if (!parseObjectRef(_____________salesOrderItemLineDetailChildElement, _____________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder _______________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                    if (_______________salesItemLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(_______________salesItemLineDetailExChildElement, _______________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _______________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________salesOrderItemLineDetailBuilder, _____________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                if (!parseObjectRef(_____________salesOrderItemLineDetailChildElement, _____________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                    BeanDefinitionBuilder ________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________itemRefChildElement = DomUtils.getChildElementByTagName(_____________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                                                    if (________________itemRefChildElement!= null) {
                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "type", "type");
                                                                                                                        _____________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", ________________itemRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesOrderItemLineDetailChildElement, _____________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                    BeanDefinitionBuilder ________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________classRefChildElement = DomUtils.getChildElementByTagName(_____________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                                                    if (________________classRefChildElement!= null) {
                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "type", "type");
                                                                                                                        _____________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", ________________classRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________salesOrderItemLineDetailBuilder, _____________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                parseProperty(_____________salesOrderItemLineDetailBuilder, _____________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                if (!parseObjectRef(_____________salesOrderItemLineDetailChildElement, _____________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                    BeanDefinitionBuilder ________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                    if (________________priceLevelRefChildElement!= null) {
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "type", "type");
                                                                                                                        _____________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesOrderItemLineDetailChildElement, _____________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                    BeanDefinitionBuilder ________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                    Element ________________markupInfoChildElement = DomUtils.getChildElementByTagName(_____________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                                                    if (________________markupInfoChildElement!= null) {
                                                                                                                        parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                        parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "value", "value");
                                                                                                                        parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percent", "percent");
                                                                                                                        if (!parseObjectRef(________________markupInfoChildElement, ________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                            BeanDefinitionBuilder _________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________________markupInfoChildElement, "price-level-ref");
                                                                                                                            if (_________________priceLevelRefChildElement!= null) {
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "type", "type");
                                                                                                                                ________________markupInfoBuilder.addPropertyValue("priceLevelRef", _________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        _____________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ________________markupInfoBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________salesOrderItemLineDetailBuilder, _____________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                if (!parseObjectRef(_____________salesOrderItemLineDetailChildElement, _____________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                    BeanDefinitionBuilder ________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                    Element ________________uomRefChildElement = DomUtils.getChildElementByTagName(_____________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                    if (________________uomRefChildElement!= null) {
                                                                                                                        parseProperty(________________uomRefBuilder, ________________uomRefChildElement, "unit", "unit");
                                                                                                                        _____________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", ________________uomRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesOrderItemLineDetailChildElement, _____________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                    BeanDefinitionBuilder ________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_____________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                    if (________________itemAccountRefChildElement!= null) {
                                                                                                                        parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "type", "type");
                                                                                                                        _____________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesOrderItemLineDetailChildElement, _____________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                    BeanDefinitionBuilder ________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_____________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                    if (________________inventorySiteRefChildElement!= null) {
                                                                                                                        parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "type", "type");
                                                                                                                        _____________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________salesOrderItemLineDetailChildElement, _____________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                    BeanDefinitionBuilder ________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                    if (________________taxCodeRefChildElement!= null) {
                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "type", "type");
                                                                                                                        _____________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________salesOrderItemLineDetailBuilder, _____________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                builder.addPropertyValue("salesOrderItemLineDetail", _____________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                                            if (_____________itemReceiptLineDetailChildElement!= null) {
                                                                                                                if (!parseObjectRef(_____________itemReceiptLineDetailChildElement, _____________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                                                    if (______________itemReceiptLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________itemReceiptLineDetailExChildElement, ______________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", ______________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("itemReceiptLineDetail", _____________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                                            if (_____________journalEntryLineDetailChildElement!= null) {
                                                                                                                parseProperty(_____________journalEntryLineDetailBuilder, _____________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                                                if (!parseObjectRef(_____________journalEntryLineDetailChildElement, _____________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                                                    BeanDefinitionBuilder ______________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                                                    Element ______________entityChildElement = DomUtils.getChildElementByTagName(_____________journalEntryLineDetailChildElement, "entity");
                                                                                                                    if (______________entityChildElement!= null) {
                                                                                                                        parseProperty(______________entityBuilder, ______________entityChildElement, "type", "type");
                                                                                                                        if (!parseObjectRef(______________entityChildElement, ______________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                                            BeanDefinitionBuilder _______________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________entityRefChildElement = DomUtils.getChildElementByTagName(______________entityChildElement, "entity-ref");
                                                                                                                            if (_______________entityRefChildElement!= null) {
                                                                                                                                parseProperty(_______________entityRefBuilder, _______________entityRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________entityRefBuilder, _______________entityRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________entityRefBuilder, _______________entityRefChildElement, "type", "type");
                                                                                                                                ______________entityBuilder.addPropertyValue("entityRef", _______________entityRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        _____________journalEntryLineDetailBuilder.addPropertyValue("entity", ______________entityBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________journalEntryLineDetailChildElement, _____________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                    BeanDefinitionBuilder ______________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________accountRefChildElement = DomUtils.getChildElementByTagName(_____________journalEntryLineDetailChildElement, "account-ref");
                                                                                                                    if (______________accountRefChildElement!= null) {
                                                                                                                        parseProperty(______________accountRefBuilder, ______________accountRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________accountRefBuilder, ______________accountRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________accountRefBuilder, ______________accountRefChildElement, "type", "type");
                                                                                                                        _____________journalEntryLineDetailBuilder.addPropertyValue("accountRef", ______________accountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________journalEntryLineDetailChildElement, _____________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                    BeanDefinitionBuilder ______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________classRefChildElement = DomUtils.getChildElementByTagName(_____________journalEntryLineDetailChildElement, "class-ref");
                                                                                                                    if (______________classRefChildElement!= null) {
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________classRefBuilder, ______________classRefChildElement, "type", "type");
                                                                                                                        _____________journalEntryLineDetailBuilder.addPropertyValue("classRef", ______________classRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________journalEntryLineDetailChildElement, _____________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                                                    BeanDefinitionBuilder ______________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________departmentRefChildElement = DomUtils.getChildElementByTagName(_____________journalEntryLineDetailChildElement, "department-ref");
                                                                                                                    if (______________departmentRefChildElement!= null) {
                                                                                                                        parseProperty(______________departmentRefBuilder, ______________departmentRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________departmentRefBuilder, ______________departmentRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________departmentRefBuilder, ______________departmentRefChildElement, "type", "type");
                                                                                                                        _____________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", ______________departmentRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(_____________journalEntryLineDetailChildElement, _____________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                    BeanDefinitionBuilder ______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_____________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                                                    if (______________taxCodeRefChildElement!= null) {
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "type", "type");
                                                                                                                        _____________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", ______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________journalEntryLineDetailBuilder, _____________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                                                parseProperty(_____________journalEntryLineDetailBuilder, _____________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                parseProperty(_____________journalEntryLineDetailBuilder, _____________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                if (!parseObjectRef(_____________journalEntryLineDetailChildElement, _____________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                                                    if (______________journalEntryLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________journalEntryLineDetailExChildElement, ______________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", ______________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("journalEntryLineDetail", _____________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                                            if (_____________groupLineDetailChildElement!= null) {
                                                                                                                if (!parseObjectRef(_____________groupLineDetailChildElement, _____________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                                                    BeanDefinitionBuilder ______________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________groupItemRefChildElement = DomUtils.getChildElementByTagName(_____________groupLineDetailChildElement, "group-item-ref");
                                                                                                                    if (______________groupItemRefChildElement!= null) {
                                                                                                                        parseProperty(______________groupItemRefBuilder, ______________groupItemRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________groupItemRefBuilder, ______________groupItemRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________groupItemRefBuilder, ______________groupItemRefChildElement, "type", "type");
                                                                                                                        _____________groupLineDetailBuilder.addPropertyValue("groupItemRef", ______________groupItemRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________groupLineDetailBuilder, _____________groupLineDetailChildElement, "quantity", "quantity");
                                                                                                                parseProperty(_____________groupLineDetailBuilder, _____________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                parseListAndSetProperty(_____________groupLineDetailChildElement, _____________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                                                        parseProperty(builder, element, "id", "id");
                                                                                                                        parseProperty(builder, element, "lineNum", "lineNum");
                                                                                                                        parseProperty(builder, element, "description", "description");
                                                                                                                        parseProperty(builder, element, "amount", "amount");
                                                                                                                        parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                                                                parseProperty(builder, element, "txnId", "txnId");
                                                                                                                                parseProperty(builder, element, "txnType", "txnType");
                                                                                                                                parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                                                                return builder.getBeanDefinition();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        parseProperty(builder, element, "detailType", "detailType");
                                                                                                                        if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                                                            if (_______________paymentLineDetailChildElement!= null) {
                                                                                                                                if (!parseObjectRef(_______________paymentLineDetailChildElement, _______________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________itemRefChildElement = DomUtils.getChildElementByTagName(_______________paymentLineDetailChildElement, "item-ref");
                                                                                                                                    if (________________itemRefChildElement!= null) {
                                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "type", "type");
                                                                                                                                        _______________paymentLineDetailBuilder.addPropertyValue("itemRef", ________________itemRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________paymentLineDetailBuilder, _______________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                if (!parseObjectRef(_______________paymentLineDetailChildElement, _______________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________classRefChildElement = DomUtils.getChildElementByTagName(_______________paymentLineDetailChildElement, "class-ref");
                                                                                                                                    if (________________classRefChildElement!= null) {
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "type", "type");
                                                                                                                                        _______________paymentLineDetailBuilder.addPropertyValue("classRef", ________________classRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________paymentLineDetailBuilder, _______________paymentLineDetailChildElement, "balance", "balance");
                                                                                                                                if (!parseObjectRef(_______________paymentLineDetailChildElement, _______________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                                                                    BeanDefinitionBuilder ________________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                                                                    Element ________________discountChildElement = DomUtils.getChildElementByTagName(_______________paymentLineDetailChildElement, "discount");
                                                                                                                                    if (________________discountChildElement!= null) {
                                                                                                                                        if (!parseObjectRef(________________discountChildElement, ________________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________discountRefChildElement = DomUtils.getChildElementByTagName(________________discountChildElement, "discount-ref");
                                                                                                                                            if (_________________discountRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________discountRefBuilder, _________________discountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________discountRefBuilder, _________________discountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________discountRefBuilder, _________________discountRefChildElement, "type", "type");
                                                                                                                                                ________________discountBuilder.addPropertyValue("discountRef", _________________discountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________discountBuilder, ________________discountChildElement, "percentBased", "percentBased");
                                                                                                                                        parseProperty(________________discountBuilder, ________________discountChildElement, "discountPercent", "discountPercent");
                                                                                                                                        if (!parseObjectRef(________________discountChildElement, ________________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(________________discountChildElement, "discount-account-ref");
                                                                                                                                            if (_________________discountAccountRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________discountAccountRefBuilder, _________________discountAccountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________discountAccountRefBuilder, _________________discountAccountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________discountAccountRefBuilder, _________________discountAccountRefChildElement, "type", "type");
                                                                                                                                                ________________discountBuilder.addPropertyValue("discountAccountRef", _________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        _______________paymentLineDetailBuilder.addPropertyValue("discount", ________________discountBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________paymentLineDetailChildElement, _______________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________paymentLineExChildElement = DomUtils.getChildElementByTagName(_______________paymentLineDetailChildElement, "payment-line-ex");
                                                                                                                                    if (________________paymentLineExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________paymentLineExChildElement, ________________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", ________________paymentLineExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("paymentLineDetail", _______________paymentLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                                                            if (_______________discountLineDetailChildElement!= null) {
                                                                                                                                parseProperty(_______________discountLineDetailBuilder, _______________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                if (!parseObjectRef(_______________discountLineDetailChildElement, _______________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________discountRefChildElement = DomUtils.getChildElementByTagName(_______________discountLineDetailChildElement, "discount-ref");
                                                                                                                                    if (_________________discountRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________discountRefBuilder, _________________discountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________discountRefBuilder, _________________discountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________discountRefBuilder, _________________discountRefChildElement, "type", "type");
                                                                                                                                        _______________discountLineDetailBuilder.addPropertyValue("discountRef", _________________discountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________discountLineDetailBuilder, _______________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                parseProperty(_______________discountLineDetailBuilder, _______________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                                                                if (!parseObjectRef(_______________discountLineDetailChildElement, _______________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_______________discountLineDetailChildElement, "discount-account-ref");
                                                                                                                                    if (_________________discountAccountRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________discountAccountRefBuilder, _________________discountAccountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________discountAccountRefBuilder, _________________discountAccountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________discountAccountRefBuilder, _________________discountAccountRefChildElement, "type", "type");
                                                                                                                                        _______________discountLineDetailBuilder.addPropertyValue("discountAccountRef", _________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________discountLineDetailBuilder, _______________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                if (!parseObjectRef(_______________discountLineDetailChildElement, _______________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________classRefChildElement = DomUtils.getChildElementByTagName(_______________discountLineDetailChildElement, "class-ref");
                                                                                                                                    if (________________classRefChildElement!= null) {
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "type", "type");
                                                                                                                                        _______________discountLineDetailBuilder.addPropertyValue("classRef", ________________classRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________discountLineDetailChildElement, _______________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______________discountLineDetailChildElement, "tax-code-ref");
                                                                                                                                    if (________________taxCodeRefChildElement!= null) {
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "type", "type");
                                                                                                                                        _______________discountLineDetailBuilder.addPropertyValue("taxCodeRef", ________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________discountLineDetailChildElement, _______________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                                                                    if (________________discountLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________discountLineDetailExChildElement, ________________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", ________________discountLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("discountLineDetail", _______________discountLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                                                            if (_______________taxLineDetailChildElement!= null) {
                                                                                                                                if (!parseObjectRef(_______________taxLineDetailChildElement, _______________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________taxRateRefChildElement = DomUtils.getChildElementByTagName(_______________taxLineDetailChildElement, "tax-rate-ref");
                                                                                                                                    if (________________taxRateRefChildElement!= null) {
                                                                                                                                        parseProperty(________________taxRateRefBuilder, ________________taxRateRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________taxRateRefBuilder, ________________taxRateRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________taxRateRefBuilder, ________________taxRateRefChildElement, "type", "type");
                                                                                                                                        _______________taxLineDetailBuilder.addPropertyValue("taxRateRef", ________________taxRateRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________taxLineDetailBuilder, _______________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                parseProperty(_______________taxLineDetailBuilder, _______________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                                                                parseProperty(_______________taxLineDetailBuilder, _______________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                                                                parseProperty(_______________taxLineDetailBuilder, _______________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                                                                parseProperty(_______________taxLineDetailBuilder, _______________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                                                                parseProperty(_______________taxLineDetailBuilder, _______________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                if (!parseObjectRef(_______________taxLineDetailChildElement, _______________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                                                                    if (________________taxLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________taxLineDetailExChildElement, ________________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", ________________taxLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("taxLineDetail", _______________taxLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                                                            if (_______________salesItemLineDetailChildElement!= null) {
                                                                                                                                parseProperty(_______________salesItemLineDetailBuilder, _______________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                if (!parseObjectRef(_______________salesItemLineDetailChildElement, _______________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________itemRefChildElement = DomUtils.getChildElementByTagName(_______________salesItemLineDetailChildElement, "item-ref");
                                                                                                                                    if (_________________itemRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "type", "type");
                                                                                                                                        _______________salesItemLineDetailBuilder.addPropertyValue("itemRef", _________________itemRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesItemLineDetailChildElement, _______________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________classRefChildElement = DomUtils.getChildElementByTagName(_______________salesItemLineDetailChildElement, "class-ref");
                                                                                                                                    if (_________________classRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________classRefBuilder, _________________classRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________classRefBuilder, _________________classRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________classRefBuilder, _________________classRefChildElement, "type", "type");
                                                                                                                                        _______________salesItemLineDetailBuilder.addPropertyValue("classRef", _________________classRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________salesItemLineDetailBuilder, _______________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                parseProperty(_______________salesItemLineDetailBuilder, _______________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                if (!parseObjectRef(_______________salesItemLineDetailChildElement, _______________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______________salesItemLineDetailChildElement, "price-level-ref");
                                                                                                                                    if (_________________priceLevelRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "type", "type");
                                                                                                                                        _______________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", _________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesItemLineDetailChildElement, _______________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                    BeanDefinitionBuilder _________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                    Element _________________markupInfoChildElement = DomUtils.getChildElementByTagName(_______________salesItemLineDetailChildElement, "markup-info");
                                                                                                                                    if (_________________markupInfoChildElement!= null) {
                                                                                                                                        parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                        parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percent", "percent");
                                                                                                                                        if (!parseObjectRef(_________________markupInfoChildElement, _________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________________markupInfoChildElement, "price-level-ref");
                                                                                                                                            if (__________________priceLevelRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                _________________markupInfoBuilder.addPropertyValue("priceLevelRef", __________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        _______________salesItemLineDetailBuilder.addPropertyValue("markupInfo", _________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________salesItemLineDetailBuilder, _______________salesItemLineDetailChildElement, "qty", "qty");
                                                                                                                                if (!parseObjectRef(_______________salesItemLineDetailChildElement, _______________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                    Element _________________uomRefChildElement = DomUtils.getChildElementByTagName(_______________salesItemLineDetailChildElement, "uom-ref");
                                                                                                                                    if (_________________uomRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________uomRefBuilder, _________________uomRefChildElement, "unit", "unit");
                                                                                                                                        _______________salesItemLineDetailBuilder.addPropertyValue("uomRef", _________________uomRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesItemLineDetailChildElement, _______________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_______________salesItemLineDetailChildElement, "item-account-ref");
                                                                                                                                    if (_________________itemAccountRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "type", "type");
                                                                                                                                        _______________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", _________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesItemLineDetailChildElement, _______________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_______________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                    if (_________________inventorySiteRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                        _______________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesItemLineDetailChildElement, _______________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                    if (_________________taxCodeRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "type", "type");
                                                                                                                                        _______________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", _________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________salesItemLineDetailBuilder, _______________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                parseProperty(_______________salesItemLineDetailBuilder, _______________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                if (!parseObjectRef(_______________salesItemLineDetailChildElement, _______________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                    if (________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________salesItemLineDetailExChildElement, ________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("salesItemLineDetail", _______________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                                                            if (_______________descriptionLineDetailChildElement!= null) {
                                                                                                                                parseProperty(_______________descriptionLineDetailBuilder, _______________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                if (!parseObjectRef(_______________descriptionLineDetailChildElement, _______________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                                                                    if (________________taxCodeRefChildElement!= null) {
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "type", "type");
                                                                                                                                        _______________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", ________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________descriptionLineDetailChildElement, _______________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                                                                    if (________________descriptionLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________descriptionLineDetailExChildElement, ________________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", ________________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("descriptionLineDetail", _______________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                                                            if (_______________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                parseProperty(_______________itemBasedExpenseLineDetailBuilder, _______________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________itemRefChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                                                                    if (_________________itemRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "type", "type");
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", _________________itemRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________classRefChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                    if (_________________classRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________classRefBuilder, _________________classRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________classRefBuilder, _________________classRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________classRefBuilder, _________________classRefChildElement, "type", "type");
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _________________classRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________itemBasedExpenseLineDetailBuilder, _______________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                parseProperty(_______________itemBasedExpenseLineDetailBuilder, _______________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                                                                    if (_________________priceLevelRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "type", "type");
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", _________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                    BeanDefinitionBuilder _________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                    Element _________________markupInfoChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                    if (_________________markupInfoChildElement!= null) {
                                                                                                                                        parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                        parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percent", "percent");
                                                                                                                                        if (!parseObjectRef(_________________markupInfoChildElement, _________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________________markupInfoChildElement, "price-level-ref");
                                                                                                                                            if (__________________priceLevelRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                _________________markupInfoBuilder.addPropertyValue("priceLevelRef", __________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________itemBasedExpenseLineDetailBuilder, _______________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                    Element _________________uomRefChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                                                                    if (_________________uomRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________uomRefBuilder, _________________uomRefChildElement, "unit", "unit");
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", _________________uomRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                                                                    if (_________________itemAccountRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "type", "type");
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", _________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                                                                    if (_________________inventorySiteRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", _________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                    if (_________________taxCodeRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "type", "type");
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________customerRefChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                    if (________________customerRefChildElement!= null) {
                                                                                                                                        parseProperty(________________customerRefBuilder, ________________customerRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________customerRefBuilder, ________________customerRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________customerRefBuilder, ________________customerRefChildElement, "type", "type");
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ________________customerRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________itemBasedExpenseLineDetailBuilder, _______________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                parseProperty(_______________itemBasedExpenseLineDetailBuilder, _______________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                if (!parseObjectRef(_______________itemBasedExpenseLineDetailChildElement, _______________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                                                                    if (________________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________itemBasedExpenseLineDetailExChildElement, ________________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", ________________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("itemBasedExpenseLineDetail", _______________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                                                            if (_______________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                if (!parseObjectRef(_______________accountBasedExpenseLineDetailChildElement, _______________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________customerRefChildElement = DomUtils.getChildElementByTagName(_______________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                    if (________________customerRefChildElement!= null) {
                                                                                                                                        parseProperty(________________customerRefBuilder, ________________customerRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________customerRefBuilder, ________________customerRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________customerRefBuilder, ________________customerRefChildElement, "type", "type");
                                                                                                                                        _______________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ________________customerRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________accountBasedExpenseLineDetailChildElement, _______________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________classRefChildElement = DomUtils.getChildElementByTagName(_______________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                    if (________________classRefChildElement!= null) {
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "type", "type");
                                                                                                                                        _______________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ________________classRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________accountBasedExpenseLineDetailChildElement, _______________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________accountRefChildElement = DomUtils.getChildElementByTagName(_______________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                                                                    if (________________accountRefChildElement!= null) {
                                                                                                                                        parseProperty(________________accountRefBuilder, ________________accountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________accountRefBuilder, ________________accountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________accountRefBuilder, ________________accountRefChildElement, "type", "type");
                                                                                                                                        _______________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", ________________accountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________accountBasedExpenseLineDetailBuilder, _______________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                if (!parseObjectRef(_______________accountBasedExpenseLineDetailChildElement, _______________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                    BeanDefinitionBuilder ________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                    Element ________________markupInfoChildElement = DomUtils.getChildElementByTagName(_______________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                    if (________________markupInfoChildElement!= null) {
                                                                                                                                        parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                        parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "value", "value");
                                                                                                                                        parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percent", "percent");
                                                                                                                                        if (!parseObjectRef(________________markupInfoChildElement, ________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________________markupInfoChildElement, "price-level-ref");
                                                                                                                                            if (_________________priceLevelRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                ________________markupInfoBuilder.addPropertyValue("priceLevelRef", _________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        _______________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________accountBasedExpenseLineDetailBuilder, _______________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                if (!parseObjectRef(_______________accountBasedExpenseLineDetailChildElement, _______________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                    if (________________taxCodeRefChildElement!= null) {
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "type", "type");
                                                                                                                                        _______________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________accountBasedExpenseLineDetailBuilder, _______________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                if (!parseObjectRef(_______________accountBasedExpenseLineDetailChildElement, _______________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                                                                    if (________________expenseDetailLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________expenseDetailLineDetailExChildElement, ________________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", ________________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("accountBasedExpenseLineDetail", _______________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                                                            if (_______________depositLineDetailChildElement!= null) {
                                                                                                                                if (!parseObjectRef(_______________depositLineDetailChildElement, _______________depositLineDetailBuilder, "entity", "entity")) {
                                                                                                                                    BeanDefinitionBuilder ________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________entityChildElement = DomUtils.getChildElementByTagName(_______________depositLineDetailChildElement, "entity");
                                                                                                                                    if (________________entityChildElement!= null) {
                                                                                                                                        parseProperty(________________entityBuilder, ________________entityChildElement, "value", "value");
                                                                                                                                        parseProperty(________________entityBuilder, ________________entityChildElement, "name", "name");
                                                                                                                                        parseProperty(________________entityBuilder, ________________entityChildElement, "type", "type");
                                                                                                                                        _______________depositLineDetailBuilder.addPropertyValue("entity", ________________entityBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________depositLineDetailChildElement, _______________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________classRefChildElement = DomUtils.getChildElementByTagName(_______________depositLineDetailChildElement, "class-ref");
                                                                                                                                    if (________________classRefChildElement!= null) {
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "type", "type");
                                                                                                                                        _______________depositLineDetailBuilder.addPropertyValue("classRef", ________________classRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________depositLineDetailChildElement, _______________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________accountRefChildElement = DomUtils.getChildElementByTagName(_______________depositLineDetailChildElement, "account-ref");
                                                                                                                                    if (________________accountRefChildElement!= null) {
                                                                                                                                        parseProperty(________________accountRefBuilder, ________________accountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________accountRefBuilder, ________________accountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________accountRefBuilder, ________________accountRefChildElement, "type", "type");
                                                                                                                                        _______________depositLineDetailBuilder.addPropertyValue("accountRef", ________________accountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________depositLineDetailChildElement, _______________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(_______________depositLineDetailChildElement, "payment-method-ref");
                                                                                                                                    if (________________paymentMethodRefChildElement!= null) {
                                                                                                                                        parseProperty(________________paymentMethodRefBuilder, ________________paymentMethodRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________paymentMethodRefBuilder, ________________paymentMethodRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________paymentMethodRefBuilder, ________________paymentMethodRefChildElement, "type", "type");
                                                                                                                                        _______________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", ________________paymentMethodRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________depositLineDetailBuilder, _______________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                                                                parseProperty(_______________depositLineDetailBuilder, _______________depositLineDetailChildElement, "txnType", "txnType");
                                                                                                                                if (!parseObjectRef(_______________depositLineDetailChildElement, _______________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                                                                    if (________________depositLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________depositLineDetailExChildElement, ________________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", ________________depositLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("depositLineDetail", _______________depositLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                                                            if (_______________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder _________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                    if (_________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(_________________salesItemLineDetailExChildElement, _________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________itemRefChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                    if (__________________itemRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "type", "type");
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", __________________itemRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________classRefChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                    if (__________________classRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "type", "type");
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", __________________classRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                    if (__________________priceLevelRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "type", "type");
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", __________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                    BeanDefinitionBuilder __________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                    Element __________________markupInfoChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                    if (__________________markupInfoChildElement!= null) {
                                                                                                                                        parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                        parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percent", "percent");
                                                                                                                                        if (!parseObjectRef(__________________markupInfoChildElement, __________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________________markupInfoChildElement, "price-level-ref");
                                                                                                                                            if (___________________priceLevelRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                __________________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", __________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                    Element __________________uomRefChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                    if (__________________uomRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________uomRefBuilder, __________________uomRefChildElement, "unit", "unit");
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", __________________uomRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                    if (__________________itemAccountRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "type", "type");
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", __________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                    if (__________________inventorySiteRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", __________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                    if (__________________taxCodeRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "type", "type");
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", __________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                parseProperty(_______________purchaseOrderItemLineDetailBuilder, _______________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                                                                if (!parseObjectRef(_______________purchaseOrderItemLineDetailChildElement, _______________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                                                                    if (________________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________purchaseOrderItemLineDetailExChildElement, ________________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", ________________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("purchaseOrderItemLineDetail", _______________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                                                            if (_______________salesOrderItemLineDetailChildElement!= null) {
                                                                                                                                parseProperty(_______________salesOrderItemLineDetailBuilder, _______________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                parseProperty(_______________salesOrderItemLineDetailBuilder, _______________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                parseProperty(_______________salesOrderItemLineDetailBuilder, _______________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                if (!parseObjectRef(_______________salesOrderItemLineDetailChildElement, _______________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder _________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                    if (_________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(_________________salesItemLineDetailExChildElement, _________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________salesOrderItemLineDetailBuilder, _______________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                if (!parseObjectRef(_______________salesOrderItemLineDetailChildElement, _______________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________itemRefChildElement = DomUtils.getChildElementByTagName(_______________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                    if (__________________itemRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "type", "type");
                                                                                                                                        _______________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", __________________itemRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesOrderItemLineDetailChildElement, _______________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________classRefChildElement = DomUtils.getChildElementByTagName(_______________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                    if (__________________classRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "type", "type");
                                                                                                                                        _______________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", __________________classRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________salesOrderItemLineDetailBuilder, _______________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                parseProperty(_______________salesOrderItemLineDetailBuilder, _______________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                if (!parseObjectRef(_______________salesOrderItemLineDetailChildElement, _______________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                    if (__________________priceLevelRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "type", "type");
                                                                                                                                        _______________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", __________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesOrderItemLineDetailChildElement, _______________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                    BeanDefinitionBuilder __________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                    Element __________________markupInfoChildElement = DomUtils.getChildElementByTagName(_______________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                    if (__________________markupInfoChildElement!= null) {
                                                                                                                                        parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                        parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percent", "percent");
                                                                                                                                        if (!parseObjectRef(__________________markupInfoChildElement, __________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________________markupInfoChildElement, "price-level-ref");
                                                                                                                                            if (___________________priceLevelRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                __________________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        _______________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", __________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________salesOrderItemLineDetailBuilder, _______________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                if (!parseObjectRef(_______________salesOrderItemLineDetailChildElement, _______________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                    Element __________________uomRefChildElement = DomUtils.getChildElementByTagName(_______________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                    if (__________________uomRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________uomRefBuilder, __________________uomRefChildElement, "unit", "unit");
                                                                                                                                        _______________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", __________________uomRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesOrderItemLineDetailChildElement, _______________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_______________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                    if (__________________itemAccountRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "type", "type");
                                                                                                                                        _______________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", __________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesOrderItemLineDetailChildElement, _______________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_______________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                    if (__________________inventorySiteRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                        _______________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", __________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________salesOrderItemLineDetailChildElement, _______________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                    if (__________________taxCodeRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "type", "type");
                                                                                                                                        _______________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", __________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________salesOrderItemLineDetailBuilder, _______________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                builder.addPropertyValue("salesOrderItemLineDetail", _______________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                                                            if (_______________itemReceiptLineDetailChildElement!= null) {
                                                                                                                                if (!parseObjectRef(_______________itemReceiptLineDetailChildElement, _______________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                                                                    if (________________itemReceiptLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________itemReceiptLineDetailExChildElement, ________________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", ________________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("itemReceiptLineDetail", _______________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                                                            if (_______________journalEntryLineDetailChildElement!= null) {
                                                                                                                                parseProperty(_______________journalEntryLineDetailBuilder, _______________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                                                                if (!parseObjectRef(_______________journalEntryLineDetailChildElement, _______________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                                                                    BeanDefinitionBuilder ________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                                                                    Element ________________entityChildElement = DomUtils.getChildElementByTagName(_______________journalEntryLineDetailChildElement, "entity");
                                                                                                                                    if (________________entityChildElement!= null) {
                                                                                                                                        parseProperty(________________entityBuilder, ________________entityChildElement, "type", "type");
                                                                                                                                        if (!parseObjectRef(________________entityChildElement, ________________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________entityRefChildElement = DomUtils.getChildElementByTagName(________________entityChildElement, "entity-ref");
                                                                                                                                            if (_________________entityRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________entityRefBuilder, _________________entityRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________entityRefBuilder, _________________entityRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________entityRefBuilder, _________________entityRefChildElement, "type", "type");
                                                                                                                                                ________________entityBuilder.addPropertyValue("entityRef", _________________entityRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        _______________journalEntryLineDetailBuilder.addPropertyValue("entity", ________________entityBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________journalEntryLineDetailChildElement, _______________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________accountRefChildElement = DomUtils.getChildElementByTagName(_______________journalEntryLineDetailChildElement, "account-ref");
                                                                                                                                    if (________________accountRefChildElement!= null) {
                                                                                                                                        parseProperty(________________accountRefBuilder, ________________accountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________accountRefBuilder, ________________accountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________accountRefBuilder, ________________accountRefChildElement, "type", "type");
                                                                                                                                        _______________journalEntryLineDetailBuilder.addPropertyValue("accountRef", ________________accountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________journalEntryLineDetailChildElement, _______________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________classRefChildElement = DomUtils.getChildElementByTagName(_______________journalEntryLineDetailChildElement, "class-ref");
                                                                                                                                    if (________________classRefChildElement!= null) {
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________classRefBuilder, ________________classRefChildElement, "type", "type");
                                                                                                                                        _______________journalEntryLineDetailBuilder.addPropertyValue("classRef", ________________classRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________journalEntryLineDetailChildElement, _______________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________departmentRefChildElement = DomUtils.getChildElementByTagName(_______________journalEntryLineDetailChildElement, "department-ref");
                                                                                                                                    if (________________departmentRefChildElement!= null) {
                                                                                                                                        parseProperty(________________departmentRefBuilder, ________________departmentRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________departmentRefBuilder, ________________departmentRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________departmentRefBuilder, ________________departmentRefChildElement, "type", "type");
                                                                                                                                        _______________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", ________________departmentRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(_______________journalEntryLineDetailChildElement, _______________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_______________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                                                                    if (________________taxCodeRefChildElement!= null) {
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "type", "type");
                                                                                                                                        _______________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", ________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________journalEntryLineDetailBuilder, _______________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                                                                parseProperty(_______________journalEntryLineDetailBuilder, _______________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                parseProperty(_______________journalEntryLineDetailBuilder, _______________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                if (!parseObjectRef(_______________journalEntryLineDetailChildElement, _______________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                                                                    if (________________journalEntryLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________journalEntryLineDetailExChildElement, ________________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", ________________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("journalEntryLineDetail", _______________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                                                            if (_______________groupLineDetailChildElement!= null) {
                                                                                                                                if (!parseObjectRef(_______________groupLineDetailChildElement, _______________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________groupItemRefChildElement = DomUtils.getChildElementByTagName(_______________groupLineDetailChildElement, "group-item-ref");
                                                                                                                                    if (________________groupItemRefChildElement!= null) {
                                                                                                                                        parseProperty(________________groupItemRefBuilder, ________________groupItemRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________groupItemRefBuilder, ________________groupItemRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________groupItemRefBuilder, ________________groupItemRefChildElement, "type", "type");
                                                                                                                                        _______________groupLineDetailBuilder.addPropertyValue("groupItemRef", ________________groupItemRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________groupLineDetailBuilder, _______________groupLineDetailChildElement, "quantity", "quantity");
                                                                                                                                parseProperty(_______________groupLineDetailBuilder, _______________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                parseListAndSetProperty(_______________groupLineDetailChildElement, _______________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                                                                        parseProperty(builder, element, "id", "id");
                                                                                                                                        parseProperty(builder, element, "lineNum", "lineNum");
                                                                                                                                        parseProperty(builder, element, "description", "description");
                                                                                                                                        parseProperty(builder, element, "amount", "amount");
                                                                                                                                        parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                                                                                parseProperty(builder, element, "txnId", "txnId");
                                                                                                                                                parseProperty(builder, element, "txnType", "txnType");
                                                                                                                                                parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                                                                                return builder.getBeanDefinition();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        parseProperty(builder, element, "detailType", "detailType");
                                                                                                                                        if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                                                                            if (_________________paymentLineDetailChildElement!= null) {
                                                                                                                                                if (!parseObjectRef(_________________paymentLineDetailChildElement, _________________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________itemRefChildElement = DomUtils.getChildElementByTagName(_________________paymentLineDetailChildElement, "item-ref");
                                                                                                                                                    if (__________________itemRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "type", "type");
                                                                                                                                                        _________________paymentLineDetailBuilder.addPropertyValue("itemRef", __________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________paymentLineDetailBuilder, _________________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                if (!parseObjectRef(_________________paymentLineDetailChildElement, _________________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________classRefChildElement = DomUtils.getChildElementByTagName(_________________paymentLineDetailChildElement, "class-ref");
                                                                                                                                                    if (__________________classRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "type", "type");
                                                                                                                                                        _________________paymentLineDetailBuilder.addPropertyValue("classRef", __________________classRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________paymentLineDetailBuilder, _________________paymentLineDetailChildElement, "balance", "balance");
                                                                                                                                                if (!parseObjectRef(_________________paymentLineDetailChildElement, _________________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                                                                                    BeanDefinitionBuilder __________________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                                                                                    Element __________________discountChildElement = DomUtils.getChildElementByTagName(_________________paymentLineDetailChildElement, "discount");
                                                                                                                                                    if (__________________discountChildElement!= null) {
                                                                                                                                                        if (!parseObjectRef(__________________discountChildElement, __________________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________discountRefChildElement = DomUtils.getChildElementByTagName(__________________discountChildElement, "discount-ref");
                                                                                                                                                            if (___________________discountRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________discountRefBuilder, ___________________discountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________discountRefBuilder, ___________________discountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________discountRefBuilder, ___________________discountRefChildElement, "type", "type");
                                                                                                                                                                __________________discountBuilder.addPropertyValue("discountRef", ___________________discountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________discountBuilder, __________________discountChildElement, "percentBased", "percentBased");
                                                                                                                                                        parseProperty(__________________discountBuilder, __________________discountChildElement, "discountPercent", "discountPercent");
                                                                                                                                                        if (!parseObjectRef(__________________discountChildElement, __________________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(__________________discountChildElement, "discount-account-ref");
                                                                                                                                                            if (___________________discountAccountRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________discountAccountRefBuilder, ___________________discountAccountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________discountAccountRefBuilder, ___________________discountAccountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________discountAccountRefBuilder, ___________________discountAccountRefChildElement, "type", "type");
                                                                                                                                                                __________________discountBuilder.addPropertyValue("discountAccountRef", ___________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        _________________paymentLineDetailBuilder.addPropertyValue("discount", __________________discountBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________paymentLineDetailChildElement, _________________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________paymentLineExChildElement = DomUtils.getChildElementByTagName(_________________paymentLineDetailChildElement, "payment-line-ex");
                                                                                                                                                    if (__________________paymentLineExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________paymentLineExChildElement, __________________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", __________________paymentLineExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("paymentLineDetail", _________________paymentLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                                                                            if (_________________discountLineDetailChildElement!= null) {
                                                                                                                                                parseProperty(_________________discountLineDetailBuilder, _________________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                if (!parseObjectRef(_________________discountLineDetailChildElement, _________________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________discountRefChildElement = DomUtils.getChildElementByTagName(_________________discountLineDetailChildElement, "discount-ref");
                                                                                                                                                    if (___________________discountRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________discountRefBuilder, ___________________discountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________discountRefBuilder, ___________________discountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________discountRefBuilder, ___________________discountRefChildElement, "type", "type");
                                                                                                                                                        _________________discountLineDetailBuilder.addPropertyValue("discountRef", ___________________discountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________discountLineDetailBuilder, _________________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                                parseProperty(_________________discountLineDetailBuilder, _________________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                                                                                if (!parseObjectRef(_________________discountLineDetailChildElement, _________________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_________________discountLineDetailChildElement, "discount-account-ref");
                                                                                                                                                    if (___________________discountAccountRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________discountAccountRefBuilder, ___________________discountAccountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________discountAccountRefBuilder, ___________________discountAccountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________discountAccountRefBuilder, ___________________discountAccountRefChildElement, "type", "type");
                                                                                                                                                        _________________discountLineDetailBuilder.addPropertyValue("discountAccountRef", ___________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________discountLineDetailBuilder, _________________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                if (!parseObjectRef(_________________discountLineDetailChildElement, _________________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________classRefChildElement = DomUtils.getChildElementByTagName(_________________discountLineDetailChildElement, "class-ref");
                                                                                                                                                    if (__________________classRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "type", "type");
                                                                                                                                                        _________________discountLineDetailBuilder.addPropertyValue("classRef", __________________classRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________discountLineDetailChildElement, _________________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________________discountLineDetailChildElement, "tax-code-ref");
                                                                                                                                                    if (__________________taxCodeRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                        _________________discountLineDetailBuilder.addPropertyValue("taxCodeRef", __________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________discountLineDetailChildElement, _________________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                                                                                    if (__________________discountLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________discountLineDetailExChildElement, __________________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", __________________discountLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("discountLineDetail", _________________discountLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                                                                            if (_________________taxLineDetailChildElement!= null) {
                                                                                                                                                if (!parseObjectRef(_________________taxLineDetailChildElement, _________________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________taxRateRefChildElement = DomUtils.getChildElementByTagName(_________________taxLineDetailChildElement, "tax-rate-ref");
                                                                                                                                                    if (__________________taxRateRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________taxRateRefBuilder, __________________taxRateRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________taxRateRefBuilder, __________________taxRateRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________taxRateRefBuilder, __________________taxRateRefChildElement, "type", "type");
                                                                                                                                                        _________________taxLineDetailBuilder.addPropertyValue("taxRateRef", __________________taxRateRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________taxLineDetailBuilder, _________________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                                parseProperty(_________________taxLineDetailBuilder, _________________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                                                                                parseProperty(_________________taxLineDetailBuilder, _________________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                                                                                parseProperty(_________________taxLineDetailBuilder, _________________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                                                                                parseProperty(_________________taxLineDetailBuilder, _________________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                                                                                parseProperty(_________________taxLineDetailBuilder, _________________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                if (!parseObjectRef(_________________taxLineDetailChildElement, _________________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                                                                                    if (__________________taxLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________taxLineDetailExChildElement, __________________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", __________________taxLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("taxLineDetail", _________________taxLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                                                                            if (_________________salesItemLineDetailChildElement!= null) {
                                                                                                                                                parseProperty(_________________salesItemLineDetailBuilder, _________________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                if (!parseObjectRef(_________________salesItemLineDetailChildElement, _________________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________itemRefChildElement = DomUtils.getChildElementByTagName(_________________salesItemLineDetailChildElement, "item-ref");
                                                                                                                                                    if (___________________itemRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "type", "type");
                                                                                                                                                        _________________salesItemLineDetailBuilder.addPropertyValue("itemRef", ___________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesItemLineDetailChildElement, _________________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________classRefChildElement = DomUtils.getChildElementByTagName(_________________salesItemLineDetailChildElement, "class-ref");
                                                                                                                                                    if (___________________classRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "type", "type");
                                                                                                                                                        _________________salesItemLineDetailBuilder.addPropertyValue("classRef", ___________________classRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________salesItemLineDetailBuilder, _________________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                parseProperty(_________________salesItemLineDetailBuilder, _________________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                if (!parseObjectRef(_________________salesItemLineDetailChildElement, _________________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________________salesItemLineDetailChildElement, "price-level-ref");
                                                                                                                                                    if (___________________priceLevelRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                        _________________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", ___________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesItemLineDetailChildElement, _________________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________markupInfoChildElement = DomUtils.getChildElementByTagName(_________________salesItemLineDetailChildElement, "markup-info");
                                                                                                                                                    if (___________________markupInfoChildElement!= null) {
                                                                                                                                                        parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                        parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                        if (!parseObjectRef(___________________markupInfoChildElement, ___________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                            if (____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                ___________________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        _________________salesItemLineDetailBuilder.addPropertyValue("markupInfo", ___________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________salesItemLineDetailBuilder, _________________salesItemLineDetailChildElement, "qty", "qty");
                                                                                                                                                if (!parseObjectRef(_________________salesItemLineDetailChildElement, _________________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________uomRefChildElement = DomUtils.getChildElementByTagName(_________________salesItemLineDetailChildElement, "uom-ref");
                                                                                                                                                    if (___________________uomRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________uomRefBuilder, ___________________uomRefChildElement, "unit", "unit");
                                                                                                                                                        _________________salesItemLineDetailBuilder.addPropertyValue("uomRef", ___________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesItemLineDetailChildElement, _________________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_________________salesItemLineDetailChildElement, "item-account-ref");
                                                                                                                                                    if (___________________itemAccountRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                        _________________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", ___________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesItemLineDetailChildElement, _________________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_________________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                    if (___________________inventorySiteRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                        _________________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ___________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesItemLineDetailChildElement, _________________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                                    if (___________________taxCodeRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                        _________________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", ___________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________salesItemLineDetailBuilder, _________________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                parseProperty(_________________salesItemLineDetailBuilder, _________________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                if (!parseObjectRef(_________________salesItemLineDetailChildElement, _________________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                                    if (__________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________salesItemLineDetailExChildElement, __________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", __________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("salesItemLineDetail", _________________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                                                                            if (_________________descriptionLineDetailChildElement!= null) {
                                                                                                                                                parseProperty(_________________descriptionLineDetailBuilder, _________________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                if (!parseObjectRef(_________________descriptionLineDetailChildElement, _________________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                                                                                    if (__________________taxCodeRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                        _________________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", __________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________descriptionLineDetailChildElement, _________________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                                                                                    if (__________________descriptionLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________descriptionLineDetailExChildElement, __________________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", __________________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("descriptionLineDetail", _________________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                                                                            if (_________________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                                parseProperty(_________________itemBasedExpenseLineDetailBuilder, _________________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________itemRefChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                                                                                    if (___________________itemRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "type", "type");
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", ___________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________classRefChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                                    if (___________________classRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "type", "type");
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ___________________classRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________itemBasedExpenseLineDetailBuilder, _________________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                parseProperty(_________________itemBasedExpenseLineDetailBuilder, _________________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                                                                                    if (___________________priceLevelRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", ___________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________markupInfoChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                                    if (___________________markupInfoChildElement!= null) {
                                                                                                                                                        parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                        parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                        if (!parseObjectRef(___________________markupInfoChildElement, ___________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                            if (____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                ___________________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ___________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________itemBasedExpenseLineDetailBuilder, _________________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________uomRefChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                                                                                    if (___________________uomRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________uomRefBuilder, ___________________uomRefChildElement, "unit", "unit");
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", ___________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                                                                                    if (___________________itemAccountRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", ___________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                    if (___________________inventorySiteRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", ___________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                                    if (___________________taxCodeRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ___________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________customerRefChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                                    if (__________________customerRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________customerRefBuilder, __________________customerRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________customerRefBuilder, __________________customerRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________customerRefBuilder, __________________customerRefChildElement, "type", "type");
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", __________________customerRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________itemBasedExpenseLineDetailBuilder, _________________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                                parseProperty(_________________itemBasedExpenseLineDetailBuilder, _________________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                if (!parseObjectRef(_________________itemBasedExpenseLineDetailChildElement, _________________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                                                                                    if (__________________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________itemBasedExpenseLineDetailExChildElement, __________________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", __________________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("itemBasedExpenseLineDetail", _________________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                                                                            if (_________________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                                if (!parseObjectRef(_________________accountBasedExpenseLineDetailChildElement, _________________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________customerRefChildElement = DomUtils.getChildElementByTagName(_________________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                                    if (__________________customerRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________customerRefBuilder, __________________customerRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________customerRefBuilder, __________________customerRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________customerRefBuilder, __________________customerRefChildElement, "type", "type");
                                                                                                                                                        _________________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", __________________customerRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________accountBasedExpenseLineDetailChildElement, _________________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________classRefChildElement = DomUtils.getChildElementByTagName(_________________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                                    if (__________________classRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "type", "type");
                                                                                                                                                        _________________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", __________________classRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________accountBasedExpenseLineDetailChildElement, _________________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________accountRefChildElement = DomUtils.getChildElementByTagName(_________________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                                                                                    if (__________________accountRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________accountRefBuilder, __________________accountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________accountRefBuilder, __________________accountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________accountRefBuilder, __________________accountRefChildElement, "type", "type");
                                                                                                                                                        _________________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", __________________accountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________accountBasedExpenseLineDetailBuilder, _________________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                                if (!parseObjectRef(_________________accountBasedExpenseLineDetailChildElement, _________________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                    BeanDefinitionBuilder __________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                    Element __________________markupInfoChildElement = DomUtils.getChildElementByTagName(_________________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                                    if (__________________markupInfoChildElement!= null) {
                                                                                                                                                        parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                        parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                        if (!parseObjectRef(__________________markupInfoChildElement, __________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                            if (___________________priceLevelRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                __________________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        _________________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", __________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________accountBasedExpenseLineDetailBuilder, _________________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                                if (!parseObjectRef(_________________accountBasedExpenseLineDetailChildElement, _________________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                                    if (__________________taxCodeRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                        _________________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", __________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________accountBasedExpenseLineDetailBuilder, _________________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                if (!parseObjectRef(_________________accountBasedExpenseLineDetailChildElement, _________________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                                                                                    if (__________________expenseDetailLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________expenseDetailLineDetailExChildElement, __________________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", __________________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("accountBasedExpenseLineDetail", _________________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                                                                            if (_________________depositLineDetailChildElement!= null) {
                                                                                                                                                if (!parseObjectRef(_________________depositLineDetailChildElement, _________________depositLineDetailBuilder, "entity", "entity")) {
                                                                                                                                                    BeanDefinitionBuilder __________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________entityChildElement = DomUtils.getChildElementByTagName(_________________depositLineDetailChildElement, "entity");
                                                                                                                                                    if (__________________entityChildElement!= null) {
                                                                                                                                                        parseProperty(__________________entityBuilder, __________________entityChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________entityBuilder, __________________entityChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________entityBuilder, __________________entityChildElement, "type", "type");
                                                                                                                                                        _________________depositLineDetailBuilder.addPropertyValue("entity", __________________entityBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________depositLineDetailChildElement, _________________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________classRefChildElement = DomUtils.getChildElementByTagName(_________________depositLineDetailChildElement, "class-ref");
                                                                                                                                                    if (__________________classRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "type", "type");
                                                                                                                                                        _________________depositLineDetailBuilder.addPropertyValue("classRef", __________________classRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________depositLineDetailChildElement, _________________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________accountRefChildElement = DomUtils.getChildElementByTagName(_________________depositLineDetailChildElement, "account-ref");
                                                                                                                                                    if (__________________accountRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________accountRefBuilder, __________________accountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________accountRefBuilder, __________________accountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________accountRefBuilder, __________________accountRefChildElement, "type", "type");
                                                                                                                                                        _________________depositLineDetailBuilder.addPropertyValue("accountRef", __________________accountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________depositLineDetailChildElement, _________________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(_________________depositLineDetailChildElement, "payment-method-ref");
                                                                                                                                                    if (__________________paymentMethodRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________paymentMethodRefBuilder, __________________paymentMethodRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________paymentMethodRefBuilder, __________________paymentMethodRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________paymentMethodRefBuilder, __________________paymentMethodRefChildElement, "type", "type");
                                                                                                                                                        _________________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", __________________paymentMethodRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________depositLineDetailBuilder, _________________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                                                                                parseProperty(_________________depositLineDetailBuilder, _________________depositLineDetailChildElement, "txnType", "txnType");
                                                                                                                                                if (!parseObjectRef(_________________depositLineDetailChildElement, _________________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                                                                                    if (__________________depositLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________depositLineDetailExChildElement, __________________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", __________________depositLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("depositLineDetail", _________________depositLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                                                                            if (_________________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                                    if (___________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(___________________salesItemLineDetailExChildElement, ___________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ___________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________itemRefChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                                    if (____________________itemRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "type", "type");
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", ____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________classRefChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                                    if (____________________classRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "type", "type");
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", ____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                                    if (____________________priceLevelRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________markupInfoChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                                    if (____________________markupInfoChildElement!= null) {
                                                                                                                                                        parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                        parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                        if (!parseObjectRef(____________________markupInfoChildElement, ____________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                            if (_____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                ____________________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ____________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________uomRefChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                                    if (____________________uomRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________uomRefBuilder, ____________________uomRefChildElement, "unit", "unit");
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", ____________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                                    if (____________________itemAccountRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ____________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                    if (____________________inventorySiteRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ____________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                                    if (____________________taxCodeRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                                parseProperty(_________________purchaseOrderItemLineDetailBuilder, _________________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                                                                                if (!parseObjectRef(_________________purchaseOrderItemLineDetailChildElement, _________________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                                                                                    if (__________________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________purchaseOrderItemLineDetailExChildElement, __________________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", __________________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("purchaseOrderItemLineDetail", _________________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                                                                            if (_________________salesOrderItemLineDetailChildElement!= null) {
                                                                                                                                                parseProperty(_________________salesOrderItemLineDetailBuilder, _________________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                parseProperty(_________________salesOrderItemLineDetailBuilder, _________________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                parseProperty(_________________salesOrderItemLineDetailBuilder, _________________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                if (!parseObjectRef(_________________salesOrderItemLineDetailChildElement, _________________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                                    if (___________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(___________________salesItemLineDetailExChildElement, ___________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ___________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________salesOrderItemLineDetailBuilder, _________________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                if (!parseObjectRef(_________________salesOrderItemLineDetailChildElement, _________________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________itemRefChildElement = DomUtils.getChildElementByTagName(_________________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                                    if (____________________itemRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "type", "type");
                                                                                                                                                        _________________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", ____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesOrderItemLineDetailChildElement, _________________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________classRefChildElement = DomUtils.getChildElementByTagName(_________________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                                    if (____________________classRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "type", "type");
                                                                                                                                                        _________________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", ____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________salesOrderItemLineDetailBuilder, _________________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                parseProperty(_________________salesOrderItemLineDetailBuilder, _________________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                if (!parseObjectRef(_________________salesOrderItemLineDetailChildElement, _________________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                                    if (____________________priceLevelRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                        _________________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesOrderItemLineDetailChildElement, _________________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________markupInfoChildElement = DomUtils.getChildElementByTagName(_________________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                                    if (____________________markupInfoChildElement!= null) {
                                                                                                                                                        parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                        parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                        if (!parseObjectRef(____________________markupInfoChildElement, ____________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                            if (_____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                ____________________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        _________________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ____________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________salesOrderItemLineDetailBuilder, _________________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                                if (!parseObjectRef(_________________salesOrderItemLineDetailChildElement, _________________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________uomRefChildElement = DomUtils.getChildElementByTagName(_________________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                                    if (____________________uomRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________uomRefBuilder, ____________________uomRefChildElement, "unit", "unit");
                                                                                                                                                        _________________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", ____________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesOrderItemLineDetailChildElement, _________________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(_________________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                                    if (____________________itemAccountRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                        _________________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ____________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesOrderItemLineDetailChildElement, _________________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(_________________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                    if (____________________inventorySiteRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                        _________________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ____________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________salesOrderItemLineDetailChildElement, _________________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                                    if (____________________taxCodeRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                        _________________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________salesOrderItemLineDetailBuilder, _________________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                                builder.addPropertyValue("salesOrderItemLineDetail", _________________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                                                                            if (_________________itemReceiptLineDetailChildElement!= null) {
                                                                                                                                                if (!parseObjectRef(_________________itemReceiptLineDetailChildElement, _________________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                                                                                    if (__________________itemReceiptLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________itemReceiptLineDetailExChildElement, __________________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", __________________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("itemReceiptLineDetail", _________________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                                                                            if (_________________journalEntryLineDetailChildElement!= null) {
                                                                                                                                                parseProperty(_________________journalEntryLineDetailBuilder, _________________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                                                                                if (!parseObjectRef(_________________journalEntryLineDetailChildElement, _________________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                                                                                    BeanDefinitionBuilder __________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                                                                                    Element __________________entityChildElement = DomUtils.getChildElementByTagName(_________________journalEntryLineDetailChildElement, "entity");
                                                                                                                                                    if (__________________entityChildElement!= null) {
                                                                                                                                                        parseProperty(__________________entityBuilder, __________________entityChildElement, "type", "type");
                                                                                                                                                        if (!parseObjectRef(__________________entityChildElement, __________________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________entityRefChildElement = DomUtils.getChildElementByTagName(__________________entityChildElement, "entity-ref");
                                                                                                                                                            if (___________________entityRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________entityRefBuilder, ___________________entityRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________entityRefBuilder, ___________________entityRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________entityRefBuilder, ___________________entityRefChildElement, "type", "type");
                                                                                                                                                                __________________entityBuilder.addPropertyValue("entityRef", ___________________entityRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        _________________journalEntryLineDetailBuilder.addPropertyValue("entity", __________________entityBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________journalEntryLineDetailChildElement, _________________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________accountRefChildElement = DomUtils.getChildElementByTagName(_________________journalEntryLineDetailChildElement, "account-ref");
                                                                                                                                                    if (__________________accountRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________accountRefBuilder, __________________accountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________accountRefBuilder, __________________accountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________accountRefBuilder, __________________accountRefChildElement, "type", "type");
                                                                                                                                                        _________________journalEntryLineDetailBuilder.addPropertyValue("accountRef", __________________accountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________journalEntryLineDetailChildElement, _________________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________classRefChildElement = DomUtils.getChildElementByTagName(_________________journalEntryLineDetailChildElement, "class-ref");
                                                                                                                                                    if (__________________classRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________classRefBuilder, __________________classRefChildElement, "type", "type");
                                                                                                                                                        _________________journalEntryLineDetailBuilder.addPropertyValue("classRef", __________________classRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________journalEntryLineDetailChildElement, _________________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________departmentRefChildElement = DomUtils.getChildElementByTagName(_________________journalEntryLineDetailChildElement, "department-ref");
                                                                                                                                                    if (__________________departmentRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________departmentRefBuilder, __________________departmentRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________departmentRefBuilder, __________________departmentRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________departmentRefBuilder, __________________departmentRefChildElement, "type", "type");
                                                                                                                                                        _________________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", __________________departmentRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(_________________journalEntryLineDetailChildElement, _________________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(_________________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                                                                                    if (__________________taxCodeRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                        _________________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", __________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________journalEntryLineDetailBuilder, _________________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                                                                                parseProperty(_________________journalEntryLineDetailBuilder, _________________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                                parseProperty(_________________journalEntryLineDetailBuilder, _________________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                                if (!parseObjectRef(_________________journalEntryLineDetailChildElement, _________________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                                                                                    if (__________________journalEntryLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________journalEntryLineDetailExChildElement, __________________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", __________________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("journalEntryLineDetail", _________________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                                                                            if (_________________groupLineDetailChildElement!= null) {
                                                                                                                                                if (!parseObjectRef(_________________groupLineDetailChildElement, _________________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________groupItemRefChildElement = DomUtils.getChildElementByTagName(_________________groupLineDetailChildElement, "group-item-ref");
                                                                                                                                                    if (__________________groupItemRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________groupItemRefBuilder, __________________groupItemRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________groupItemRefBuilder, __________________groupItemRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________groupItemRefBuilder, __________________groupItemRefChildElement, "type", "type");
                                                                                                                                                        _________________groupLineDetailBuilder.addPropertyValue("groupItemRef", __________________groupItemRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________groupLineDetailBuilder, _________________groupLineDetailChildElement, "quantity", "quantity");
                                                                                                                                                parseProperty(_________________groupLineDetailBuilder, _________________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                parseListAndSetProperty(_________________groupLineDetailChildElement, _________________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                                                                                        parseProperty(builder, element, "id", "id");
                                                                                                                                                        parseProperty(builder, element, "lineNum", "lineNum");
                                                                                                                                                        parseProperty(builder, element, "description", "description");
                                                                                                                                                        parseProperty(builder, element, "amount", "amount");
                                                                                                                                                        parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                                                                throw new RuntimeException("Cannot parse this many nested elements");
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        parseProperty(builder, element, "detailType", "detailType");
                                                                                                                                                        if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                                                                                            if (___________________paymentLineDetailChildElement!= null) {
                                                                                                                                                                if (!parseObjectRef(___________________paymentLineDetailChildElement, ___________________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________itemRefChildElement = DomUtils.getChildElementByTagName(___________________paymentLineDetailChildElement, "item-ref");
                                                                                                                                                                    if (____________________itemRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "type", "type");
                                                                                                                                                                        ___________________paymentLineDetailBuilder.addPropertyValue("itemRef", ____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________paymentLineDetailBuilder, ___________________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                                if (!parseObjectRef(___________________paymentLineDetailChildElement, ___________________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________classRefChildElement = DomUtils.getChildElementByTagName(___________________paymentLineDetailChildElement, "class-ref");
                                                                                                                                                                    if (____________________classRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "type", "type");
                                                                                                                                                                        ___________________paymentLineDetailBuilder.addPropertyValue("classRef", ____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________paymentLineDetailBuilder, ___________________paymentLineDetailChildElement, "balance", "balance");
                                                                                                                                                                if (!parseObjectRef(___________________paymentLineDetailChildElement, ___________________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________discountChildElement = DomUtils.getChildElementByTagName(___________________paymentLineDetailChildElement, "discount");
                                                                                                                                                                    if (____________________discountChildElement!= null) {
                                                                                                                                                                        if (!parseObjectRef(____________________discountChildElement, ____________________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                                                                                            BeanDefinitionBuilder _____________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                            Element _____________________discountRefChildElement = DomUtils.getChildElementByTagName(____________________discountChildElement, "discount-ref");
                                                                                                                                                                            if (_____________________discountRefChildElement!= null) {
                                                                                                                                                                                parseProperty(_____________________discountRefBuilder, _____________________discountRefChildElement, "value", "value");
                                                                                                                                                                                parseProperty(_____________________discountRefBuilder, _____________________discountRefChildElement, "name", "name");
                                                                                                                                                                                parseProperty(_____________________discountRefBuilder, _____________________discountRefChildElement, "type", "type");
                                                                                                                                                                                ____________________discountBuilder.addPropertyValue("discountRef", _____________________discountRefBuilder.getBeanDefinition());
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        parseProperty(____________________discountBuilder, ____________________discountChildElement, "percentBased", "percentBased");
                                                                                                                                                                        parseProperty(____________________discountBuilder, ____________________discountChildElement, "discountPercent", "discountPercent");
                                                                                                                                                                        if (!parseObjectRef(____________________discountChildElement, ____________________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                                                            BeanDefinitionBuilder _____________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                            Element _____________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(____________________discountChildElement, "discount-account-ref");
                                                                                                                                                                            if (_____________________discountAccountRefChildElement!= null) {
                                                                                                                                                                                parseProperty(_____________________discountAccountRefBuilder, _____________________discountAccountRefChildElement, "value", "value");
                                                                                                                                                                                parseProperty(_____________________discountAccountRefBuilder, _____________________discountAccountRefChildElement, "name", "name");
                                                                                                                                                                                parseProperty(_____________________discountAccountRefBuilder, _____________________discountAccountRefChildElement, "type", "type");
                                                                                                                                                                                ____________________discountBuilder.addPropertyValue("discountAccountRef", _____________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        ___________________paymentLineDetailBuilder.addPropertyValue("discount", ____________________discountBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________paymentLineDetailChildElement, ___________________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________paymentLineExChildElement = DomUtils.getChildElementByTagName(___________________paymentLineDetailChildElement, "payment-line-ex");
                                                                                                                                                                    if (____________________paymentLineExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________paymentLineExChildElement, ____________________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", ____________________paymentLineExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("paymentLineDetail", ___________________paymentLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                                                                                            if (___________________discountLineDetailChildElement!= null) {
                                                                                                                                                                parseProperty(___________________discountLineDetailBuilder, ___________________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                                if (!parseObjectRef(___________________discountLineDetailChildElement, ___________________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________discountRefChildElement = DomUtils.getChildElementByTagName(___________________discountLineDetailChildElement, "discount-ref");
                                                                                                                                                                    if (_____________________discountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________discountRefBuilder, _____________________discountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________discountRefBuilder, _____________________discountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________discountRefBuilder, _____________________discountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________discountLineDetailBuilder.addPropertyValue("discountRef", _____________________discountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________discountLineDetailBuilder, ___________________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                                                parseProperty(___________________discountLineDetailBuilder, ___________________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                                                                                                if (!parseObjectRef(___________________discountLineDetailChildElement, ___________________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(___________________discountLineDetailChildElement, "discount-account-ref");
                                                                                                                                                                    if (_____________________discountAccountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________discountAccountRefBuilder, _____________________discountAccountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________discountAccountRefBuilder, _____________________discountAccountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________discountAccountRefBuilder, _____________________discountAccountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________discountLineDetailBuilder.addPropertyValue("discountAccountRef", _____________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________discountLineDetailBuilder, ___________________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                                if (!parseObjectRef(___________________discountLineDetailChildElement, ___________________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________classRefChildElement = DomUtils.getChildElementByTagName(___________________discountLineDetailChildElement, "class-ref");
                                                                                                                                                                    if (____________________classRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "type", "type");
                                                                                                                                                                        ___________________discountLineDetailBuilder.addPropertyValue("classRef", ____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________discountLineDetailChildElement, ___________________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________________discountLineDetailChildElement, "tax-code-ref");
                                                                                                                                                                    if (____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                        ___________________discountLineDetailBuilder.addPropertyValue("taxCodeRef", ____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________discountLineDetailChildElement, ___________________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                                                                                                    if (____________________discountLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________discountLineDetailExChildElement, ____________________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", ____________________discountLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("discountLineDetail", ___________________discountLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                                                                                            if (___________________taxLineDetailChildElement!= null) {
                                                                                                                                                                if (!parseObjectRef(___________________taxLineDetailChildElement, ___________________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________taxRateRefChildElement = DomUtils.getChildElementByTagName(___________________taxLineDetailChildElement, "tax-rate-ref");
                                                                                                                                                                    if (____________________taxRateRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________taxRateRefBuilder, ____________________taxRateRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________taxRateRefBuilder, ____________________taxRateRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________taxRateRefBuilder, ____________________taxRateRefChildElement, "type", "type");
                                                                                                                                                                        ___________________taxLineDetailBuilder.addPropertyValue("taxRateRef", ____________________taxRateRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________taxLineDetailBuilder, ___________________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                                                parseProperty(___________________taxLineDetailBuilder, ___________________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                                                                                                parseProperty(___________________taxLineDetailBuilder, ___________________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                                                                                                parseProperty(___________________taxLineDetailBuilder, ___________________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                                                                                                parseProperty(___________________taxLineDetailBuilder, ___________________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                                                                                                parseProperty(___________________taxLineDetailBuilder, ___________________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                                if (!parseObjectRef(___________________taxLineDetailChildElement, ___________________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                                                                                                    if (____________________taxLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________taxLineDetailExChildElement, ____________________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", ____________________taxLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("taxLineDetail", ___________________taxLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                                                                                            if (___________________salesItemLineDetailChildElement!= null) {
                                                                                                                                                                parseProperty(___________________salesItemLineDetailBuilder, ___________________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                                if (!parseObjectRef(___________________salesItemLineDetailChildElement, ___________________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________itemRefChildElement = DomUtils.getChildElementByTagName(___________________salesItemLineDetailChildElement, "item-ref");
                                                                                                                                                                    if (_____________________itemRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesItemLineDetailBuilder.addPropertyValue("itemRef", _____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesItemLineDetailChildElement, ___________________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________classRefChildElement = DomUtils.getChildElementByTagName(___________________salesItemLineDetailChildElement, "class-ref");
                                                                                                                                                                    if (_____________________classRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesItemLineDetailBuilder.addPropertyValue("classRef", _____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________salesItemLineDetailBuilder, ___________________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                                parseProperty(___________________salesItemLineDetailBuilder, ___________________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                                if (!parseObjectRef(___________________salesItemLineDetailChildElement, ___________________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________________salesItemLineDetailChildElement, "price-level-ref");
                                                                                                                                                                    if (_____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", _____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesItemLineDetailChildElement, ___________________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________markupInfoChildElement = DomUtils.getChildElementByTagName(___________________salesItemLineDetailChildElement, "markup-info");
                                                                                                                                                                    if (_____________________markupInfoChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                        parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                        if (!parseObjectRef(_____________________markupInfoChildElement, _____________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                            BeanDefinitionBuilder ______________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                            Element ______________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                            if (______________________priceLevelRefChildElement!= null) {
                                                                                                                                                                                parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                                parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                                parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                                _____________________markupInfoBuilder.addPropertyValue("priceLevelRef", ______________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        ___________________salesItemLineDetailBuilder.addPropertyValue("markupInfo", _____________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________salesItemLineDetailBuilder, ___________________salesItemLineDetailChildElement, "qty", "qty");
                                                                                                                                                                if (!parseObjectRef(___________________salesItemLineDetailChildElement, ___________________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________uomRefChildElement = DomUtils.getChildElementByTagName(___________________salesItemLineDetailChildElement, "uom-ref");
                                                                                                                                                                    if (_____________________uomRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________uomRefBuilder, _____________________uomRefChildElement, "unit", "unit");
                                                                                                                                                                        ___________________salesItemLineDetailBuilder.addPropertyValue("uomRef", _____________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesItemLineDetailChildElement, ___________________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(___________________salesItemLineDetailChildElement, "item-account-ref");
                                                                                                                                                                    if (_____________________itemAccountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", _____________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesItemLineDetailChildElement, ___________________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___________________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                                    if (_____________________inventorySiteRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _____________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesItemLineDetailChildElement, ___________________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                                                    if (_____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", _____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________salesItemLineDetailBuilder, ___________________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                                parseProperty(___________________salesItemLineDetailBuilder, ___________________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                                if (!parseObjectRef(___________________salesItemLineDetailChildElement, ___________________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                                                    if (____________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________salesItemLineDetailExChildElement, ____________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ____________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("salesItemLineDetail", ___________________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                                                                                            if (___________________descriptionLineDetailChildElement!= null) {
                                                                                                                                                                parseProperty(___________________descriptionLineDetailBuilder, ___________________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                                if (!parseObjectRef(___________________descriptionLineDetailChildElement, ___________________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                                                                                                    if (____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                        ___________________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", ____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________descriptionLineDetailChildElement, ___________________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                                                                                                    if (____________________descriptionLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________descriptionLineDetailExChildElement, ____________________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", ____________________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("descriptionLineDetail", ___________________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                                                                                            if (___________________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                                                parseProperty(___________________itemBasedExpenseLineDetailBuilder, ___________________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________itemRefChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                                                                                                    if (_____________________itemRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "type", "type");
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", _____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________classRefChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                                                    if (_____________________classRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "type", "type");
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________itemBasedExpenseLineDetailBuilder, ___________________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                                parseProperty(___________________itemBasedExpenseLineDetailBuilder, ___________________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                                                                                                    if (_____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", _____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________markupInfoChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                                                    if (_____________________markupInfoChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                        parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                        if (!parseObjectRef(_____________________markupInfoChildElement, _____________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                            BeanDefinitionBuilder ______________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                            Element ______________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                            if (______________________priceLevelRefChildElement!= null) {
                                                                                                                                                                                parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                                parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                                parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                                _____________________markupInfoBuilder.addPropertyValue("priceLevelRef", ______________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _____________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________itemBasedExpenseLineDetailBuilder, ___________________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________uomRefChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                                                                                                    if (_____________________uomRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________uomRefBuilder, _____________________uomRefChildElement, "unit", "unit");
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", _____________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                                                                                                    if (_____________________itemAccountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", _____________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                                    if (_____________________inventorySiteRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", _____________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                                                    if (_____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________customerRefChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                                                    if (____________________customerRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________customerRefBuilder, ____________________customerRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________customerRefBuilder, ____________________customerRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________customerRefBuilder, ____________________customerRefChildElement, "type", "type");
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ____________________customerRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________itemBasedExpenseLineDetailBuilder, ___________________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                                                parseProperty(___________________itemBasedExpenseLineDetailBuilder, ___________________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                                if (!parseObjectRef(___________________itemBasedExpenseLineDetailChildElement, ___________________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                                                                                                    if (____________________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________itemBasedExpenseLineDetailExChildElement, ____________________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", ____________________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("itemBasedExpenseLineDetail", ___________________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                                                                                            if (___________________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                                                if (!parseObjectRef(___________________accountBasedExpenseLineDetailChildElement, ___________________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________customerRefChildElement = DomUtils.getChildElementByTagName(___________________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                                                    if (____________________customerRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________customerRefBuilder, ____________________customerRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________customerRefBuilder, ____________________customerRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________customerRefBuilder, ____________________customerRefChildElement, "type", "type");
                                                                                                                                                                        ___________________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ____________________customerRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________accountBasedExpenseLineDetailChildElement, ___________________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________classRefChildElement = DomUtils.getChildElementByTagName(___________________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                                                    if (____________________classRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "type", "type");
                                                                                                                                                                        ___________________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________accountBasedExpenseLineDetailChildElement, ___________________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________accountRefChildElement = DomUtils.getChildElementByTagName(___________________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                                                                                                    if (____________________accountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________accountRefBuilder, ____________________accountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________accountRefBuilder, ____________________accountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________accountRefBuilder, ____________________accountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", ____________________accountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________accountBasedExpenseLineDetailBuilder, ___________________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                                                if (!parseObjectRef(___________________accountBasedExpenseLineDetailChildElement, ___________________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________markupInfoChildElement = DomUtils.getChildElementByTagName(___________________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                                                    if (____________________markupInfoChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                        parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                        if (!parseObjectRef(____________________markupInfoChildElement, ____________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                            BeanDefinitionBuilder _____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                            Element _____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                            if (_____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                                ____________________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        ___________________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ____________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________accountBasedExpenseLineDetailBuilder, ___________________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                                                if (!parseObjectRef(___________________accountBasedExpenseLineDetailChildElement, ___________________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                                                    if (____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                        ___________________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________accountBasedExpenseLineDetailBuilder, ___________________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                                if (!parseObjectRef(___________________accountBasedExpenseLineDetailChildElement, ___________________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                                                                                                    if (____________________expenseDetailLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________expenseDetailLineDetailExChildElement, ____________________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", ____________________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("accountBasedExpenseLineDetail", ___________________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                                                                                            if (___________________depositLineDetailChildElement!= null) {
                                                                                                                                                                if (!parseObjectRef(___________________depositLineDetailChildElement, ___________________depositLineDetailBuilder, "entity", "entity")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________entityChildElement = DomUtils.getChildElementByTagName(___________________depositLineDetailChildElement, "entity");
                                                                                                                                                                    if (____________________entityChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________entityBuilder, ____________________entityChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________entityBuilder, ____________________entityChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________entityBuilder, ____________________entityChildElement, "type", "type");
                                                                                                                                                                        ___________________depositLineDetailBuilder.addPropertyValue("entity", ____________________entityBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________depositLineDetailChildElement, ___________________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________classRefChildElement = DomUtils.getChildElementByTagName(___________________depositLineDetailChildElement, "class-ref");
                                                                                                                                                                    if (____________________classRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "type", "type");
                                                                                                                                                                        ___________________depositLineDetailBuilder.addPropertyValue("classRef", ____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________depositLineDetailChildElement, ___________________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________accountRefChildElement = DomUtils.getChildElementByTagName(___________________depositLineDetailChildElement, "account-ref");
                                                                                                                                                                    if (____________________accountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________accountRefBuilder, ____________________accountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________accountRefBuilder, ____________________accountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________accountRefBuilder, ____________________accountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________depositLineDetailBuilder.addPropertyValue("accountRef", ____________________accountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________depositLineDetailChildElement, ___________________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(___________________depositLineDetailChildElement, "payment-method-ref");
                                                                                                                                                                    if (____________________paymentMethodRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________paymentMethodRefBuilder, ____________________paymentMethodRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________paymentMethodRefBuilder, ____________________paymentMethodRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________paymentMethodRefBuilder, ____________________paymentMethodRefChildElement, "type", "type");
                                                                                                                                                                        ___________________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", ____________________paymentMethodRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________depositLineDetailBuilder, ___________________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                                                                                                parseProperty(___________________depositLineDetailBuilder, ___________________depositLineDetailChildElement, "txnType", "txnType");
                                                                                                                                                                if (!parseObjectRef(___________________depositLineDetailChildElement, ___________________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                                                                                                    if (____________________depositLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________depositLineDetailExChildElement, ____________________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", ____________________depositLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("depositLineDetail", ___________________depositLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                                                                                            if (___________________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                                                    if (_____________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(_____________________salesItemLineDetailExChildElement, _____________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _____________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________itemRefChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                                                    if (______________________itemRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________itemRefBuilder, ______________________itemRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________itemRefBuilder, ______________________itemRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________itemRefBuilder, ______________________itemRefChildElement, "type", "type");
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", ______________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________classRefChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                                                    if (______________________classRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________classRefBuilder, ______________________classRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________classRefBuilder, ______________________classRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________classRefBuilder, ______________________classRefChildElement, "type", "type");
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", ______________________classRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                                                    if (______________________priceLevelRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ______________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________markupInfoChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                                                    if (______________________markupInfoChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________markupInfoBuilder, ______________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                        parseProperty(______________________markupInfoBuilder, ______________________markupInfoChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________markupInfoBuilder, ______________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                        if (!parseObjectRef(______________________markupInfoChildElement, ______________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                            BeanDefinitionBuilder _______________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                            Element _______________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                            if (_______________________priceLevelRefChildElement!= null) {
                                                                                                                                                                                parseProperty(_______________________priceLevelRefBuilder, _______________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                                parseProperty(_______________________priceLevelRefBuilder, _______________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                                parseProperty(_______________________priceLevelRefBuilder, _______________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                                ______________________markupInfoBuilder.addPropertyValue("priceLevelRef", _______________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ______________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________uomRefChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                                                    if (______________________uomRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________uomRefBuilder, ______________________uomRefChildElement, "unit", "unit");
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", ______________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                                                    if (______________________itemAccountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________itemAccountRefBuilder, ______________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________itemAccountRefBuilder, ______________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________itemAccountRefBuilder, ______________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ______________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                                    if (______________________inventorySiteRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________inventorySiteRefBuilder, ______________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________inventorySiteRefBuilder, ______________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________inventorySiteRefBuilder, ______________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ______________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                                                    if (______________________taxCodeRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________taxCodeRefBuilder, ______________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________taxCodeRefBuilder, ______________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________taxCodeRefBuilder, ______________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ______________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                                                parseProperty(___________________purchaseOrderItemLineDetailBuilder, ___________________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                                                                                                if (!parseObjectRef(___________________purchaseOrderItemLineDetailChildElement, ___________________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                                                                                                    if (____________________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________purchaseOrderItemLineDetailExChildElement, ____________________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", ____________________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("purchaseOrderItemLineDetail", ___________________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                                                                                            if (___________________salesOrderItemLineDetailChildElement!= null) {
                                                                                                                                                                parseProperty(___________________salesOrderItemLineDetailBuilder, ___________________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                                parseProperty(___________________salesOrderItemLineDetailBuilder, ___________________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                                parseProperty(___________________salesOrderItemLineDetailBuilder, ___________________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                                if (!parseObjectRef(___________________salesOrderItemLineDetailChildElement, ___________________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                                                    if (_____________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(_____________________salesItemLineDetailExChildElement, _____________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _____________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________salesOrderItemLineDetailBuilder, ___________________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                                if (!parseObjectRef(___________________salesOrderItemLineDetailChildElement, ___________________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________itemRefChildElement = DomUtils.getChildElementByTagName(___________________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                                                    if (______________________itemRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________itemRefBuilder, ______________________itemRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________itemRefBuilder, ______________________itemRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________itemRefBuilder, ______________________itemRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", ______________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesOrderItemLineDetailChildElement, ___________________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________classRefChildElement = DomUtils.getChildElementByTagName(___________________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                                                    if (______________________classRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________classRefBuilder, ______________________classRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________classRefBuilder, ______________________classRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________classRefBuilder, ______________________classRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", ______________________classRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________salesOrderItemLineDetailBuilder, ___________________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                                parseProperty(___________________salesOrderItemLineDetailBuilder, ___________________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                                if (!parseObjectRef(___________________salesOrderItemLineDetailChildElement, ___________________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                                                    if (______________________priceLevelRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ______________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesOrderItemLineDetailChildElement, ___________________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________markupInfoChildElement = DomUtils.getChildElementByTagName(___________________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                                                    if (______________________markupInfoChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________markupInfoBuilder, ______________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                        parseProperty(______________________markupInfoBuilder, ______________________markupInfoChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________markupInfoBuilder, ______________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                        if (!parseObjectRef(______________________markupInfoChildElement, ______________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                            BeanDefinitionBuilder _______________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                            Element _______________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                            if (_______________________priceLevelRefChildElement!= null) {
                                                                                                                                                                                parseProperty(_______________________priceLevelRefBuilder, _______________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                                parseProperty(_______________________priceLevelRefBuilder, _______________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                                parseProperty(_______________________priceLevelRefBuilder, _______________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                                ______________________markupInfoBuilder.addPropertyValue("priceLevelRef", _______________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        ___________________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ______________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________salesOrderItemLineDetailBuilder, ___________________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                                                if (!parseObjectRef(___________________salesOrderItemLineDetailChildElement, ___________________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________uomRefChildElement = DomUtils.getChildElementByTagName(___________________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                                                    if (______________________uomRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________uomRefBuilder, ______________________uomRefChildElement, "unit", "unit");
                                                                                                                                                                        ___________________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", ______________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesOrderItemLineDetailChildElement, ___________________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(___________________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                                                    if (______________________itemAccountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________itemAccountRefBuilder, ______________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________itemAccountRefBuilder, ______________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________itemAccountRefBuilder, ______________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ______________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesOrderItemLineDetailChildElement, ___________________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(___________________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                                    if (______________________inventorySiteRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________inventorySiteRefBuilder, ______________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________inventorySiteRefBuilder, ______________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________inventorySiteRefBuilder, ______________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ______________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________salesOrderItemLineDetailChildElement, ___________________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                                                    if (______________________taxCodeRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________taxCodeRefBuilder, ______________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________taxCodeRefBuilder, ______________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________taxCodeRefBuilder, ______________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                        ___________________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ______________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________salesOrderItemLineDetailBuilder, ___________________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                                                builder.addPropertyValue("salesOrderItemLineDetail", ___________________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                                                                                            if (___________________itemReceiptLineDetailChildElement!= null) {
                                                                                                                                                                if (!parseObjectRef(___________________itemReceiptLineDetailChildElement, ___________________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                                                                                                    if (____________________itemReceiptLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________itemReceiptLineDetailExChildElement, ____________________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", ____________________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("itemReceiptLineDetail", ___________________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                                                                                            if (___________________journalEntryLineDetailChildElement!= null) {
                                                                                                                                                                parseProperty(___________________journalEntryLineDetailBuilder, ___________________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                                                                                                if (!parseObjectRef(___________________journalEntryLineDetailChildElement, ___________________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________entityChildElement = DomUtils.getChildElementByTagName(___________________journalEntryLineDetailChildElement, "entity");
                                                                                                                                                                    if (____________________entityChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________entityBuilder, ____________________entityChildElement, "type", "type");
                                                                                                                                                                        if (!parseObjectRef(____________________entityChildElement, ____________________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                                                                                            BeanDefinitionBuilder _____________________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                            Element _____________________entityRefChildElement = DomUtils.getChildElementByTagName(____________________entityChildElement, "entity-ref");
                                                                                                                                                                            if (_____________________entityRefChildElement!= null) {
                                                                                                                                                                                parseProperty(_____________________entityRefBuilder, _____________________entityRefChildElement, "value", "value");
                                                                                                                                                                                parseProperty(_____________________entityRefBuilder, _____________________entityRefChildElement, "name", "name");
                                                                                                                                                                                parseProperty(_____________________entityRefBuilder, _____________________entityRefChildElement, "type", "type");
                                                                                                                                                                                ____________________entityBuilder.addPropertyValue("entityRef", _____________________entityRefBuilder.getBeanDefinition());
                                                                                                                                                                            }
                                                                                                                                                                        }
                                                                                                                                                                        ___________________journalEntryLineDetailBuilder.addPropertyValue("entity", ____________________entityBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________journalEntryLineDetailChildElement, ___________________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________accountRefChildElement = DomUtils.getChildElementByTagName(___________________journalEntryLineDetailChildElement, "account-ref");
                                                                                                                                                                    if (____________________accountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________accountRefBuilder, ____________________accountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________accountRefBuilder, ____________________accountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________accountRefBuilder, ____________________accountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________journalEntryLineDetailBuilder.addPropertyValue("accountRef", ____________________accountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________journalEntryLineDetailChildElement, ___________________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________classRefChildElement = DomUtils.getChildElementByTagName(___________________journalEntryLineDetailChildElement, "class-ref");
                                                                                                                                                                    if (____________________classRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "type", "type");
                                                                                                                                                                        ___________________journalEntryLineDetailBuilder.addPropertyValue("classRef", ____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________journalEntryLineDetailChildElement, ___________________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________departmentRefChildElement = DomUtils.getChildElementByTagName(___________________journalEntryLineDetailChildElement, "department-ref");
                                                                                                                                                                    if (____________________departmentRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________departmentRefBuilder, ____________________departmentRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________departmentRefBuilder, ____________________departmentRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________departmentRefBuilder, ____________________departmentRefChildElement, "type", "type");
                                                                                                                                                                        ___________________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", ____________________departmentRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                if (!parseObjectRef(___________________journalEntryLineDetailChildElement, ___________________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(___________________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                                                                                                    if (____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                        ___________________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", ____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________journalEntryLineDetailBuilder, ___________________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                                                                                                parseProperty(___________________journalEntryLineDetailBuilder, ___________________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                                                parseProperty(___________________journalEntryLineDetailBuilder, ___________________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                                                if (!parseObjectRef(___________________journalEntryLineDetailChildElement, ___________________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                                                                                                    if (____________________journalEntryLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________journalEntryLineDetailExChildElement, ____________________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", ____________________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("journalEntryLineDetail", ___________________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                                                                                            if (___________________groupLineDetailChildElement!= null) {
                                                                                                                                                                if (!parseObjectRef(___________________groupLineDetailChildElement, ___________________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________groupItemRefChildElement = DomUtils.getChildElementByTagName(___________________groupLineDetailChildElement, "group-item-ref");
                                                                                                                                                                    if (____________________groupItemRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________groupItemRefBuilder, ____________________groupItemRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________groupItemRefBuilder, ____________________groupItemRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________groupItemRefBuilder, ____________________groupItemRefChildElement, "type", "type");
                                                                                                                                                                        ___________________groupLineDetailBuilder.addPropertyValue("groupItemRef", ____________________groupItemRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________groupLineDetailBuilder, ___________________groupLineDetailChildElement, "quantity", "quantity");
                                                                                                                                                                parseProperty(___________________groupLineDetailBuilder, ___________________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                                parseListAndSetProperty(___________________groupLineDetailChildElement, ___________________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                                                                        throw new RuntimeException("Cannot parse this many nested elements");
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                if (!parseObjectRef(___________________groupLineDetailChildElement, ___________________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(___________________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                                                                                                    if (____________________groupLineDetailExChildElement!= null) {
                                                                                                                                                                        parseListAndSetProperty(____________________groupLineDetailExChildElement, ____________________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                                return element.getTextContent();
                                                                                                                                                                            }

                                                                                                                                                                        }
                                                                                                                                                                        );
                                                                                                                                                                        ___________________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", ____________________groupLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                builder.addPropertyValue("groupLineDetail", ___________________groupLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                                                                                            if (___________________subTotalLineDetailChildElement!= null) {
                                                                                                                                                                if (!parseObjectRef(___________________subTotalLineDetailChildElement, ___________________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________itemRefChildElement = DomUtils.getChildElementByTagName(___________________subTotalLineDetailChildElement, "item-ref");
                                                                                                                                                                    if (____________________itemRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "type", "type");
                                                                                                                                                                        ___________________subTotalLineDetailBuilder.addPropertyValue("itemRef", ____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________subTotalLineDetailBuilder, ___________________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                                builder.addPropertyValue("subTotalLineDetail", ___________________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                                                                throw new RuntimeException("Cannot parse this many nested elements");
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                                                                                            if (___________________lineExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________lineExChildElement, ___________________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                builder.addPropertyValue("lineEx", ___________________lineExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        return builder.getBeanDefinition();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                if (!parseObjectRef(_________________groupLineDetailChildElement, _________________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(_________________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                                                                                    if (__________________groupLineDetailExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________groupLineDetailExChildElement, __________________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        _________________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", __________________groupLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                builder.addPropertyValue("groupLineDetail", _________________groupLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                                                                            BeanDefinitionBuilder _________________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                                                                            Element _________________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                                                                            if (_________________subTotalLineDetailChildElement!= null) {
                                                                                                                                                if (!parseObjectRef(_________________subTotalLineDetailChildElement, _________________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________itemRefChildElement = DomUtils.getChildElementByTagName(_________________subTotalLineDetailChildElement, "item-ref");
                                                                                                                                                    if (__________________itemRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "type", "type");
                                                                                                                                                        _________________subTotalLineDetailBuilder.addPropertyValue("itemRef", __________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________subTotalLineDetailBuilder, _________________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                builder.addPropertyValue("subTotalLineDetail", _________________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                                                                                parseProperty(builder, element, "definitionId", "definitionId");
                                                                                                                                                parseProperty(builder, element, "name", "name");
                                                                                                                                                parseProperty(builder, element, "type", "type");
                                                                                                                                                parseProperty(builder, element, "stringValue", "stringValue");
                                                                                                                                                parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                                                                                parseProperty(builder, element, "dateValue", "dateValue");
                                                                                                                                                parseProperty(builder, element, "numberValue", "numberValue");
                                                                                                                                                return builder.getBeanDefinition();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                                                                            if (_________________lineExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________lineExChildElement, _________________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                builder.addPropertyValue("lineEx", _________________lineExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        return builder.getBeanDefinition();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                if (!parseObjectRef(_______________groupLineDetailChildElement, _______________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(_______________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                                                                    if (________________groupLineDetailExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________groupLineDetailExChildElement, ________________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        _______________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", ________________groupLineDetailExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                builder.addPropertyValue("groupLineDetail", _______________groupLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                                                            BeanDefinitionBuilder _______________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                                                            Element _______________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                                                            if (_______________subTotalLineDetailChildElement!= null) {
                                                                                                                                if (!parseObjectRef(_______________subTotalLineDetailChildElement, _______________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________itemRefChildElement = DomUtils.getChildElementByTagName(_______________subTotalLineDetailChildElement, "item-ref");
                                                                                                                                    if (________________itemRefChildElement!= null) {
                                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "type", "type");
                                                                                                                                        _______________subTotalLineDetailBuilder.addPropertyValue("itemRef", ________________itemRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________subTotalLineDetailBuilder, _______________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                builder.addPropertyValue("subTotalLineDetail", _______________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                                                                parseProperty(builder, element, "definitionId", "definitionId");
                                                                                                                                parseProperty(builder, element, "name", "name");
                                                                                                                                parseProperty(builder, element, "type", "type");
                                                                                                                                parseProperty(builder, element, "stringValue", "stringValue");
                                                                                                                                parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                                                                parseProperty(builder, element, "dateValue", "dateValue");
                                                                                                                                parseProperty(builder, element, "numberValue", "numberValue");
                                                                                                                                return builder.getBeanDefinition();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                                                            BeanDefinitionBuilder _______________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                                                            if (_______________lineExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________lineExChildElement, _______________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                builder.addPropertyValue("lineEx", _______________lineExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        return builder.getBeanDefinition();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                if (!parseObjectRef(_____________groupLineDetailChildElement, _____________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                                                    BeanDefinitionBuilder ______________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(_____________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                                                    if (______________groupLineDetailExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________groupLineDetailExChildElement, ______________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        _____________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", ______________groupLineDetailExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                builder.addPropertyValue("groupLineDetail", _____________groupLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                                            BeanDefinitionBuilder _____________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                                            Element _____________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                                            if (_____________subTotalLineDetailChildElement!= null) {
                                                                                                                if (!parseObjectRef(_____________subTotalLineDetailChildElement, _____________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                    BeanDefinitionBuilder ______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________itemRefChildElement = DomUtils.getChildElementByTagName(_____________subTotalLineDetailChildElement, "item-ref");
                                                                                                                    if (______________itemRefChildElement!= null) {
                                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "type", "type");
                                                                                                                        _____________subTotalLineDetailBuilder.addPropertyValue("itemRef", ______________itemRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________subTotalLineDetailBuilder, _____________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                builder.addPropertyValue("subTotalLineDetail", _____________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                                                parseProperty(builder, element, "definitionId", "definitionId");
                                                                                                                parseProperty(builder, element, "name", "name");
                                                                                                                parseProperty(builder, element, "type", "type");
                                                                                                                parseProperty(builder, element, "stringValue", "stringValue");
                                                                                                                parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                                                parseProperty(builder, element, "dateValue", "dateValue");
                                                                                                                parseProperty(builder, element, "numberValue", "numberValue");
                                                                                                                return builder.getBeanDefinition();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                                            BeanDefinitionBuilder _____________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                                            if (_____________lineExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________lineExChildElement, _____________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                builder.addPropertyValue("lineEx", _____________lineExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        return builder.getBeanDefinition();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                if (!parseObjectRef(___________groupLineDetailChildElement, ___________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                                    BeanDefinitionBuilder ____________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(___________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                                    if (____________groupLineDetailExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________groupLineDetailExChildElement, ____________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        ___________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", ____________groupLineDetailExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                builder.addPropertyValue("groupLineDetail", ___________groupLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                            BeanDefinitionBuilder ___________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                            Element ___________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                            if (___________subTotalLineDetailChildElement!= null) {
                                                                                                if (!parseObjectRef(___________subTotalLineDetailChildElement, ___________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                    BeanDefinitionBuilder ____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________itemRefChildElement = DomUtils.getChildElementByTagName(___________subTotalLineDetailChildElement, "item-ref");
                                                                                                    if (____________itemRefChildElement!= null) {
                                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "value", "value");
                                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "name", "name");
                                                                                                        parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "type", "type");
                                                                                                        ___________subTotalLineDetailBuilder.addPropertyValue("itemRef", ____________itemRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________subTotalLineDetailBuilder, ___________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                builder.addPropertyValue("subTotalLineDetail", ___________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                            public BeanDefinition parse(Element element) {
                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                                parseProperty(builder, element, "definitionId", "definitionId");
                                                                                                parseProperty(builder, element, "name", "name");
                                                                                                parseProperty(builder, element, "type", "type");
                                                                                                parseProperty(builder, element, "stringValue", "stringValue");
                                                                                                parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                                parseProperty(builder, element, "dateValue", "dateValue");
                                                                                                parseProperty(builder, element, "numberValue", "numberValue");
                                                                                                return builder.getBeanDefinition();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                            BeanDefinitionBuilder ___________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                            if (___________lineExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________lineExChildElement, ___________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                builder.addPropertyValue("lineEx", ___________lineExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        return builder.getBeanDefinition();
                                                                                    }

                                                                                }
                                                                                );
                                                                                if (!parseObjectRef(_________groupLineDetailChildElement, _________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                    BeanDefinitionBuilder __________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(_________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                    if (__________groupLineDetailExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________groupLineDetailExChildElement, __________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        _________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", __________groupLineDetailExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                builder.addPropertyValue("groupLineDetail", _________groupLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                            BeanDefinitionBuilder _________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                            Element _________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                            if (_________subTotalLineDetailChildElement!= null) {
                                                                                if (!parseObjectRef(_________subTotalLineDetailChildElement, _________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                    BeanDefinitionBuilder __________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________itemRefChildElement = DomUtils.getChildElementByTagName(_________subTotalLineDetailChildElement, "item-ref");
                                                                                    if (__________itemRefChildElement!= null) {
                                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "value", "value");
                                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "name", "name");
                                                                                        parseProperty(__________itemRefBuilder, __________itemRefChildElement, "type", "type");
                                                                                        _________subTotalLineDetailBuilder.addPropertyValue("itemRef", __________itemRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________subTotalLineDetailBuilder, _________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                builder.addPropertyValue("subTotalLineDetail", _________subTotalLineDetailBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                            public BeanDefinition parse(Element element) {
                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                parseProperty(builder, element, "definitionId", "definitionId");
                                                                                parseProperty(builder, element, "name", "name");
                                                                                parseProperty(builder, element, "type", "type");
                                                                                parseProperty(builder, element, "stringValue", "stringValue");
                                                                                parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                parseProperty(builder, element, "dateValue", "dateValue");
                                                                                parseProperty(builder, element, "numberValue", "numberValue");
                                                                                return builder.getBeanDefinition();
                                                                            }

                                                                        }
                                                                        );
                                                                        if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                            BeanDefinitionBuilder _________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                            if (_________lineExChildElement!= null) {
                                                                                parseListAndSetProperty(_________lineExChildElement, _________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                builder.addPropertyValue("lineEx", _________lineExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        return builder.getBeanDefinition();
                                                                    }

                                                                }
                                                                );
                                                                if (!parseObjectRef(_______groupLineDetailChildElement, _______groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                    BeanDefinitionBuilder ________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(_______groupLineDetailChildElement, "group-line-detail-ex");
                                                                    if (________groupLineDetailExChildElement!= null) {
                                                                        parseListAndSetProperty(________groupLineDetailExChildElement, ________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        _______groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", ________groupLineDetailExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                builder.addPropertyValue("groupLineDetail", _______groupLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                            BeanDefinitionBuilder _______subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                            Element _______subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                            if (_______subTotalLineDetailChildElement!= null) {
                                                                if (!parseObjectRef(_______subTotalLineDetailChildElement, _______subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                    BeanDefinitionBuilder ________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________itemRefChildElement = DomUtils.getChildElementByTagName(_______subTotalLineDetailChildElement, "item-ref");
                                                                    if (________itemRefChildElement!= null) {
                                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "value", "value");
                                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "name", "name");
                                                                        parseProperty(________itemRefBuilder, ________itemRefChildElement, "type", "type");
                                                                        _______subTotalLineDetailBuilder.addPropertyValue("itemRef", ________itemRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______subTotalLineDetailBuilder, _______subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                builder.addPropertyValue("subTotalLineDetail", _______subTotalLineDetailBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                            public BeanDefinition parse(Element element) {
                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                parseProperty(builder, element, "definitionId", "definitionId");
                                                                parseProperty(builder, element, "name", "name");
                                                                parseProperty(builder, element, "type", "type");
                                                                parseProperty(builder, element, "stringValue", "stringValue");
                                                                parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                parseProperty(builder, element, "dateValue", "dateValue");
                                                                parseProperty(builder, element, "numberValue", "numberValue");
                                                                return builder.getBeanDefinition();
                                                            }

                                                        }
                                                        );
                                                        if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                            BeanDefinitionBuilder _______lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                            if (_______lineExChildElement!= null) {
                                                                parseListAndSetProperty(_______lineExChildElement, _______lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                builder.addPropertyValue("lineEx", _______lineExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        return builder.getBeanDefinition();
                                                    }

                                                }
                                                );
                                                if (!parseObjectRef(_____groupLineDetailChildElement, _____groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                    BeanDefinitionBuilder ______groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______groupLineDetailExChildElement = DomUtils.getChildElementByTagName(_____groupLineDetailChildElement, "group-line-detail-ex");
                                                    if (______groupLineDetailExChildElement!= null) {
                                                        parseListAndSetProperty(______groupLineDetailExChildElement, ______groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        _____groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", ______groupLineDetailExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                builder.addPropertyValue("groupLineDetail", _____groupLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                            BeanDefinitionBuilder _____subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                            Element _____subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                            if (_____subTotalLineDetailChildElement!= null) {
                                                if (!parseObjectRef(_____subTotalLineDetailChildElement, _____subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                    BeanDefinitionBuilder ______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______itemRefChildElement = DomUtils.getChildElementByTagName(_____subTotalLineDetailChildElement, "item-ref");
                                                    if (______itemRefChildElement!= null) {
                                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "value", "value");
                                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "name", "name");
                                                        parseProperty(______itemRefBuilder, ______itemRefChildElement, "type", "type");
                                                        _____subTotalLineDetailBuilder.addPropertyValue("itemRef", ______itemRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____subTotalLineDetailBuilder, _____subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                builder.addPropertyValue("subTotalLineDetail", _____subTotalLineDetailBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                            public BeanDefinition parse(Element element) {
                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                parseProperty(builder, element, "definitionId", "definitionId");
                                                parseProperty(builder, element, "name", "name");
                                                parseProperty(builder, element, "type", "type");
                                                parseProperty(builder, element, "stringValue", "stringValue");
                                                parseProperty(builder, element, "booleanValue", "booleanValue");
                                                parseProperty(builder, element, "dateValue", "dateValue");
                                                parseProperty(builder, element, "numberValue", "numberValue");
                                                return builder.getBeanDefinition();
                                            }

                                        }
                                        );
                                        if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                            BeanDefinitionBuilder _____lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                            if (_____lineExChildElement!= null) {
                                                parseListAndSetProperty(_____lineExChildElement, _____lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                builder.addPropertyValue("lineEx", _____lineExBuilder.getBeanDefinition());
                                            }
                                        }
                                        return builder.getBeanDefinition();
                                    }

                                }
                                );
                                if (!parseObjectRef(___groupLineDetailChildElement, ___groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                    BeanDefinitionBuilder ____groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____groupLineDetailExChildElement = DomUtils.getChildElementByTagName(___groupLineDetailChildElement, "group-line-detail-ex");
                                    if (____groupLineDetailExChildElement!= null) {
                                        parseListAndSetProperty(____groupLineDetailExChildElement, ____groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        ___groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", ____groupLineDetailExBuilder.getBeanDefinition());
                                    }
                                }
                                builder.addPropertyValue("groupLineDetail", ___groupLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                            BeanDefinitionBuilder ___subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                            Element ___subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                            if (___subTotalLineDetailChildElement!= null) {
                                if (!parseObjectRef(___subTotalLineDetailChildElement, ___subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                    BeanDefinitionBuilder ____itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                    Element ____itemRefChildElement = DomUtils.getChildElementByTagName(___subTotalLineDetailChildElement, "item-ref");
                                    if (____itemRefChildElement!= null) {
                                        parseProperty(____itemRefBuilder, ____itemRefChildElement, "value", "value");
                                        parseProperty(____itemRefBuilder, ____itemRefChildElement, "name", "name");
                                        parseProperty(____itemRefBuilder, ____itemRefChildElement, "type", "type");
                                        ___subTotalLineDetailBuilder.addPropertyValue("itemRef", ____itemRefBuilder.getBeanDefinition());
                                    }
                                }
                                parseProperty(___subTotalLineDetailBuilder, ___subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                builder.addPropertyValue("subTotalLineDetail", ___subTotalLineDetailBuilder.getBeanDefinition());
                            }
                        }
                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                            public BeanDefinition parse(Element element) {
                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                parseProperty(builder, element, "definitionId", "definitionId");
                                parseProperty(builder, element, "name", "name");
                                parseProperty(builder, element, "type", "type");
                                parseProperty(builder, element, "stringValue", "stringValue");
                                parseProperty(builder, element, "booleanValue", "booleanValue");
                                parseProperty(builder, element, "dateValue", "dateValue");
                                parseProperty(builder, element, "numberValue", "numberValue");
                                return builder.getBeanDefinition();
                            }

                        }
                        );
                        if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                            BeanDefinitionBuilder ___lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                            Element ___lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                            if (___lineExChildElement!= null) {
                                parseListAndSetProperty(___lineExChildElement, ___lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                    public String parse(Element element) {
                                        return element.getTextContent();
                                    }

                                }
                                );
                                builder.addPropertyValue("lineEx", ___lineExBuilder.getBeanDefinition());
                            }
                        }
                        return builder.getBeanDefinition();
                    }

                }
                );
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "txn-tax-detail", "txnTaxDetail")) {
                    BeanDefinitionBuilder __txnTaxDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TxnTaxDetailExpressionHolder.class.getName());
                    Element __txnTaxDetailChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "txn-tax-detail");
                    if (__txnTaxDetailChildElement!= null) {
                        if (!parseObjectRef(__txnTaxDetailChildElement, __txnTaxDetailBuilder, "default-tax-code-ref", "defaultTaxCodeRef")) {
                            BeanDefinitionBuilder ___defaultTaxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                            Element ___defaultTaxCodeRefChildElement = DomUtils.getChildElementByTagName(__txnTaxDetailChildElement, "default-tax-code-ref");
                            if (___defaultTaxCodeRefChildElement!= null) {
                                parseProperty(___defaultTaxCodeRefBuilder, ___defaultTaxCodeRefChildElement, "value", "value");
                                parseProperty(___defaultTaxCodeRefBuilder, ___defaultTaxCodeRefChildElement, "name", "name");
                                parseProperty(___defaultTaxCodeRefBuilder, ___defaultTaxCodeRefChildElement, "type", "type");
                                __txnTaxDetailBuilder.addPropertyValue("defaultTaxCodeRef", ___defaultTaxCodeRefBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(__txnTaxDetailChildElement, __txnTaxDetailBuilder, "txn-tax-code-ref", "txnTaxCodeRef")) {
                            BeanDefinitionBuilder ___txnTaxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                            Element ___txnTaxCodeRefChildElement = DomUtils.getChildElementByTagName(__txnTaxDetailChildElement, "txn-tax-code-ref");
                            if (___txnTaxCodeRefChildElement!= null) {
                                parseProperty(___txnTaxCodeRefBuilder, ___txnTaxCodeRefChildElement, "value", "value");
                                parseProperty(___txnTaxCodeRefBuilder, ___txnTaxCodeRefChildElement, "name", "name");
                                parseProperty(___txnTaxCodeRefBuilder, ___txnTaxCodeRefChildElement, "type", "type");
                                __txnTaxDetailBuilder.addPropertyValue("txnTaxCodeRef", ___txnTaxCodeRefBuilder.getBeanDefinition());
                            }
                        }
                        parseProperty(__txnTaxDetailBuilder, __txnTaxDetailChildElement, "totalTax", "totalTax");
                        parseListAndSetProperty(__txnTaxDetailChildElement, __txnTaxDetailBuilder, "taxLine", "tax-line", "tax-line", new ParseDelegate<BeanDefinition>() {


                            public BeanDefinition parse(Element element) {
                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                parseProperty(builder, element, "id", "id");
                                parseProperty(builder, element, "lineNum", "lineNum");
                                parseProperty(builder, element, "description", "description");
                                parseProperty(builder, element, "amount", "amount");
                                parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                    public BeanDefinition parse(Element element) {
                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                        parseProperty(builder, element, "txnId", "txnId");
                                        parseProperty(builder, element, "txnType", "txnType");
                                        parseProperty(builder, element, "txnLineId", "txnLineId");
                                        return builder.getBeanDefinition();
                                    }

                                }
                                );
                                parseProperty(builder, element, "detailType", "detailType");
                                if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                    BeanDefinitionBuilder ____paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                    Element ____paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                    if (____paymentLineDetailChildElement!= null) {
                                        if (!parseObjectRef(____paymentLineDetailChildElement, ____paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                            BeanDefinitionBuilder _____itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____itemRefChildElement = DomUtils.getChildElementByTagName(____paymentLineDetailChildElement, "item-ref");
                                            if (_____itemRefChildElement!= null) {
                                                parseProperty(_____itemRefBuilder, _____itemRefChildElement, "value", "value");
                                                parseProperty(_____itemRefBuilder, _____itemRefChildElement, "name", "name");
                                                parseProperty(_____itemRefBuilder, _____itemRefChildElement, "type", "type");
                                                ____paymentLineDetailBuilder.addPropertyValue("itemRef", _____itemRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____paymentLineDetailBuilder, ____paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                        if (!parseObjectRef(____paymentLineDetailChildElement, ____paymentLineDetailBuilder, "class-ref", "classRef")) {
                                            BeanDefinitionBuilder _____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____classRefChildElement = DomUtils.getChildElementByTagName(____paymentLineDetailChildElement, "class-ref");
                                            if (_____classRefChildElement!= null) {
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "value", "value");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "name", "name");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "type", "type");
                                                ____paymentLineDetailBuilder.addPropertyValue("classRef", _____classRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____paymentLineDetailBuilder, ____paymentLineDetailChildElement, "balance", "balance");
                                        if (!parseObjectRef(____paymentLineDetailChildElement, ____paymentLineDetailBuilder, "discount", "discount")) {
                                            BeanDefinitionBuilder _____discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                            Element _____discountChildElement = DomUtils.getChildElementByTagName(____paymentLineDetailChildElement, "discount");
                                            if (_____discountChildElement!= null) {
                                                if (!parseObjectRef(_____discountChildElement, _____discountBuilder, "discount-ref", "discountRef")) {
                                                    BeanDefinitionBuilder ______discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______discountRefChildElement = DomUtils.getChildElementByTagName(_____discountChildElement, "discount-ref");
                                                    if (______discountRefChildElement!= null) {
                                                        parseProperty(______discountRefBuilder, ______discountRefChildElement, "value", "value");
                                                        parseProperty(______discountRefBuilder, ______discountRefChildElement, "name", "name");
                                                        parseProperty(______discountRefBuilder, ______discountRefChildElement, "type", "type");
                                                        _____discountBuilder.addPropertyValue("discountRef", ______discountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseProperty(_____discountBuilder, _____discountChildElement, "percentBased", "percentBased");
                                                parseProperty(_____discountBuilder, _____discountChildElement, "discountPercent", "discountPercent");
                                                if (!parseObjectRef(_____discountChildElement, _____discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                    BeanDefinitionBuilder ______discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______discountAccountRefChildElement = DomUtils.getChildElementByTagName(_____discountChildElement, "discount-account-ref");
                                                    if (______discountAccountRefChildElement!= null) {
                                                        parseProperty(______discountAccountRefBuilder, ______discountAccountRefChildElement, "value", "value");
                                                        parseProperty(______discountAccountRefBuilder, ______discountAccountRefChildElement, "name", "name");
                                                        parseProperty(______discountAccountRefBuilder, ______discountAccountRefChildElement, "type", "type");
                                                        _____discountBuilder.addPropertyValue("discountAccountRef", ______discountAccountRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                ____paymentLineDetailBuilder.addPropertyValue("discount", _____discountBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____paymentLineDetailChildElement, ____paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                            BeanDefinitionBuilder _____paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____paymentLineExChildElement = DomUtils.getChildElementByTagName(____paymentLineDetailChildElement, "payment-line-ex");
                                            if (_____paymentLineExChildElement!= null) {
                                                parseListAndSetProperty(_____paymentLineExChildElement, _____paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____paymentLineDetailBuilder.addPropertyValue("paymentLineEx", _____paymentLineExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("paymentLineDetail", ____paymentLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                    BeanDefinitionBuilder ____discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                    Element ____discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                    if (____discountLineDetailChildElement!= null) {
                                        parseProperty(____discountLineDetailBuilder, ____discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                        if (!parseObjectRef(____discountLineDetailChildElement, ____discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                            BeanDefinitionBuilder ______discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______discountRefChildElement = DomUtils.getChildElementByTagName(____discountLineDetailChildElement, "discount-ref");
                                            if (______discountRefChildElement!= null) {
                                                parseProperty(______discountRefBuilder, ______discountRefChildElement, "value", "value");
                                                parseProperty(______discountRefBuilder, ______discountRefChildElement, "name", "name");
                                                parseProperty(______discountRefBuilder, ______discountRefChildElement, "type", "type");
                                                ____discountLineDetailBuilder.addPropertyValue("discountRef", ______discountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____discountLineDetailBuilder, ____discountLineDetailChildElement, "percentBased", "percentBased");
                                        parseProperty(____discountLineDetailBuilder, ____discountLineDetailChildElement, "discountPercent", "discountPercent");
                                        if (!parseObjectRef(____discountLineDetailChildElement, ____discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                            BeanDefinitionBuilder ______discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______discountAccountRefChildElement = DomUtils.getChildElementByTagName(____discountLineDetailChildElement, "discount-account-ref");
                                            if (______discountAccountRefChildElement!= null) {
                                                parseProperty(______discountAccountRefBuilder, ______discountAccountRefChildElement, "value", "value");
                                                parseProperty(______discountAccountRefBuilder, ______discountAccountRefChildElement, "name", "name");
                                                parseProperty(______discountAccountRefBuilder, ______discountAccountRefChildElement, "type", "type");
                                                ____discountLineDetailBuilder.addPropertyValue("discountAccountRef", ______discountAccountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____discountLineDetailBuilder, ____discountLineDetailChildElement, "serviceDate", "serviceDate");
                                        if (!parseObjectRef(____discountLineDetailChildElement, ____discountLineDetailBuilder, "class-ref", "classRef")) {
                                            BeanDefinitionBuilder _____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____classRefChildElement = DomUtils.getChildElementByTagName(____discountLineDetailChildElement, "class-ref");
                                            if (_____classRefChildElement!= null) {
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "value", "value");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "name", "name");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "type", "type");
                                                ____discountLineDetailBuilder.addPropertyValue("classRef", _____classRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____discountLineDetailChildElement, ____discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                            BeanDefinitionBuilder _____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____taxCodeRefChildElement = DomUtils.getChildElementByTagName(____discountLineDetailChildElement, "tax-code-ref");
                                            if (_____taxCodeRefChildElement!= null) {
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "value", "value");
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "name", "name");
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "type", "type");
                                                ____discountLineDetailBuilder.addPropertyValue("taxCodeRef", _____taxCodeRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____discountLineDetailChildElement, ____discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                            BeanDefinitionBuilder _____discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____discountLineDetailExChildElement = DomUtils.getChildElementByTagName(____discountLineDetailChildElement, "discount-line-detail-ex");
                                            if (_____discountLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____discountLineDetailExChildElement, _____discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", _____discountLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("discountLineDetail", ____discountLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                    BeanDefinitionBuilder ____taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                    Element ____taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                    if (____taxLineDetailChildElement!= null) {
                                        if (!parseObjectRef(____taxLineDetailChildElement, ____taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                            BeanDefinitionBuilder _____taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____taxRateRefChildElement = DomUtils.getChildElementByTagName(____taxLineDetailChildElement, "tax-rate-ref");
                                            if (_____taxRateRefChildElement!= null) {
                                                parseProperty(_____taxRateRefBuilder, _____taxRateRefChildElement, "value", "value");
                                                parseProperty(_____taxRateRefBuilder, _____taxRateRefChildElement, "name", "name");
                                                parseProperty(_____taxRateRefBuilder, _____taxRateRefChildElement, "type", "type");
                                                ____taxLineDetailBuilder.addPropertyValue("taxRateRef", _____taxRateRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____taxLineDetailBuilder, ____taxLineDetailChildElement, "percentBased", "percentBased");
                                        parseProperty(____taxLineDetailBuilder, ____taxLineDetailChildElement, "taxPercent", "taxPercent");
                                        parseProperty(____taxLineDetailBuilder, ____taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                        parseProperty(____taxLineDetailBuilder, ____taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                        parseProperty(____taxLineDetailBuilder, ____taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                        parseProperty(____taxLineDetailBuilder, ____taxLineDetailChildElement, "serviceDate", "serviceDate");
                                        if (!parseObjectRef(____taxLineDetailChildElement, ____taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                            BeanDefinitionBuilder _____taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____taxLineDetailExChildElement = DomUtils.getChildElementByTagName(____taxLineDetailChildElement, "tax-line-detail-ex");
                                            if (_____taxLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____taxLineDetailExChildElement, _____taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", _____taxLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("taxLineDetail", ____taxLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                    BeanDefinitionBuilder ____salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                    Element ____salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                    if (____salesItemLineDetailChildElement!= null) {
                                        parseProperty(____salesItemLineDetailBuilder, ____salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                        if (!parseObjectRef(____salesItemLineDetailChildElement, ____salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                            BeanDefinitionBuilder ______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______itemRefChildElement = DomUtils.getChildElementByTagName(____salesItemLineDetailChildElement, "item-ref");
                                            if (______itemRefChildElement!= null) {
                                                parseProperty(______itemRefBuilder, ______itemRefChildElement, "value", "value");
                                                parseProperty(______itemRefBuilder, ______itemRefChildElement, "name", "name");
                                                parseProperty(______itemRefBuilder, ______itemRefChildElement, "type", "type");
                                                ____salesItemLineDetailBuilder.addPropertyValue("itemRef", ______itemRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesItemLineDetailChildElement, ____salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                            BeanDefinitionBuilder ______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______classRefChildElement = DomUtils.getChildElementByTagName(____salesItemLineDetailChildElement, "class-ref");
                                            if (______classRefChildElement!= null) {
                                                parseProperty(______classRefBuilder, ______classRefChildElement, "value", "value");
                                                parseProperty(______classRefBuilder, ______classRefChildElement, "name", "name");
                                                parseProperty(______classRefBuilder, ______classRefChildElement, "type", "type");
                                                ____salesItemLineDetailBuilder.addPropertyValue("classRef", ______classRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____salesItemLineDetailBuilder, ____salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                        parseProperty(____salesItemLineDetailBuilder, ____salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                        if (!parseObjectRef(____salesItemLineDetailChildElement, ____salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                            BeanDefinitionBuilder ______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______priceLevelRefChildElement = DomUtils.getChildElementByTagName(____salesItemLineDetailChildElement, "price-level-ref");
                                            if (______priceLevelRefChildElement!= null) {
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "value", "value");
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "name", "name");
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "type", "type");
                                                ____salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", ______priceLevelRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesItemLineDetailChildElement, ____salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                            BeanDefinitionBuilder ______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                            Element ______markupInfoChildElement = DomUtils.getChildElementByTagName(____salesItemLineDetailChildElement, "markup-info");
                                            if (______markupInfoChildElement!= null) {
                                                parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percentBased", "percentBased");
                                                parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "value", "value");
                                                parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percent", "percent");
                                                if (!parseObjectRef(______markupInfoChildElement, ______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                    BeanDefinitionBuilder _______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______priceLevelRefChildElement = DomUtils.getChildElementByTagName(______markupInfoChildElement, "price-level-ref");
                                                    if (_______priceLevelRefChildElement!= null) {
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "value", "value");
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "name", "name");
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "type", "type");
                                                        ______markupInfoBuilder.addPropertyValue("priceLevelRef", _______priceLevelRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                ____salesItemLineDetailBuilder.addPropertyValue("markupInfo", ______markupInfoBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____salesItemLineDetailBuilder, ____salesItemLineDetailChildElement, "qty", "qty");
                                        if (!parseObjectRef(____salesItemLineDetailChildElement, ____salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                            BeanDefinitionBuilder ______uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                            Element ______uomRefChildElement = DomUtils.getChildElementByTagName(____salesItemLineDetailChildElement, "uom-ref");
                                            if (______uomRefChildElement!= null) {
                                                parseProperty(______uomRefBuilder, ______uomRefChildElement, "unit", "unit");
                                                ____salesItemLineDetailBuilder.addPropertyValue("uomRef", ______uomRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesItemLineDetailChildElement, ____salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                            BeanDefinitionBuilder ______itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______itemAccountRefChildElement = DomUtils.getChildElementByTagName(____salesItemLineDetailChildElement, "item-account-ref");
                                            if (______itemAccountRefChildElement!= null) {
                                                parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "value", "value");
                                                parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "name", "name");
                                                parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "type", "type");
                                                ____salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", ______itemAccountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesItemLineDetailChildElement, ____salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                            BeanDefinitionBuilder ______inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______inventorySiteRefChildElement = DomUtils.getChildElementByTagName(____salesItemLineDetailChildElement, "inventory-site-ref");
                                            if (______inventorySiteRefChildElement!= null) {
                                                parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "value", "value");
                                                parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "name", "name");
                                                parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "type", "type");
                                                ____salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ______inventorySiteRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesItemLineDetailChildElement, ____salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                            BeanDefinitionBuilder ______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______taxCodeRefChildElement = DomUtils.getChildElementByTagName(____salesItemLineDetailChildElement, "tax-code-ref");
                                            if (______taxCodeRefChildElement!= null) {
                                                parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "value", "value");
                                                parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "name", "name");
                                                parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "type", "type");
                                                ____salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", ______taxCodeRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____salesItemLineDetailBuilder, ____salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                        parseProperty(____salesItemLineDetailBuilder, ____salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                        if (!parseObjectRef(____salesItemLineDetailChildElement, ____salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                            BeanDefinitionBuilder _____salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(____salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                            if (_____salesItemLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____salesItemLineDetailExChildElement, _____salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _____salesItemLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("salesItemLineDetail", ____salesItemLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                    BeanDefinitionBuilder ____descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                    Element ____descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                    if (____descriptionLineDetailChildElement!= null) {
                                        parseProperty(____descriptionLineDetailBuilder, ____descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                        if (!parseObjectRef(____descriptionLineDetailChildElement, ____descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                            BeanDefinitionBuilder _____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____taxCodeRefChildElement = DomUtils.getChildElementByTagName(____descriptionLineDetailChildElement, "tax-code-ref");
                                            if (_____taxCodeRefChildElement!= null) {
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "value", "value");
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "name", "name");
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "type", "type");
                                                ____descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", _____taxCodeRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____descriptionLineDetailChildElement, ____descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                            BeanDefinitionBuilder _____descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(____descriptionLineDetailChildElement, "description-line-detail-ex");
                                            if (_____descriptionLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____descriptionLineDetailExChildElement, _____descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", _____descriptionLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("descriptionLineDetail", ____descriptionLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                    BeanDefinitionBuilder ____itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                    Element ____itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                    if (____itemBasedExpenseLineDetailChildElement!= null) {
                                        parseProperty(____itemBasedExpenseLineDetailBuilder, ____itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                            BeanDefinitionBuilder ______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______itemRefChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "item-ref");
                                            if (______itemRefChildElement!= null) {
                                                parseProperty(______itemRefBuilder, ______itemRefChildElement, "value", "value");
                                                parseProperty(______itemRefBuilder, ______itemRefChildElement, "name", "name");
                                                parseProperty(______itemRefBuilder, ______itemRefChildElement, "type", "type");
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", ______itemRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                            BeanDefinitionBuilder ______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______classRefChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "class-ref");
                                            if (______classRefChildElement!= null) {
                                                parseProperty(______classRefBuilder, ______classRefChildElement, "value", "value");
                                                parseProperty(______classRefBuilder, ______classRefChildElement, "name", "name");
                                                parseProperty(______classRefBuilder, ______classRefChildElement, "type", "type");
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ______classRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____itemBasedExpenseLineDetailBuilder, ____itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                        parseProperty(____itemBasedExpenseLineDetailBuilder, ____itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                            BeanDefinitionBuilder ______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______priceLevelRefChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                            if (______priceLevelRefChildElement!= null) {
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "value", "value");
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "name", "name");
                                                parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "type", "type");
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", ______priceLevelRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                            BeanDefinitionBuilder ______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                            Element ______markupInfoChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "markup-info");
                                            if (______markupInfoChildElement!= null) {
                                                parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percentBased", "percentBased");
                                                parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "value", "value");
                                                parseProperty(______markupInfoBuilder, ______markupInfoChildElement, "percent", "percent");
                                                if (!parseObjectRef(______markupInfoChildElement, ______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                    BeanDefinitionBuilder _______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element _______priceLevelRefChildElement = DomUtils.getChildElementByTagName(______markupInfoChildElement, "price-level-ref");
                                                    if (_______priceLevelRefChildElement!= null) {
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "value", "value");
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "name", "name");
                                                        parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "type", "type");
                                                        ______markupInfoBuilder.addPropertyValue("priceLevelRef", _______priceLevelRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ______markupInfoBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____itemBasedExpenseLineDetailBuilder, ____itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                            BeanDefinitionBuilder ______uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                            Element ______uomRefChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "uom-ref");
                                            if (______uomRefChildElement!= null) {
                                                parseProperty(______uomRefBuilder, ______uomRefChildElement, "unit", "unit");
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", ______uomRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                            BeanDefinitionBuilder ______itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______itemAccountRefChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                            if (______itemAccountRefChildElement!= null) {
                                                parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "value", "value");
                                                parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "name", "name");
                                                parseProperty(______itemAccountRefBuilder, ______itemAccountRefChildElement, "type", "type");
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", ______itemAccountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                            BeanDefinitionBuilder ______inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______inventorySiteRefChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                            if (______inventorySiteRefChildElement!= null) {
                                                parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "value", "value");
                                                parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "name", "name");
                                                parseProperty(______inventorySiteRefBuilder, ______inventorySiteRefChildElement, "type", "type");
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", ______inventorySiteRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                            BeanDefinitionBuilder ______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element ______taxCodeRefChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                            if (______taxCodeRefChildElement!= null) {
                                                parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "value", "value");
                                                parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "name", "name");
                                                parseProperty(______taxCodeRefBuilder, ______taxCodeRefChildElement, "type", "type");
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ______taxCodeRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                            BeanDefinitionBuilder _____customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____customerRefChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "customer-ref");
                                            if (_____customerRefChildElement!= null) {
                                                parseProperty(_____customerRefBuilder, _____customerRefChildElement, "value", "value");
                                                parseProperty(_____customerRefBuilder, _____customerRefChildElement, "name", "name");
                                                parseProperty(_____customerRefBuilder, _____customerRefChildElement, "type", "type");
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _____customerRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____itemBasedExpenseLineDetailBuilder, ____itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                        parseProperty(____itemBasedExpenseLineDetailBuilder, ____itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                        if (!parseObjectRef(____itemBasedExpenseLineDetailChildElement, ____itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                            BeanDefinitionBuilder _____itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(____itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                            if (_____itemBasedExpenseLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____itemBasedExpenseLineDetailExChildElement, _____itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", _____itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("itemBasedExpenseLineDetail", ____itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                    BeanDefinitionBuilder ____accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                    Element ____accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                    if (____accountBasedExpenseLineDetailChildElement!= null) {
                                        if (!parseObjectRef(____accountBasedExpenseLineDetailChildElement, ____accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                            BeanDefinitionBuilder _____customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____customerRefChildElement = DomUtils.getChildElementByTagName(____accountBasedExpenseLineDetailChildElement, "customer-ref");
                                            if (_____customerRefChildElement!= null) {
                                                parseProperty(_____customerRefBuilder, _____customerRefChildElement, "value", "value");
                                                parseProperty(_____customerRefBuilder, _____customerRefChildElement, "name", "name");
                                                parseProperty(_____customerRefBuilder, _____customerRefChildElement, "type", "type");
                                                ____accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _____customerRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____accountBasedExpenseLineDetailChildElement, ____accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                            BeanDefinitionBuilder _____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____classRefChildElement = DomUtils.getChildElementByTagName(____accountBasedExpenseLineDetailChildElement, "class-ref");
                                            if (_____classRefChildElement!= null) {
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "value", "value");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "name", "name");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "type", "type");
                                                ____accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _____classRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____accountBasedExpenseLineDetailChildElement, ____accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                            BeanDefinitionBuilder _____accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____accountRefChildElement = DomUtils.getChildElementByTagName(____accountBasedExpenseLineDetailChildElement, "account-ref");
                                            if (_____accountRefChildElement!= null) {
                                                parseProperty(_____accountRefBuilder, _____accountRefChildElement, "value", "value");
                                                parseProperty(_____accountRefBuilder, _____accountRefChildElement, "name", "name");
                                                parseProperty(_____accountRefBuilder, _____accountRefChildElement, "type", "type");
                                                ____accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", _____accountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____accountBasedExpenseLineDetailBuilder, ____accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                        if (!parseObjectRef(____accountBasedExpenseLineDetailChildElement, ____accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                            BeanDefinitionBuilder _____markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                            Element _____markupInfoChildElement = DomUtils.getChildElementByTagName(____accountBasedExpenseLineDetailChildElement, "markup-info");
                                            if (_____markupInfoChildElement!= null) {
                                                parseProperty(_____markupInfoBuilder, _____markupInfoChildElement, "percentBased", "percentBased");
                                                parseProperty(_____markupInfoBuilder, _____markupInfoChildElement, "value", "value");
                                                parseProperty(_____markupInfoBuilder, _____markupInfoChildElement, "percent", "percent");
                                                if (!parseObjectRef(_____markupInfoChildElement, _____markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                    BeanDefinitionBuilder ______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____markupInfoChildElement, "price-level-ref");
                                                    if (______priceLevelRefChildElement!= null) {
                                                        parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "value", "value");
                                                        parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "name", "name");
                                                        parseProperty(______priceLevelRefBuilder, ______priceLevelRefChildElement, "type", "type");
                                                        _____markupInfoBuilder.addPropertyValue("priceLevelRef", ______priceLevelRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                ____accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _____markupInfoBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____accountBasedExpenseLineDetailBuilder, ____accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                        if (!parseObjectRef(____accountBasedExpenseLineDetailChildElement, ____accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                            BeanDefinitionBuilder _____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____taxCodeRefChildElement = DomUtils.getChildElementByTagName(____accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                            if (_____taxCodeRefChildElement!= null) {
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "value", "value");
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "name", "name");
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "type", "type");
                                                ____accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _____taxCodeRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____accountBasedExpenseLineDetailBuilder, ____accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                        if (!parseObjectRef(____accountBasedExpenseLineDetailChildElement, ____accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                            BeanDefinitionBuilder _____expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(____accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                            if (_____expenseDetailLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____expenseDetailLineDetailExChildElement, _____expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", _____expenseDetailLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("accountBasedExpenseLineDetail", ____accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                    BeanDefinitionBuilder ____depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                    Element ____depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                    if (____depositLineDetailChildElement!= null) {
                                        if (!parseObjectRef(____depositLineDetailChildElement, ____depositLineDetailBuilder, "entity", "entity")) {
                                            BeanDefinitionBuilder _____entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____entityChildElement = DomUtils.getChildElementByTagName(____depositLineDetailChildElement, "entity");
                                            if (_____entityChildElement!= null) {
                                                parseProperty(_____entityBuilder, _____entityChildElement, "value", "value");
                                                parseProperty(_____entityBuilder, _____entityChildElement, "name", "name");
                                                parseProperty(_____entityBuilder, _____entityChildElement, "type", "type");
                                                ____depositLineDetailBuilder.addPropertyValue("entity", _____entityBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____depositLineDetailChildElement, ____depositLineDetailBuilder, "class-ref", "classRef")) {
                                            BeanDefinitionBuilder _____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____classRefChildElement = DomUtils.getChildElementByTagName(____depositLineDetailChildElement, "class-ref");
                                            if (_____classRefChildElement!= null) {
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "value", "value");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "name", "name");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "type", "type");
                                                ____depositLineDetailBuilder.addPropertyValue("classRef", _____classRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____depositLineDetailChildElement, ____depositLineDetailBuilder, "account-ref", "accountRef")) {
                                            BeanDefinitionBuilder _____accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____accountRefChildElement = DomUtils.getChildElementByTagName(____depositLineDetailChildElement, "account-ref");
                                            if (_____accountRefChildElement!= null) {
                                                parseProperty(_____accountRefBuilder, _____accountRefChildElement, "value", "value");
                                                parseProperty(_____accountRefBuilder, _____accountRefChildElement, "name", "name");
                                                parseProperty(_____accountRefBuilder, _____accountRefChildElement, "type", "type");
                                                ____depositLineDetailBuilder.addPropertyValue("accountRef", _____accountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____depositLineDetailChildElement, ____depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                            BeanDefinitionBuilder _____paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____paymentMethodRefChildElement = DomUtils.getChildElementByTagName(____depositLineDetailChildElement, "payment-method-ref");
                                            if (_____paymentMethodRefChildElement!= null) {
                                                parseProperty(_____paymentMethodRefBuilder, _____paymentMethodRefChildElement, "value", "value");
                                                parseProperty(_____paymentMethodRefBuilder, _____paymentMethodRefChildElement, "name", "name");
                                                parseProperty(_____paymentMethodRefBuilder, _____paymentMethodRefChildElement, "type", "type");
                                                ____depositLineDetailBuilder.addPropertyValue("paymentMethodRef", _____paymentMethodRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____depositLineDetailBuilder, ____depositLineDetailChildElement, "checkNum", "checkNum");
                                        parseProperty(____depositLineDetailBuilder, ____depositLineDetailChildElement, "txnType", "txnType");
                                        if (!parseObjectRef(____depositLineDetailChildElement, ____depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                            BeanDefinitionBuilder _____depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____depositLineDetailExChildElement = DomUtils.getChildElementByTagName(____depositLineDetailChildElement, "deposit-line-detail-ex");
                                            if (_____depositLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____depositLineDetailExChildElement, _____depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", _____depositLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("depositLineDetail", ____depositLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                    BeanDefinitionBuilder ____purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                    Element ____purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                    if (____purchaseOrderItemLineDetailChildElement!= null) {
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                            BeanDefinitionBuilder ______salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element ______salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                            if (______salesItemLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(______salesItemLineDetailExChildElement, ______salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ______salesItemLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                            BeanDefinitionBuilder _______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______itemRefChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "item-ref");
                                            if (_______itemRefChildElement!= null) {
                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "value", "value");
                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "name", "name");
                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "type", "type");
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", _______itemRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                            BeanDefinitionBuilder _______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______classRefChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "class-ref");
                                            if (_______classRefChildElement!= null) {
                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "value", "value");
                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "name", "name");
                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "type", "type");
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", _______classRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                            BeanDefinitionBuilder _______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______priceLevelRefChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                            if (_______priceLevelRefChildElement!= null) {
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "value", "value");
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "name", "name");
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "type", "type");
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _______priceLevelRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                            BeanDefinitionBuilder _______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                            Element _______markupInfoChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "markup-info");
                                            if (_______markupInfoChildElement!= null) {
                                                parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percentBased", "percentBased");
                                                parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "value", "value");
                                                parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percent", "percent");
                                                if (!parseObjectRef(_______markupInfoChildElement, _______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                    BeanDefinitionBuilder ________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______markupInfoChildElement, "price-level-ref");
                                                    if (________priceLevelRefChildElement!= null) {
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "value", "value");
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "name", "name");
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "type", "type");
                                                        _______markupInfoBuilder.addPropertyValue("priceLevelRef", ________priceLevelRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _______markupInfoBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                            BeanDefinitionBuilder _______uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                            Element _______uomRefChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "uom-ref");
                                            if (_______uomRefChildElement!= null) {
                                                parseProperty(_______uomRefBuilder, _______uomRefChildElement, "unit", "unit");
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", _______uomRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                            BeanDefinitionBuilder _______itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______itemAccountRefChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                            if (_______itemAccountRefChildElement!= null) {
                                                parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "value", "value");
                                                parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "name", "name");
                                                parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "type", "type");
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _______itemAccountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                            BeanDefinitionBuilder _______inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______inventorySiteRefChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                            if (_______inventorySiteRefChildElement!= null) {
                                                parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "value", "value");
                                                parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "name", "name");
                                                parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "type", "type");
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _______inventorySiteRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                            BeanDefinitionBuilder _______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______taxCodeRefChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                            if (_______taxCodeRefChildElement!= null) {
                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "value", "value");
                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "name", "name");
                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "type", "type");
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _______taxCodeRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                        parseProperty(____purchaseOrderItemLineDetailBuilder, ____purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                        if (!parseObjectRef(____purchaseOrderItemLineDetailChildElement, ____purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                            BeanDefinitionBuilder _____purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(____purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                            if (_____purchaseOrderItemLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____purchaseOrderItemLineDetailExChildElement, _____purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", _____purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("purchaseOrderItemLineDetail", ____purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                    BeanDefinitionBuilder ____salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                    Element ____salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                    if (____salesOrderItemLineDetailChildElement!= null) {
                                        parseProperty(____salesOrderItemLineDetailBuilder, ____salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                        parseProperty(____salesOrderItemLineDetailBuilder, ____salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                        parseProperty(____salesOrderItemLineDetailBuilder, ____salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                        if (!parseObjectRef(____salesOrderItemLineDetailChildElement, ____salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                            BeanDefinitionBuilder ______salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element ______salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(____salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                            if (______salesItemLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(______salesItemLineDetailExChildElement, ______salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ______salesItemLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____salesOrderItemLineDetailBuilder, ____salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                        if (!parseObjectRef(____salesOrderItemLineDetailChildElement, ____salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                            BeanDefinitionBuilder _______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______itemRefChildElement = DomUtils.getChildElementByTagName(____salesOrderItemLineDetailChildElement, "item-ref");
                                            if (_______itemRefChildElement!= null) {
                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "value", "value");
                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "name", "name");
                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "type", "type");
                                                ____salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", _______itemRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesOrderItemLineDetailChildElement, ____salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                            BeanDefinitionBuilder _______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______classRefChildElement = DomUtils.getChildElementByTagName(____salesOrderItemLineDetailChildElement, "class-ref");
                                            if (_______classRefChildElement!= null) {
                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "value", "value");
                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "name", "name");
                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "type", "type");
                                                ____salesOrderItemLineDetailBuilder.addPropertyValue("classRef", _______classRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____salesOrderItemLineDetailBuilder, ____salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                        parseProperty(____salesOrderItemLineDetailBuilder, ____salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                        if (!parseObjectRef(____salesOrderItemLineDetailChildElement, ____salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                            BeanDefinitionBuilder _______priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______priceLevelRefChildElement = DomUtils.getChildElementByTagName(____salesOrderItemLineDetailChildElement, "price-level-ref");
                                            if (_______priceLevelRefChildElement!= null) {
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "value", "value");
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "name", "name");
                                                parseProperty(_______priceLevelRefBuilder, _______priceLevelRefChildElement, "type", "type");
                                                ____salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _______priceLevelRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesOrderItemLineDetailChildElement, ____salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                            BeanDefinitionBuilder _______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                            Element _______markupInfoChildElement = DomUtils.getChildElementByTagName(____salesOrderItemLineDetailChildElement, "markup-info");
                                            if (_______markupInfoChildElement!= null) {
                                                parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percentBased", "percentBased");
                                                parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "value", "value");
                                                parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percent", "percent");
                                                if (!parseObjectRef(_______markupInfoChildElement, _______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                    BeanDefinitionBuilder ________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______markupInfoChildElement, "price-level-ref");
                                                    if (________priceLevelRefChildElement!= null) {
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "value", "value");
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "name", "name");
                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "type", "type");
                                                        _______markupInfoBuilder.addPropertyValue("priceLevelRef", ________priceLevelRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                ____salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _______markupInfoBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____salesOrderItemLineDetailBuilder, ____salesOrderItemLineDetailChildElement, "qty", "qty");
                                        if (!parseObjectRef(____salesOrderItemLineDetailChildElement, ____salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                            BeanDefinitionBuilder _______uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                            Element _______uomRefChildElement = DomUtils.getChildElementByTagName(____salesOrderItemLineDetailChildElement, "uom-ref");
                                            if (_______uomRefChildElement!= null) {
                                                parseProperty(_______uomRefBuilder, _______uomRefChildElement, "unit", "unit");
                                                ____salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", _______uomRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesOrderItemLineDetailChildElement, ____salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                            BeanDefinitionBuilder _______itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______itemAccountRefChildElement = DomUtils.getChildElementByTagName(____salesOrderItemLineDetailChildElement, "item-account-ref");
                                            if (_______itemAccountRefChildElement!= null) {
                                                parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "value", "value");
                                                parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "name", "name");
                                                parseProperty(_______itemAccountRefBuilder, _______itemAccountRefChildElement, "type", "type");
                                                ____salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _______itemAccountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesOrderItemLineDetailChildElement, ____salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                            BeanDefinitionBuilder _______inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______inventorySiteRefChildElement = DomUtils.getChildElementByTagName(____salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                            if (_______inventorySiteRefChildElement!= null) {
                                                parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "value", "value");
                                                parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "name", "name");
                                                parseProperty(_______inventorySiteRefBuilder, _______inventorySiteRefChildElement, "type", "type");
                                                ____salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _______inventorySiteRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____salesOrderItemLineDetailChildElement, ____salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                            BeanDefinitionBuilder _______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _______taxCodeRefChildElement = DomUtils.getChildElementByTagName(____salesOrderItemLineDetailChildElement, "tax-code-ref");
                                            if (_______taxCodeRefChildElement!= null) {
                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "value", "value");
                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "name", "name");
                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "type", "type");
                                                ____salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _______taxCodeRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____salesOrderItemLineDetailBuilder, ____salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                        builder.addPropertyValue("salesOrderItemLineDetail", ____salesOrderItemLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                    BeanDefinitionBuilder ____itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                    Element ____itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                    if (____itemReceiptLineDetailChildElement!= null) {
                                        if (!parseObjectRef(____itemReceiptLineDetailChildElement, ____itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                            BeanDefinitionBuilder _____itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(____itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                            if (_____itemReceiptLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____itemReceiptLineDetailExChildElement, _____itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", _____itemReceiptLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("itemReceiptLineDetail", ____itemReceiptLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                    BeanDefinitionBuilder ____journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                    Element ____journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                    if (____journalEntryLineDetailChildElement!= null) {
                                        parseProperty(____journalEntryLineDetailBuilder, ____journalEntryLineDetailChildElement, "postingType", "postingType");
                                        if (!parseObjectRef(____journalEntryLineDetailChildElement, ____journalEntryLineDetailBuilder, "entity", "entity")) {
                                            BeanDefinitionBuilder _____entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                            Element _____entityChildElement = DomUtils.getChildElementByTagName(____journalEntryLineDetailChildElement, "entity");
                                            if (_____entityChildElement!= null) {
                                                parseProperty(_____entityBuilder, _____entityChildElement, "type", "type");
                                                if (!parseObjectRef(_____entityChildElement, _____entityBuilder, "entity-ref", "entityRef")) {
                                                    BeanDefinitionBuilder ______entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                    Element ______entityRefChildElement = DomUtils.getChildElementByTagName(_____entityChildElement, "entity-ref");
                                                    if (______entityRefChildElement!= null) {
                                                        parseProperty(______entityRefBuilder, ______entityRefChildElement, "value", "value");
                                                        parseProperty(______entityRefBuilder, ______entityRefChildElement, "name", "name");
                                                        parseProperty(______entityRefBuilder, ______entityRefChildElement, "type", "type");
                                                        _____entityBuilder.addPropertyValue("entityRef", ______entityRefBuilder.getBeanDefinition());
                                                    }
                                                }
                                                ____journalEntryLineDetailBuilder.addPropertyValue("entity", _____entityBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____journalEntryLineDetailChildElement, ____journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                            BeanDefinitionBuilder _____accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____accountRefChildElement = DomUtils.getChildElementByTagName(____journalEntryLineDetailChildElement, "account-ref");
                                            if (_____accountRefChildElement!= null) {
                                                parseProperty(_____accountRefBuilder, _____accountRefChildElement, "value", "value");
                                                parseProperty(_____accountRefBuilder, _____accountRefChildElement, "name", "name");
                                                parseProperty(_____accountRefBuilder, _____accountRefChildElement, "type", "type");
                                                ____journalEntryLineDetailBuilder.addPropertyValue("accountRef", _____accountRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____journalEntryLineDetailChildElement, ____journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                            BeanDefinitionBuilder _____classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____classRefChildElement = DomUtils.getChildElementByTagName(____journalEntryLineDetailChildElement, "class-ref");
                                            if (_____classRefChildElement!= null) {
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "value", "value");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "name", "name");
                                                parseProperty(_____classRefBuilder, _____classRefChildElement, "type", "type");
                                                ____journalEntryLineDetailBuilder.addPropertyValue("classRef", _____classRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____journalEntryLineDetailChildElement, ____journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                            BeanDefinitionBuilder _____departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____departmentRefChildElement = DomUtils.getChildElementByTagName(____journalEntryLineDetailChildElement, "department-ref");
                                            if (_____departmentRefChildElement!= null) {
                                                parseProperty(_____departmentRefBuilder, _____departmentRefChildElement, "value", "value");
                                                parseProperty(_____departmentRefBuilder, _____departmentRefChildElement, "name", "name");
                                                parseProperty(_____departmentRefBuilder, _____departmentRefChildElement, "type", "type");
                                                ____journalEntryLineDetailBuilder.addPropertyValue("departmentRef", _____departmentRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        if (!parseObjectRef(____journalEntryLineDetailChildElement, ____journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                            BeanDefinitionBuilder _____taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____taxCodeRefChildElement = DomUtils.getChildElementByTagName(____journalEntryLineDetailChildElement, "tax-code-ref");
                                            if (_____taxCodeRefChildElement!= null) {
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "value", "value");
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "name", "name");
                                                parseProperty(_____taxCodeRefBuilder, _____taxCodeRefChildElement, "type", "type");
                                                ____journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", _____taxCodeRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____journalEntryLineDetailBuilder, ____journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                        parseProperty(____journalEntryLineDetailBuilder, ____journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                        parseProperty(____journalEntryLineDetailBuilder, ____journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                        if (!parseObjectRef(____journalEntryLineDetailChildElement, ____journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                            BeanDefinitionBuilder _____journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(____journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                            if (_____journalEntryLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____journalEntryLineDetailExChildElement, _____journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", _____journalEntryLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("journalEntryLineDetail", ____journalEntryLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                    BeanDefinitionBuilder ____groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                    Element ____groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                    if (____groupLineDetailChildElement!= null) {
                                        if (!parseObjectRef(____groupLineDetailChildElement, ____groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                            BeanDefinitionBuilder _____groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____groupItemRefChildElement = DomUtils.getChildElementByTagName(____groupLineDetailChildElement, "group-item-ref");
                                            if (_____groupItemRefChildElement!= null) {
                                                parseProperty(_____groupItemRefBuilder, _____groupItemRefChildElement, "value", "value");
                                                parseProperty(_____groupItemRefBuilder, _____groupItemRefChildElement, "name", "name");
                                                parseProperty(_____groupItemRefBuilder, _____groupItemRefChildElement, "type", "type");
                                                ____groupLineDetailBuilder.addPropertyValue("groupItemRef", _____groupItemRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____groupLineDetailBuilder, ____groupLineDetailChildElement, "quantity", "quantity");
                                        parseProperty(____groupLineDetailBuilder, ____groupLineDetailChildElement, "serviceDate", "serviceDate");
                                        parseListAndSetProperty(____groupLineDetailChildElement, ____groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                            public BeanDefinition parse(Element element) {
                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                parseProperty(builder, element, "id", "id");
                                                parseProperty(builder, element, "lineNum", "lineNum");
                                                parseProperty(builder, element, "description", "description");
                                                parseProperty(builder, element, "amount", "amount");
                                                parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                    public BeanDefinition parse(Element element) {
                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                        parseProperty(builder, element, "txnId", "txnId");
                                                        parseProperty(builder, element, "txnType", "txnType");
                                                        parseProperty(builder, element, "txnLineId", "txnLineId");
                                                        return builder.getBeanDefinition();
                                                    }

                                                }
                                                );
                                                parseProperty(builder, element, "detailType", "detailType");
                                                if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                    BeanDefinitionBuilder ______paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                    Element ______paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                    if (______paymentLineDetailChildElement!= null) {
                                                        if (!parseObjectRef(______paymentLineDetailChildElement, ______paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                            BeanDefinitionBuilder _______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______itemRefChildElement = DomUtils.getChildElementByTagName(______paymentLineDetailChildElement, "item-ref");
                                                            if (_______itemRefChildElement!= null) {
                                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "value", "value");
                                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "name", "name");
                                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "type", "type");
                                                                ______paymentLineDetailBuilder.addPropertyValue("itemRef", _______itemRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______paymentLineDetailBuilder, ______paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                        if (!parseObjectRef(______paymentLineDetailChildElement, ______paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                            BeanDefinitionBuilder _______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______classRefChildElement = DomUtils.getChildElementByTagName(______paymentLineDetailChildElement, "class-ref");
                                                            if (_______classRefChildElement!= null) {
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "value", "value");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "name", "name");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "type", "type");
                                                                ______paymentLineDetailBuilder.addPropertyValue("classRef", _______classRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______paymentLineDetailBuilder, ______paymentLineDetailChildElement, "balance", "balance");
                                                        if (!parseObjectRef(______paymentLineDetailChildElement, ______paymentLineDetailBuilder, "discount", "discount")) {
                                                            BeanDefinitionBuilder _______discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                            Element _______discountChildElement = DomUtils.getChildElementByTagName(______paymentLineDetailChildElement, "discount");
                                                            if (_______discountChildElement!= null) {
                                                                if (!parseObjectRef(_______discountChildElement, _______discountBuilder, "discount-ref", "discountRef")) {
                                                                    BeanDefinitionBuilder ________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________discountRefChildElement = DomUtils.getChildElementByTagName(_______discountChildElement, "discount-ref");
                                                                    if (________discountRefChildElement!= null) {
                                                                        parseProperty(________discountRefBuilder, ________discountRefChildElement, "value", "value");
                                                                        parseProperty(________discountRefBuilder, ________discountRefChildElement, "name", "name");
                                                                        parseProperty(________discountRefBuilder, ________discountRefChildElement, "type", "type");
                                                                        _______discountBuilder.addPropertyValue("discountRef", ________discountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseProperty(_______discountBuilder, _______discountChildElement, "percentBased", "percentBased");
                                                                parseProperty(_______discountBuilder, _______discountChildElement, "discountPercent", "discountPercent");
                                                                if (!parseObjectRef(_______discountChildElement, _______discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                    BeanDefinitionBuilder ________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_______discountChildElement, "discount-account-ref");
                                                                    if (________discountAccountRefChildElement!= null) {
                                                                        parseProperty(________discountAccountRefBuilder, ________discountAccountRefChildElement, "value", "value");
                                                                        parseProperty(________discountAccountRefBuilder, ________discountAccountRefChildElement, "name", "name");
                                                                        parseProperty(________discountAccountRefBuilder, ________discountAccountRefChildElement, "type", "type");
                                                                        _______discountBuilder.addPropertyValue("discountAccountRef", ________discountAccountRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                ______paymentLineDetailBuilder.addPropertyValue("discount", _______discountBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______paymentLineDetailChildElement, ______paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                            BeanDefinitionBuilder _______paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______paymentLineExChildElement = DomUtils.getChildElementByTagName(______paymentLineDetailChildElement, "payment-line-ex");
                                                            if (_______paymentLineExChildElement!= null) {
                                                                parseListAndSetProperty(_______paymentLineExChildElement, _______paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______paymentLineDetailBuilder.addPropertyValue("paymentLineEx", _______paymentLineExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("paymentLineDetail", ______paymentLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                    BeanDefinitionBuilder ______discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                    Element ______discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                    if (______discountLineDetailChildElement!= null) {
                                                        parseProperty(______discountLineDetailBuilder, ______discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                        if (!parseObjectRef(______discountLineDetailChildElement, ______discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                            BeanDefinitionBuilder ________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________discountRefChildElement = DomUtils.getChildElementByTagName(______discountLineDetailChildElement, "discount-ref");
                                                            if (________discountRefChildElement!= null) {
                                                                parseProperty(________discountRefBuilder, ________discountRefChildElement, "value", "value");
                                                                parseProperty(________discountRefBuilder, ________discountRefChildElement, "name", "name");
                                                                parseProperty(________discountRefBuilder, ________discountRefChildElement, "type", "type");
                                                                ______discountLineDetailBuilder.addPropertyValue("discountRef", ________discountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______discountLineDetailBuilder, ______discountLineDetailChildElement, "percentBased", "percentBased");
                                                        parseProperty(______discountLineDetailBuilder, ______discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                        if (!parseObjectRef(______discountLineDetailChildElement, ______discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                            BeanDefinitionBuilder ________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________discountAccountRefChildElement = DomUtils.getChildElementByTagName(______discountLineDetailChildElement, "discount-account-ref");
                                                            if (________discountAccountRefChildElement!= null) {
                                                                parseProperty(________discountAccountRefBuilder, ________discountAccountRefChildElement, "value", "value");
                                                                parseProperty(________discountAccountRefBuilder, ________discountAccountRefChildElement, "name", "name");
                                                                parseProperty(________discountAccountRefBuilder, ________discountAccountRefChildElement, "type", "type");
                                                                ______discountLineDetailBuilder.addPropertyValue("discountAccountRef", ________discountAccountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______discountLineDetailBuilder, ______discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                        if (!parseObjectRef(______discountLineDetailChildElement, ______discountLineDetailBuilder, "class-ref", "classRef")) {
                                                            BeanDefinitionBuilder _______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______classRefChildElement = DomUtils.getChildElementByTagName(______discountLineDetailChildElement, "class-ref");
                                                            if (_______classRefChildElement!= null) {
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "value", "value");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "name", "name");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "type", "type");
                                                                ______discountLineDetailBuilder.addPropertyValue("classRef", _______classRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______discountLineDetailChildElement, ______discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                            BeanDefinitionBuilder _______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______taxCodeRefChildElement = DomUtils.getChildElementByTagName(______discountLineDetailChildElement, "tax-code-ref");
                                                            if (_______taxCodeRefChildElement!= null) {
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "value", "value");
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "name", "name");
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "type", "type");
                                                                ______discountLineDetailBuilder.addPropertyValue("taxCodeRef", _______taxCodeRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______discountLineDetailChildElement, ______discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                            BeanDefinitionBuilder _______discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______discountLineDetailExChildElement = DomUtils.getChildElementByTagName(______discountLineDetailChildElement, "discount-line-detail-ex");
                                                            if (_______discountLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______discountLineDetailExChildElement, _______discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", _______discountLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("discountLineDetail", ______discountLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                    BeanDefinitionBuilder ______taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                    Element ______taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                    if (______taxLineDetailChildElement!= null) {
                                                        if (!parseObjectRef(______taxLineDetailChildElement, ______taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                            BeanDefinitionBuilder _______taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______taxRateRefChildElement = DomUtils.getChildElementByTagName(______taxLineDetailChildElement, "tax-rate-ref");
                                                            if (_______taxRateRefChildElement!= null) {
                                                                parseProperty(_______taxRateRefBuilder, _______taxRateRefChildElement, "value", "value");
                                                                parseProperty(_______taxRateRefBuilder, _______taxRateRefChildElement, "name", "name");
                                                                parseProperty(_______taxRateRefBuilder, _______taxRateRefChildElement, "type", "type");
                                                                ______taxLineDetailBuilder.addPropertyValue("taxRateRef", _______taxRateRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______taxLineDetailBuilder, ______taxLineDetailChildElement, "percentBased", "percentBased");
                                                        parseProperty(______taxLineDetailBuilder, ______taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                        parseProperty(______taxLineDetailBuilder, ______taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                        parseProperty(______taxLineDetailBuilder, ______taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                        parseProperty(______taxLineDetailBuilder, ______taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                        parseProperty(______taxLineDetailBuilder, ______taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                        if (!parseObjectRef(______taxLineDetailChildElement, ______taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                            BeanDefinitionBuilder _______taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______taxLineDetailExChildElement = DomUtils.getChildElementByTagName(______taxLineDetailChildElement, "tax-line-detail-ex");
                                                            if (_______taxLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______taxLineDetailExChildElement, _______taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", _______taxLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("taxLineDetail", ______taxLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                    BeanDefinitionBuilder ______salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                    Element ______salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                    if (______salesItemLineDetailChildElement!= null) {
                                                        parseProperty(______salesItemLineDetailBuilder, ______salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                        if (!parseObjectRef(______salesItemLineDetailChildElement, ______salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                            BeanDefinitionBuilder ________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________itemRefChildElement = DomUtils.getChildElementByTagName(______salesItemLineDetailChildElement, "item-ref");
                                                            if (________itemRefChildElement!= null) {
                                                                parseProperty(________itemRefBuilder, ________itemRefChildElement, "value", "value");
                                                                parseProperty(________itemRefBuilder, ________itemRefChildElement, "name", "name");
                                                                parseProperty(________itemRefBuilder, ________itemRefChildElement, "type", "type");
                                                                ______salesItemLineDetailBuilder.addPropertyValue("itemRef", ________itemRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesItemLineDetailChildElement, ______salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                            BeanDefinitionBuilder ________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________classRefChildElement = DomUtils.getChildElementByTagName(______salesItemLineDetailChildElement, "class-ref");
                                                            if (________classRefChildElement!= null) {
                                                                parseProperty(________classRefBuilder, ________classRefChildElement, "value", "value");
                                                                parseProperty(________classRefBuilder, ________classRefChildElement, "name", "name");
                                                                parseProperty(________classRefBuilder, ________classRefChildElement, "type", "type");
                                                                ______salesItemLineDetailBuilder.addPropertyValue("classRef", ________classRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______salesItemLineDetailBuilder, ______salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                        parseProperty(______salesItemLineDetailBuilder, ______salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                        if (!parseObjectRef(______salesItemLineDetailChildElement, ______salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                            BeanDefinitionBuilder ________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______salesItemLineDetailChildElement, "price-level-ref");
                                                            if (________priceLevelRefChildElement!= null) {
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "value", "value");
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "name", "name");
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "type", "type");
                                                                ______salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", ________priceLevelRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesItemLineDetailChildElement, ______salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                            BeanDefinitionBuilder ________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                            Element ________markupInfoChildElement = DomUtils.getChildElementByTagName(______salesItemLineDetailChildElement, "markup-info");
                                                            if (________markupInfoChildElement!= null) {
                                                                parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percentBased", "percentBased");
                                                                parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "value", "value");
                                                                parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percent", "percent");
                                                                if (!parseObjectRef(________markupInfoChildElement, ________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                    BeanDefinitionBuilder _________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________markupInfoChildElement, "price-level-ref");
                                                                    if (_________priceLevelRefChildElement!= null) {
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "value", "value");
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "name", "name");
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "type", "type");
                                                                        ________markupInfoBuilder.addPropertyValue("priceLevelRef", _________priceLevelRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                ______salesItemLineDetailBuilder.addPropertyValue("markupInfo", ________markupInfoBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______salesItemLineDetailBuilder, ______salesItemLineDetailChildElement, "qty", "qty");
                                                        if (!parseObjectRef(______salesItemLineDetailChildElement, ______salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                            BeanDefinitionBuilder ________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                            Element ________uomRefChildElement = DomUtils.getChildElementByTagName(______salesItemLineDetailChildElement, "uom-ref");
                                                            if (________uomRefChildElement!= null) {
                                                                parseProperty(________uomRefBuilder, ________uomRefChildElement, "unit", "unit");
                                                                ______salesItemLineDetailBuilder.addPropertyValue("uomRef", ________uomRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesItemLineDetailChildElement, ______salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                            BeanDefinitionBuilder ________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________itemAccountRefChildElement = DomUtils.getChildElementByTagName(______salesItemLineDetailChildElement, "item-account-ref");
                                                            if (________itemAccountRefChildElement!= null) {
                                                                parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "value", "value");
                                                                parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "name", "name");
                                                                parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "type", "type");
                                                                ______salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", ________itemAccountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesItemLineDetailChildElement, ______salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                            BeanDefinitionBuilder ________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(______salesItemLineDetailChildElement, "inventory-site-ref");
                                                            if (________inventorySiteRefChildElement!= null) {
                                                                parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "value", "value");
                                                                parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "name", "name");
                                                                parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "type", "type");
                                                                ______salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ________inventorySiteRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesItemLineDetailChildElement, ______salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                            BeanDefinitionBuilder ________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______salesItemLineDetailChildElement, "tax-code-ref");
                                                            if (________taxCodeRefChildElement!= null) {
                                                                parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "value", "value");
                                                                parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "name", "name");
                                                                parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "type", "type");
                                                                ______salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", ________taxCodeRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______salesItemLineDetailBuilder, ______salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                        parseProperty(______salesItemLineDetailBuilder, ______salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                        if (!parseObjectRef(______salesItemLineDetailChildElement, ______salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                            BeanDefinitionBuilder _______salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(______salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                            if (_______salesItemLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______salesItemLineDetailExChildElement, _______salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _______salesItemLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("salesItemLineDetail", ______salesItemLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                    BeanDefinitionBuilder ______descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                    Element ______descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                    if (______descriptionLineDetailChildElement!= null) {
                                                        parseProperty(______descriptionLineDetailBuilder, ______descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                        if (!parseObjectRef(______descriptionLineDetailChildElement, ______descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                            BeanDefinitionBuilder _______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______taxCodeRefChildElement = DomUtils.getChildElementByTagName(______descriptionLineDetailChildElement, "tax-code-ref");
                                                            if (_______taxCodeRefChildElement!= null) {
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "value", "value");
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "name", "name");
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "type", "type");
                                                                ______descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", _______taxCodeRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______descriptionLineDetailChildElement, ______descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                            BeanDefinitionBuilder _______descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(______descriptionLineDetailChildElement, "description-line-detail-ex");
                                                            if (_______descriptionLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______descriptionLineDetailExChildElement, _______descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", _______descriptionLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("descriptionLineDetail", ______descriptionLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                    BeanDefinitionBuilder ______itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                    Element ______itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                    if (______itemBasedExpenseLineDetailChildElement!= null) {
                                                        parseProperty(______itemBasedExpenseLineDetailBuilder, ______itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                            BeanDefinitionBuilder ________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________itemRefChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "item-ref");
                                                            if (________itemRefChildElement!= null) {
                                                                parseProperty(________itemRefBuilder, ________itemRefChildElement, "value", "value");
                                                                parseProperty(________itemRefBuilder, ________itemRefChildElement, "name", "name");
                                                                parseProperty(________itemRefBuilder, ________itemRefChildElement, "type", "type");
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", ________itemRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                            BeanDefinitionBuilder ________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________classRefChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "class-ref");
                                                            if (________classRefChildElement!= null) {
                                                                parseProperty(________classRefBuilder, ________classRefChildElement, "value", "value");
                                                                parseProperty(________classRefBuilder, ________classRefChildElement, "name", "name");
                                                                parseProperty(________classRefBuilder, ________classRefChildElement, "type", "type");
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ________classRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______itemBasedExpenseLineDetailBuilder, ______itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                        parseProperty(______itemBasedExpenseLineDetailBuilder, ______itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                            BeanDefinitionBuilder ________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                            if (________priceLevelRefChildElement!= null) {
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "value", "value");
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "name", "name");
                                                                parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "type", "type");
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", ________priceLevelRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                            BeanDefinitionBuilder ________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                            Element ________markupInfoChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "markup-info");
                                                            if (________markupInfoChildElement!= null) {
                                                                parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percentBased", "percentBased");
                                                                parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "value", "value");
                                                                parseProperty(________markupInfoBuilder, ________markupInfoChildElement, "percent", "percent");
                                                                if (!parseObjectRef(________markupInfoChildElement, ________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                    BeanDefinitionBuilder _________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element _________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________markupInfoChildElement, "price-level-ref");
                                                                    if (_________priceLevelRefChildElement!= null) {
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "value", "value");
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "name", "name");
                                                                        parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "type", "type");
                                                                        ________markupInfoBuilder.addPropertyValue("priceLevelRef", _________priceLevelRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ________markupInfoBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______itemBasedExpenseLineDetailBuilder, ______itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                            BeanDefinitionBuilder ________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                            Element ________uomRefChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                            if (________uomRefChildElement!= null) {
                                                                parseProperty(________uomRefBuilder, ________uomRefChildElement, "unit", "unit");
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", ________uomRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                            BeanDefinitionBuilder ________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________itemAccountRefChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                            if (________itemAccountRefChildElement!= null) {
                                                                parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "value", "value");
                                                                parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "name", "name");
                                                                parseProperty(________itemAccountRefBuilder, ________itemAccountRefChildElement, "type", "type");
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", ________itemAccountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                            BeanDefinitionBuilder ________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                            if (________inventorySiteRefChildElement!= null) {
                                                                parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "value", "value");
                                                                parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "name", "name");
                                                                parseProperty(________inventorySiteRefBuilder, ________inventorySiteRefChildElement, "type", "type");
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", ________inventorySiteRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                            BeanDefinitionBuilder ________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element ________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                            if (________taxCodeRefChildElement!= null) {
                                                                parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "value", "value");
                                                                parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "name", "name");
                                                                parseProperty(________taxCodeRefBuilder, ________taxCodeRefChildElement, "type", "type");
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ________taxCodeRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                            BeanDefinitionBuilder _______customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______customerRefChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                            if (_______customerRefChildElement!= null) {
                                                                parseProperty(_______customerRefBuilder, _______customerRefChildElement, "value", "value");
                                                                parseProperty(_______customerRefBuilder, _______customerRefChildElement, "name", "name");
                                                                parseProperty(_______customerRefBuilder, _______customerRefChildElement, "type", "type");
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _______customerRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______itemBasedExpenseLineDetailBuilder, ______itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                        parseProperty(______itemBasedExpenseLineDetailBuilder, ______itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                        if (!parseObjectRef(______itemBasedExpenseLineDetailChildElement, ______itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                            BeanDefinitionBuilder _______itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(______itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                            if (_______itemBasedExpenseLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______itemBasedExpenseLineDetailExChildElement, _______itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", _______itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("itemBasedExpenseLineDetail", ______itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                    BeanDefinitionBuilder ______accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                    Element ______accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                    if (______accountBasedExpenseLineDetailChildElement!= null) {
                                                        if (!parseObjectRef(______accountBasedExpenseLineDetailChildElement, ______accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                            BeanDefinitionBuilder _______customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______customerRefChildElement = DomUtils.getChildElementByTagName(______accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                            if (_______customerRefChildElement!= null) {
                                                                parseProperty(_______customerRefBuilder, _______customerRefChildElement, "value", "value");
                                                                parseProperty(_______customerRefBuilder, _______customerRefChildElement, "name", "name");
                                                                parseProperty(_______customerRefBuilder, _______customerRefChildElement, "type", "type");
                                                                ______accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _______customerRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______accountBasedExpenseLineDetailChildElement, ______accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                            BeanDefinitionBuilder _______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______classRefChildElement = DomUtils.getChildElementByTagName(______accountBasedExpenseLineDetailChildElement, "class-ref");
                                                            if (_______classRefChildElement!= null) {
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "value", "value");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "name", "name");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "type", "type");
                                                                ______accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _______classRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______accountBasedExpenseLineDetailChildElement, ______accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                            BeanDefinitionBuilder _______accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______accountRefChildElement = DomUtils.getChildElementByTagName(______accountBasedExpenseLineDetailChildElement, "account-ref");
                                                            if (_______accountRefChildElement!= null) {
                                                                parseProperty(_______accountRefBuilder, _______accountRefChildElement, "value", "value");
                                                                parseProperty(_______accountRefBuilder, _______accountRefChildElement, "name", "name");
                                                                parseProperty(_______accountRefBuilder, _______accountRefChildElement, "type", "type");
                                                                ______accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", _______accountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______accountBasedExpenseLineDetailBuilder, ______accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                        if (!parseObjectRef(______accountBasedExpenseLineDetailChildElement, ______accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                            BeanDefinitionBuilder _______markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                            Element _______markupInfoChildElement = DomUtils.getChildElementByTagName(______accountBasedExpenseLineDetailChildElement, "markup-info");
                                                            if (_______markupInfoChildElement!= null) {
                                                                parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percentBased", "percentBased");
                                                                parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "value", "value");
                                                                parseProperty(_______markupInfoBuilder, _______markupInfoChildElement, "percent", "percent");
                                                                if (!parseObjectRef(_______markupInfoChildElement, _______markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                    BeanDefinitionBuilder ________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______markupInfoChildElement, "price-level-ref");
                                                                    if (________priceLevelRefChildElement!= null) {
                                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "value", "value");
                                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "name", "name");
                                                                        parseProperty(________priceLevelRefBuilder, ________priceLevelRefChildElement, "type", "type");
                                                                        _______markupInfoBuilder.addPropertyValue("priceLevelRef", ________priceLevelRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                ______accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _______markupInfoBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______accountBasedExpenseLineDetailBuilder, ______accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                        if (!parseObjectRef(______accountBasedExpenseLineDetailChildElement, ______accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                            BeanDefinitionBuilder _______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______taxCodeRefChildElement = DomUtils.getChildElementByTagName(______accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                            if (_______taxCodeRefChildElement!= null) {
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "value", "value");
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "name", "name");
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "type", "type");
                                                                ______accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _______taxCodeRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______accountBasedExpenseLineDetailBuilder, ______accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                        if (!parseObjectRef(______accountBasedExpenseLineDetailChildElement, ______accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                            BeanDefinitionBuilder _______expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(______accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                            if (_______expenseDetailLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______expenseDetailLineDetailExChildElement, _______expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", _______expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("accountBasedExpenseLineDetail", ______accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                    BeanDefinitionBuilder ______depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                    Element ______depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                    if (______depositLineDetailChildElement!= null) {
                                                        if (!parseObjectRef(______depositLineDetailChildElement, ______depositLineDetailBuilder, "entity", "entity")) {
                                                            BeanDefinitionBuilder _______entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______entityChildElement = DomUtils.getChildElementByTagName(______depositLineDetailChildElement, "entity");
                                                            if (_______entityChildElement!= null) {
                                                                parseProperty(_______entityBuilder, _______entityChildElement, "value", "value");
                                                                parseProperty(_______entityBuilder, _______entityChildElement, "name", "name");
                                                                parseProperty(_______entityBuilder, _______entityChildElement, "type", "type");
                                                                ______depositLineDetailBuilder.addPropertyValue("entity", _______entityBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______depositLineDetailChildElement, ______depositLineDetailBuilder, "class-ref", "classRef")) {
                                                            BeanDefinitionBuilder _______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______classRefChildElement = DomUtils.getChildElementByTagName(______depositLineDetailChildElement, "class-ref");
                                                            if (_______classRefChildElement!= null) {
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "value", "value");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "name", "name");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "type", "type");
                                                                ______depositLineDetailBuilder.addPropertyValue("classRef", _______classRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______depositLineDetailChildElement, ______depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                            BeanDefinitionBuilder _______accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______accountRefChildElement = DomUtils.getChildElementByTagName(______depositLineDetailChildElement, "account-ref");
                                                            if (_______accountRefChildElement!= null) {
                                                                parseProperty(_______accountRefBuilder, _______accountRefChildElement, "value", "value");
                                                                parseProperty(_______accountRefBuilder, _______accountRefChildElement, "name", "name");
                                                                parseProperty(_______accountRefBuilder, _______accountRefChildElement, "type", "type");
                                                                ______depositLineDetailBuilder.addPropertyValue("accountRef", _______accountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______depositLineDetailChildElement, ______depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                            BeanDefinitionBuilder _______paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______paymentMethodRefChildElement = DomUtils.getChildElementByTagName(______depositLineDetailChildElement, "payment-method-ref");
                                                            if (_______paymentMethodRefChildElement!= null) {
                                                                parseProperty(_______paymentMethodRefBuilder, _______paymentMethodRefChildElement, "value", "value");
                                                                parseProperty(_______paymentMethodRefBuilder, _______paymentMethodRefChildElement, "name", "name");
                                                                parseProperty(_______paymentMethodRefBuilder, _______paymentMethodRefChildElement, "type", "type");
                                                                ______depositLineDetailBuilder.addPropertyValue("paymentMethodRef", _______paymentMethodRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______depositLineDetailBuilder, ______depositLineDetailChildElement, "checkNum", "checkNum");
                                                        parseProperty(______depositLineDetailBuilder, ______depositLineDetailChildElement, "txnType", "txnType");
                                                        if (!parseObjectRef(______depositLineDetailChildElement, ______depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                            BeanDefinitionBuilder _______depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______depositLineDetailExChildElement = DomUtils.getChildElementByTagName(______depositLineDetailChildElement, "deposit-line-detail-ex");
                                                            if (_______depositLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______depositLineDetailExChildElement, _______depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", _______depositLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("depositLineDetail", ______depositLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                    BeanDefinitionBuilder ______purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                    Element ______purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                    if (______purchaseOrderItemLineDetailChildElement!= null) {
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                            BeanDefinitionBuilder ________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element ________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                            if (________salesItemLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(________salesItemLineDetailExChildElement, ________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ________salesItemLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                            BeanDefinitionBuilder _________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________itemRefChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "item-ref");
                                                            if (_________itemRefChildElement!= null) {
                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "value", "value");
                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "name", "name");
                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "type", "type");
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", _________itemRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                            BeanDefinitionBuilder _________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________classRefChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "class-ref");
                                                            if (_________classRefChildElement!= null) {
                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "value", "value");
                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "name", "name");
                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "type", "type");
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", _________classRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                            BeanDefinitionBuilder _________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                            if (_________priceLevelRefChildElement!= null) {
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "value", "value");
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "name", "name");
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "type", "type");
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _________priceLevelRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                            BeanDefinitionBuilder _________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                            Element _________markupInfoChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "markup-info");
                                                            if (_________markupInfoChildElement!= null) {
                                                                parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percentBased", "percentBased");
                                                                parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "value", "value");
                                                                parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percent", "percent");
                                                                if (!parseObjectRef(_________markupInfoChildElement, _________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                    BeanDefinitionBuilder __________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________markupInfoChildElement, "price-level-ref");
                                                                    if (__________priceLevelRefChildElement!= null) {
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "value", "value");
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "name", "name");
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "type", "type");
                                                                        _________markupInfoBuilder.addPropertyValue("priceLevelRef", __________priceLevelRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _________markupInfoBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                            BeanDefinitionBuilder _________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                            Element _________uomRefChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                            if (_________uomRefChildElement!= null) {
                                                                parseProperty(_________uomRefBuilder, _________uomRefChildElement, "unit", "unit");
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", _________uomRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                            BeanDefinitionBuilder _________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________itemAccountRefChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                            if (_________itemAccountRefChildElement!= null) {
                                                                parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "value", "value");
                                                                parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "name", "name");
                                                                parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "type", "type");
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _________itemAccountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                            BeanDefinitionBuilder _________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                            if (_________inventorySiteRefChildElement!= null) {
                                                                parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "value", "value");
                                                                parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "name", "name");
                                                                parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "type", "type");
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _________inventorySiteRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                            BeanDefinitionBuilder _________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                            if (_________taxCodeRefChildElement!= null) {
                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "value", "value");
                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "name", "name");
                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "type", "type");
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _________taxCodeRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                        parseProperty(______purchaseOrderItemLineDetailBuilder, ______purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                        if (!parseObjectRef(______purchaseOrderItemLineDetailChildElement, ______purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                            BeanDefinitionBuilder _______purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(______purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                            if (_______purchaseOrderItemLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______purchaseOrderItemLineDetailExChildElement, _______purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", _______purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("purchaseOrderItemLineDetail", ______purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                    BeanDefinitionBuilder ______salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                    Element ______salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                    if (______salesOrderItemLineDetailChildElement!= null) {
                                                        parseProperty(______salesOrderItemLineDetailBuilder, ______salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                        parseProperty(______salesOrderItemLineDetailBuilder, ______salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                        parseProperty(______salesOrderItemLineDetailBuilder, ______salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                        if (!parseObjectRef(______salesOrderItemLineDetailChildElement, ______salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                            BeanDefinitionBuilder ________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element ________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(______salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                            if (________salesItemLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(________salesItemLineDetailExChildElement, ________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ________salesItemLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______salesOrderItemLineDetailBuilder, ______salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                        if (!parseObjectRef(______salesOrderItemLineDetailChildElement, ______salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                            BeanDefinitionBuilder _________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________itemRefChildElement = DomUtils.getChildElementByTagName(______salesOrderItemLineDetailChildElement, "item-ref");
                                                            if (_________itemRefChildElement!= null) {
                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "value", "value");
                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "name", "name");
                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "type", "type");
                                                                ______salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", _________itemRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesOrderItemLineDetailChildElement, ______salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                            BeanDefinitionBuilder _________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________classRefChildElement = DomUtils.getChildElementByTagName(______salesOrderItemLineDetailChildElement, "class-ref");
                                                            if (_________classRefChildElement!= null) {
                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "value", "value");
                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "name", "name");
                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "type", "type");
                                                                ______salesOrderItemLineDetailBuilder.addPropertyValue("classRef", _________classRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______salesOrderItemLineDetailBuilder, ______salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                        parseProperty(______salesOrderItemLineDetailBuilder, ______salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                        if (!parseObjectRef(______salesOrderItemLineDetailChildElement, ______salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                            BeanDefinitionBuilder _________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______salesOrderItemLineDetailChildElement, "price-level-ref");
                                                            if (_________priceLevelRefChildElement!= null) {
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "value", "value");
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "name", "name");
                                                                parseProperty(_________priceLevelRefBuilder, _________priceLevelRefChildElement, "type", "type");
                                                                ______salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _________priceLevelRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesOrderItemLineDetailChildElement, ______salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                            BeanDefinitionBuilder _________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                            Element _________markupInfoChildElement = DomUtils.getChildElementByTagName(______salesOrderItemLineDetailChildElement, "markup-info");
                                                            if (_________markupInfoChildElement!= null) {
                                                                parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percentBased", "percentBased");
                                                                parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "value", "value");
                                                                parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percent", "percent");
                                                                if (!parseObjectRef(_________markupInfoChildElement, _________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                    BeanDefinitionBuilder __________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element __________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________markupInfoChildElement, "price-level-ref");
                                                                    if (__________priceLevelRefChildElement!= null) {
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "value", "value");
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "name", "name");
                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "type", "type");
                                                                        _________markupInfoBuilder.addPropertyValue("priceLevelRef", __________priceLevelRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                ______salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _________markupInfoBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______salesOrderItemLineDetailBuilder, ______salesOrderItemLineDetailChildElement, "qty", "qty");
                                                        if (!parseObjectRef(______salesOrderItemLineDetailChildElement, ______salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                            BeanDefinitionBuilder _________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                            Element _________uomRefChildElement = DomUtils.getChildElementByTagName(______salesOrderItemLineDetailChildElement, "uom-ref");
                                                            if (_________uomRefChildElement!= null) {
                                                                parseProperty(_________uomRefBuilder, _________uomRefChildElement, "unit", "unit");
                                                                ______salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", _________uomRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesOrderItemLineDetailChildElement, ______salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                            BeanDefinitionBuilder _________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________itemAccountRefChildElement = DomUtils.getChildElementByTagName(______salesOrderItemLineDetailChildElement, "item-account-ref");
                                                            if (_________itemAccountRefChildElement!= null) {
                                                                parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "value", "value");
                                                                parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "name", "name");
                                                                parseProperty(_________itemAccountRefBuilder, _________itemAccountRefChildElement, "type", "type");
                                                                ______salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _________itemAccountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesOrderItemLineDetailChildElement, ______salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                            BeanDefinitionBuilder _________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(______salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                            if (_________inventorySiteRefChildElement!= null) {
                                                                parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "value", "value");
                                                                parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "name", "name");
                                                                parseProperty(_________inventorySiteRefBuilder, _________inventorySiteRefChildElement, "type", "type");
                                                                ______salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _________inventorySiteRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______salesOrderItemLineDetailChildElement, ______salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                            BeanDefinitionBuilder _________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                            if (_________taxCodeRefChildElement!= null) {
                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "value", "value");
                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "name", "name");
                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "type", "type");
                                                                ______salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _________taxCodeRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______salesOrderItemLineDetailBuilder, ______salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                        builder.addPropertyValue("salesOrderItemLineDetail", ______salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                    BeanDefinitionBuilder ______itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                    Element ______itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                    if (______itemReceiptLineDetailChildElement!= null) {
                                                        if (!parseObjectRef(______itemReceiptLineDetailChildElement, ______itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                            BeanDefinitionBuilder _______itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(______itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                            if (_______itemReceiptLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______itemReceiptLineDetailExChildElement, _______itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", _______itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("itemReceiptLineDetail", ______itemReceiptLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                    BeanDefinitionBuilder ______journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                    Element ______journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                    if (______journalEntryLineDetailChildElement!= null) {
                                                        parseProperty(______journalEntryLineDetailBuilder, ______journalEntryLineDetailChildElement, "postingType", "postingType");
                                                        if (!parseObjectRef(______journalEntryLineDetailChildElement, ______journalEntryLineDetailBuilder, "entity", "entity")) {
                                                            BeanDefinitionBuilder _______entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                            Element _______entityChildElement = DomUtils.getChildElementByTagName(______journalEntryLineDetailChildElement, "entity");
                                                            if (_______entityChildElement!= null) {
                                                                parseProperty(_______entityBuilder, _______entityChildElement, "type", "type");
                                                                if (!parseObjectRef(_______entityChildElement, _______entityBuilder, "entity-ref", "entityRef")) {
                                                                    BeanDefinitionBuilder ________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                    Element ________entityRefChildElement = DomUtils.getChildElementByTagName(_______entityChildElement, "entity-ref");
                                                                    if (________entityRefChildElement!= null) {
                                                                        parseProperty(________entityRefBuilder, ________entityRefChildElement, "value", "value");
                                                                        parseProperty(________entityRefBuilder, ________entityRefChildElement, "name", "name");
                                                                        parseProperty(________entityRefBuilder, ________entityRefChildElement, "type", "type");
                                                                        _______entityBuilder.addPropertyValue("entityRef", ________entityRefBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                ______journalEntryLineDetailBuilder.addPropertyValue("entity", _______entityBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______journalEntryLineDetailChildElement, ______journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                            BeanDefinitionBuilder _______accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______accountRefChildElement = DomUtils.getChildElementByTagName(______journalEntryLineDetailChildElement, "account-ref");
                                                            if (_______accountRefChildElement!= null) {
                                                                parseProperty(_______accountRefBuilder, _______accountRefChildElement, "value", "value");
                                                                parseProperty(_______accountRefBuilder, _______accountRefChildElement, "name", "name");
                                                                parseProperty(_______accountRefBuilder, _______accountRefChildElement, "type", "type");
                                                                ______journalEntryLineDetailBuilder.addPropertyValue("accountRef", _______accountRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______journalEntryLineDetailChildElement, ______journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                            BeanDefinitionBuilder _______classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______classRefChildElement = DomUtils.getChildElementByTagName(______journalEntryLineDetailChildElement, "class-ref");
                                                            if (_______classRefChildElement!= null) {
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "value", "value");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "name", "name");
                                                                parseProperty(_______classRefBuilder, _______classRefChildElement, "type", "type");
                                                                ______journalEntryLineDetailBuilder.addPropertyValue("classRef", _______classRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______journalEntryLineDetailChildElement, ______journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                            BeanDefinitionBuilder _______departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______departmentRefChildElement = DomUtils.getChildElementByTagName(______journalEntryLineDetailChildElement, "department-ref");
                                                            if (_______departmentRefChildElement!= null) {
                                                                parseProperty(_______departmentRefBuilder, _______departmentRefChildElement, "value", "value");
                                                                parseProperty(_______departmentRefBuilder, _______departmentRefChildElement, "name", "name");
                                                                parseProperty(_______departmentRefBuilder, _______departmentRefChildElement, "type", "type");
                                                                ______journalEntryLineDetailBuilder.addPropertyValue("departmentRef", _______departmentRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        if (!parseObjectRef(______journalEntryLineDetailChildElement, ______journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                            BeanDefinitionBuilder _______taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______taxCodeRefChildElement = DomUtils.getChildElementByTagName(______journalEntryLineDetailChildElement, "tax-code-ref");
                                                            if (_______taxCodeRefChildElement!= null) {
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "value", "value");
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "name", "name");
                                                                parseProperty(_______taxCodeRefBuilder, _______taxCodeRefChildElement, "type", "type");
                                                                ______journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", _______taxCodeRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______journalEntryLineDetailBuilder, ______journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                        parseProperty(______journalEntryLineDetailBuilder, ______journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                        parseProperty(______journalEntryLineDetailBuilder, ______journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                        if (!parseObjectRef(______journalEntryLineDetailChildElement, ______journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                            BeanDefinitionBuilder _______journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(______journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                            if (_______journalEntryLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______journalEntryLineDetailExChildElement, _______journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", _______journalEntryLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("journalEntryLineDetail", ______journalEntryLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                    BeanDefinitionBuilder ______groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                    Element ______groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                    if (______groupLineDetailChildElement!= null) {
                                                        if (!parseObjectRef(______groupLineDetailChildElement, ______groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                            BeanDefinitionBuilder _______groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______groupItemRefChildElement = DomUtils.getChildElementByTagName(______groupLineDetailChildElement, "group-item-ref");
                                                            if (_______groupItemRefChildElement!= null) {
                                                                parseProperty(_______groupItemRefBuilder, _______groupItemRefChildElement, "value", "value");
                                                                parseProperty(_______groupItemRefBuilder, _______groupItemRefChildElement, "name", "name");
                                                                parseProperty(_______groupItemRefBuilder, _______groupItemRefChildElement, "type", "type");
                                                                ______groupLineDetailBuilder.addPropertyValue("groupItemRef", _______groupItemRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______groupLineDetailBuilder, ______groupLineDetailChildElement, "quantity", "quantity");
                                                        parseProperty(______groupLineDetailBuilder, ______groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                        parseListAndSetProperty(______groupLineDetailChildElement, ______groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                            public BeanDefinition parse(Element element) {
                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                parseProperty(builder, element, "id", "id");
                                                                parseProperty(builder, element, "lineNum", "lineNum");
                                                                parseProperty(builder, element, "description", "description");
                                                                parseProperty(builder, element, "amount", "amount");
                                                                parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                    public BeanDefinition parse(Element element) {
                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                        parseProperty(builder, element, "txnId", "txnId");
                                                                        parseProperty(builder, element, "txnType", "txnType");
                                                                        parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                        return builder.getBeanDefinition();
                                                                    }

                                                                }
                                                                );
                                                                parseProperty(builder, element, "detailType", "detailType");
                                                                if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                    BeanDefinitionBuilder ________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                    Element ________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                    if (________paymentLineDetailChildElement!= null) {
                                                                        if (!parseObjectRef(________paymentLineDetailChildElement, ________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                            BeanDefinitionBuilder _________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________itemRefChildElement = DomUtils.getChildElementByTagName(________paymentLineDetailChildElement, "item-ref");
                                                                            if (_________itemRefChildElement!= null) {
                                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "value", "value");
                                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "name", "name");
                                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "type", "type");
                                                                                ________paymentLineDetailBuilder.addPropertyValue("itemRef", _________itemRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________paymentLineDetailBuilder, ________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                        if (!parseObjectRef(________paymentLineDetailChildElement, ________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                            BeanDefinitionBuilder _________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________classRefChildElement = DomUtils.getChildElementByTagName(________paymentLineDetailChildElement, "class-ref");
                                                                            if (_________classRefChildElement!= null) {
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "value", "value");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "name", "name");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "type", "type");
                                                                                ________paymentLineDetailBuilder.addPropertyValue("classRef", _________classRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________paymentLineDetailBuilder, ________paymentLineDetailChildElement, "balance", "balance");
                                                                        if (!parseObjectRef(________paymentLineDetailChildElement, ________paymentLineDetailBuilder, "discount", "discount")) {
                                                                            BeanDefinitionBuilder _________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                            Element _________discountChildElement = DomUtils.getChildElementByTagName(________paymentLineDetailChildElement, "discount");
                                                                            if (_________discountChildElement!= null) {
                                                                                if (!parseObjectRef(_________discountChildElement, _________discountBuilder, "discount-ref", "discountRef")) {
                                                                                    BeanDefinitionBuilder __________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________discountRefChildElement = DomUtils.getChildElementByTagName(_________discountChildElement, "discount-ref");
                                                                                    if (__________discountRefChildElement!= null) {
                                                                                        parseProperty(__________discountRefBuilder, __________discountRefChildElement, "value", "value");
                                                                                        parseProperty(__________discountRefBuilder, __________discountRefChildElement, "name", "name");
                                                                                        parseProperty(__________discountRefBuilder, __________discountRefChildElement, "type", "type");
                                                                                        _________discountBuilder.addPropertyValue("discountRef", __________discountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseProperty(_________discountBuilder, _________discountChildElement, "percentBased", "percentBased");
                                                                                parseProperty(_________discountBuilder, _________discountChildElement, "discountPercent", "discountPercent");
                                                                                if (!parseObjectRef(_________discountChildElement, _________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                    BeanDefinitionBuilder __________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_________discountChildElement, "discount-account-ref");
                                                                                    if (__________discountAccountRefChildElement!= null) {
                                                                                        parseProperty(__________discountAccountRefBuilder, __________discountAccountRefChildElement, "value", "value");
                                                                                        parseProperty(__________discountAccountRefBuilder, __________discountAccountRefChildElement, "name", "name");
                                                                                        parseProperty(__________discountAccountRefBuilder, __________discountAccountRefChildElement, "type", "type");
                                                                                        _________discountBuilder.addPropertyValue("discountAccountRef", __________discountAccountRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                ________paymentLineDetailBuilder.addPropertyValue("discount", _________discountBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________paymentLineDetailChildElement, ________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                            BeanDefinitionBuilder _________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________paymentLineExChildElement = DomUtils.getChildElementByTagName(________paymentLineDetailChildElement, "payment-line-ex");
                                                                            if (_________paymentLineExChildElement!= null) {
                                                                                parseListAndSetProperty(_________paymentLineExChildElement, _________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", _________paymentLineExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("paymentLineDetail", ________paymentLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                    BeanDefinitionBuilder ________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                    Element ________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                    if (________discountLineDetailChildElement!= null) {
                                                                        parseProperty(________discountLineDetailBuilder, ________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                        if (!parseObjectRef(________discountLineDetailChildElement, ________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                            BeanDefinitionBuilder __________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________discountRefChildElement = DomUtils.getChildElementByTagName(________discountLineDetailChildElement, "discount-ref");
                                                                            if (__________discountRefChildElement!= null) {
                                                                                parseProperty(__________discountRefBuilder, __________discountRefChildElement, "value", "value");
                                                                                parseProperty(__________discountRefBuilder, __________discountRefChildElement, "name", "name");
                                                                                parseProperty(__________discountRefBuilder, __________discountRefChildElement, "type", "type");
                                                                                ________discountLineDetailBuilder.addPropertyValue("discountRef", __________discountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________discountLineDetailBuilder, ________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                        parseProperty(________discountLineDetailBuilder, ________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                        if (!parseObjectRef(________discountLineDetailChildElement, ________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                            BeanDefinitionBuilder __________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________discountAccountRefChildElement = DomUtils.getChildElementByTagName(________discountLineDetailChildElement, "discount-account-ref");
                                                                            if (__________discountAccountRefChildElement!= null) {
                                                                                parseProperty(__________discountAccountRefBuilder, __________discountAccountRefChildElement, "value", "value");
                                                                                parseProperty(__________discountAccountRefBuilder, __________discountAccountRefChildElement, "name", "name");
                                                                                parseProperty(__________discountAccountRefBuilder, __________discountAccountRefChildElement, "type", "type");
                                                                                ________discountLineDetailBuilder.addPropertyValue("discountAccountRef", __________discountAccountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________discountLineDetailBuilder, ________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                        if (!parseObjectRef(________discountLineDetailChildElement, ________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                            BeanDefinitionBuilder _________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________classRefChildElement = DomUtils.getChildElementByTagName(________discountLineDetailChildElement, "class-ref");
                                                                            if (_________classRefChildElement!= null) {
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "value", "value");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "name", "name");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "type", "type");
                                                                                ________discountLineDetailBuilder.addPropertyValue("classRef", _________classRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________discountLineDetailChildElement, ________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                            BeanDefinitionBuilder _________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________discountLineDetailChildElement, "tax-code-ref");
                                                                            if (_________taxCodeRefChildElement!= null) {
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "value", "value");
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "name", "name");
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "type", "type");
                                                                                ________discountLineDetailBuilder.addPropertyValue("taxCodeRef", _________taxCodeRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________discountLineDetailChildElement, ________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                            if (_________discountLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________discountLineDetailExChildElement, _________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", _________discountLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("discountLineDetail", ________discountLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                    BeanDefinitionBuilder ________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                    Element ________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                    if (________taxLineDetailChildElement!= null) {
                                                                        if (!parseObjectRef(________taxLineDetailChildElement, ________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                            BeanDefinitionBuilder _________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________taxRateRefChildElement = DomUtils.getChildElementByTagName(________taxLineDetailChildElement, "tax-rate-ref");
                                                                            if (_________taxRateRefChildElement!= null) {
                                                                                parseProperty(_________taxRateRefBuilder, _________taxRateRefChildElement, "value", "value");
                                                                                parseProperty(_________taxRateRefBuilder, _________taxRateRefChildElement, "name", "name");
                                                                                parseProperty(_________taxRateRefBuilder, _________taxRateRefChildElement, "type", "type");
                                                                                ________taxLineDetailBuilder.addPropertyValue("taxRateRef", _________taxRateRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________taxLineDetailBuilder, ________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                        parseProperty(________taxLineDetailBuilder, ________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                        parseProperty(________taxLineDetailBuilder, ________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                        parseProperty(________taxLineDetailBuilder, ________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                        parseProperty(________taxLineDetailBuilder, ________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                        parseProperty(________taxLineDetailBuilder, ________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                        if (!parseObjectRef(________taxLineDetailChildElement, ________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                            if (_________taxLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________taxLineDetailExChildElement, _________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", _________taxLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("taxLineDetail", ________taxLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                    BeanDefinitionBuilder ________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                    Element ________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                    if (________salesItemLineDetailChildElement!= null) {
                                                                        parseProperty(________salesItemLineDetailBuilder, ________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                        if (!parseObjectRef(________salesItemLineDetailChildElement, ________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                            BeanDefinitionBuilder __________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________itemRefChildElement = DomUtils.getChildElementByTagName(________salesItemLineDetailChildElement, "item-ref");
                                                                            if (__________itemRefChildElement!= null) {
                                                                                parseProperty(__________itemRefBuilder, __________itemRefChildElement, "value", "value");
                                                                                parseProperty(__________itemRefBuilder, __________itemRefChildElement, "name", "name");
                                                                                parseProperty(__________itemRefBuilder, __________itemRefChildElement, "type", "type");
                                                                                ________salesItemLineDetailBuilder.addPropertyValue("itemRef", __________itemRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesItemLineDetailChildElement, ________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                            BeanDefinitionBuilder __________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________classRefChildElement = DomUtils.getChildElementByTagName(________salesItemLineDetailChildElement, "class-ref");
                                                                            if (__________classRefChildElement!= null) {
                                                                                parseProperty(__________classRefBuilder, __________classRefChildElement, "value", "value");
                                                                                parseProperty(__________classRefBuilder, __________classRefChildElement, "name", "name");
                                                                                parseProperty(__________classRefBuilder, __________classRefChildElement, "type", "type");
                                                                                ________salesItemLineDetailBuilder.addPropertyValue("classRef", __________classRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________salesItemLineDetailBuilder, ________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                        parseProperty(________salesItemLineDetailBuilder, ________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                        if (!parseObjectRef(________salesItemLineDetailChildElement, ________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                            BeanDefinitionBuilder __________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________salesItemLineDetailChildElement, "price-level-ref");
                                                                            if (__________priceLevelRefChildElement!= null) {
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "value", "value");
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "name", "name");
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "type", "type");
                                                                                ________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", __________priceLevelRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesItemLineDetailChildElement, ________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                            BeanDefinitionBuilder __________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                            Element __________markupInfoChildElement = DomUtils.getChildElementByTagName(________salesItemLineDetailChildElement, "markup-info");
                                                                            if (__________markupInfoChildElement!= null) {
                                                                                parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percentBased", "percentBased");
                                                                                parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "value", "value");
                                                                                parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percent", "percent");
                                                                                if (!parseObjectRef(__________markupInfoChildElement, __________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                    BeanDefinitionBuilder ___________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________markupInfoChildElement, "price-level-ref");
                                                                                    if (___________priceLevelRefChildElement!= null) {
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "value", "value");
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "name", "name");
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "type", "type");
                                                                                        __________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________priceLevelRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                ________salesItemLineDetailBuilder.addPropertyValue("markupInfo", __________markupInfoBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________salesItemLineDetailBuilder, ________salesItemLineDetailChildElement, "qty", "qty");
                                                                        if (!parseObjectRef(________salesItemLineDetailChildElement, ________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                            BeanDefinitionBuilder __________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                            Element __________uomRefChildElement = DomUtils.getChildElementByTagName(________salesItemLineDetailChildElement, "uom-ref");
                                                                            if (__________uomRefChildElement!= null) {
                                                                                parseProperty(__________uomRefBuilder, __________uomRefChildElement, "unit", "unit");
                                                                                ________salesItemLineDetailBuilder.addPropertyValue("uomRef", __________uomRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesItemLineDetailChildElement, ________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                            BeanDefinitionBuilder __________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________itemAccountRefChildElement = DomUtils.getChildElementByTagName(________salesItemLineDetailChildElement, "item-account-ref");
                                                                            if (__________itemAccountRefChildElement!= null) {
                                                                                parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "value", "value");
                                                                                parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "name", "name");
                                                                                parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "type", "type");
                                                                                ________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", __________itemAccountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesItemLineDetailChildElement, ________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                            BeanDefinitionBuilder __________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                            if (__________inventorySiteRefChildElement!= null) {
                                                                                parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "value", "value");
                                                                                parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "name", "name");
                                                                                parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "type", "type");
                                                                                ________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", __________inventorySiteRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesItemLineDetailChildElement, ________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                            BeanDefinitionBuilder __________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________salesItemLineDetailChildElement, "tax-code-ref");
                                                                            if (__________taxCodeRefChildElement!= null) {
                                                                                parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "value", "value");
                                                                                parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "name", "name");
                                                                                parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "type", "type");
                                                                                ________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", __________taxCodeRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________salesItemLineDetailBuilder, ________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                        parseProperty(________salesItemLineDetailBuilder, ________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                        if (!parseObjectRef(________salesItemLineDetailChildElement, ________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                            if (_________salesItemLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________salesItemLineDetailExChildElement, _________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("salesItemLineDetail", ________salesItemLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                    BeanDefinitionBuilder ________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                    Element ________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                    if (________descriptionLineDetailChildElement!= null) {
                                                                        parseProperty(________descriptionLineDetailBuilder, ________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                        if (!parseObjectRef(________descriptionLineDetailChildElement, ________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                            BeanDefinitionBuilder _________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________descriptionLineDetailChildElement, "tax-code-ref");
                                                                            if (_________taxCodeRefChildElement!= null) {
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "value", "value");
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "name", "name");
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "type", "type");
                                                                                ________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", _________taxCodeRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________descriptionLineDetailChildElement, ________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                            if (_________descriptionLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________descriptionLineDetailExChildElement, _________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", _________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("descriptionLineDetail", ________descriptionLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                    BeanDefinitionBuilder ________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                    Element ________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                    if (________itemBasedExpenseLineDetailChildElement!= null) {
                                                                        parseProperty(________itemBasedExpenseLineDetailBuilder, ________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                            BeanDefinitionBuilder __________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________itemRefChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                            if (__________itemRefChildElement!= null) {
                                                                                parseProperty(__________itemRefBuilder, __________itemRefChildElement, "value", "value");
                                                                                parseProperty(__________itemRefBuilder, __________itemRefChildElement, "name", "name");
                                                                                parseProperty(__________itemRefBuilder, __________itemRefChildElement, "type", "type");
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", __________itemRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                            BeanDefinitionBuilder __________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________classRefChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                            if (__________classRefChildElement!= null) {
                                                                                parseProperty(__________classRefBuilder, __________classRefChildElement, "value", "value");
                                                                                parseProperty(__________classRefBuilder, __________classRefChildElement, "name", "name");
                                                                                parseProperty(__________classRefBuilder, __________classRefChildElement, "type", "type");
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", __________classRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________itemBasedExpenseLineDetailBuilder, ________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                        parseProperty(________itemBasedExpenseLineDetailBuilder, ________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                            BeanDefinitionBuilder __________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                            if (__________priceLevelRefChildElement!= null) {
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "value", "value");
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "name", "name");
                                                                                parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "type", "type");
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", __________priceLevelRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                            BeanDefinitionBuilder __________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                            Element __________markupInfoChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                            if (__________markupInfoChildElement!= null) {
                                                                                parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percentBased", "percentBased");
                                                                                parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "value", "value");
                                                                                parseProperty(__________markupInfoBuilder, __________markupInfoChildElement, "percent", "percent");
                                                                                if (!parseObjectRef(__________markupInfoChildElement, __________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                    BeanDefinitionBuilder ___________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ___________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________markupInfoChildElement, "price-level-ref");
                                                                                    if (___________priceLevelRefChildElement!= null) {
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "value", "value");
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "name", "name");
                                                                                        parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "type", "type");
                                                                                        __________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________priceLevelRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", __________markupInfoBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________itemBasedExpenseLineDetailBuilder, ________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                            BeanDefinitionBuilder __________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                            Element __________uomRefChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                            if (__________uomRefChildElement!= null) {
                                                                                parseProperty(__________uomRefBuilder, __________uomRefChildElement, "unit", "unit");
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", __________uomRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                            BeanDefinitionBuilder __________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________itemAccountRefChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                            if (__________itemAccountRefChildElement!= null) {
                                                                                parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "value", "value");
                                                                                parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "name", "name");
                                                                                parseProperty(__________itemAccountRefBuilder, __________itemAccountRefChildElement, "type", "type");
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", __________itemAccountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                            BeanDefinitionBuilder __________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                            if (__________inventorySiteRefChildElement!= null) {
                                                                                parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "value", "value");
                                                                                parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "name", "name");
                                                                                parseProperty(__________inventorySiteRefBuilder, __________inventorySiteRefChildElement, "type", "type");
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", __________inventorySiteRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                            BeanDefinitionBuilder __________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element __________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                            if (__________taxCodeRefChildElement!= null) {
                                                                                parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "value", "value");
                                                                                parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "name", "name");
                                                                                parseProperty(__________taxCodeRefBuilder, __________taxCodeRefChildElement, "type", "type");
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", __________taxCodeRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                            BeanDefinitionBuilder _________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________customerRefChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                            if (_________customerRefChildElement!= null) {
                                                                                parseProperty(_________customerRefBuilder, _________customerRefChildElement, "value", "value");
                                                                                parseProperty(_________customerRefBuilder, _________customerRefChildElement, "name", "name");
                                                                                parseProperty(_________customerRefBuilder, _________customerRefChildElement, "type", "type");
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _________customerRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________itemBasedExpenseLineDetailBuilder, ________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                        parseProperty(________itemBasedExpenseLineDetailBuilder, ________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                        if (!parseObjectRef(________itemBasedExpenseLineDetailChildElement, ________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                            if (_________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________itemBasedExpenseLineDetailExChildElement, _________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", _________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("itemBasedExpenseLineDetail", ________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                    BeanDefinitionBuilder ________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                    Element ________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                    if (________accountBasedExpenseLineDetailChildElement!= null) {
                                                                        if (!parseObjectRef(________accountBasedExpenseLineDetailChildElement, ________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                            BeanDefinitionBuilder _________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________customerRefChildElement = DomUtils.getChildElementByTagName(________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                            if (_________customerRefChildElement!= null) {
                                                                                parseProperty(_________customerRefBuilder, _________customerRefChildElement, "value", "value");
                                                                                parseProperty(_________customerRefBuilder, _________customerRefChildElement, "name", "name");
                                                                                parseProperty(_________customerRefBuilder, _________customerRefChildElement, "type", "type");
                                                                                ________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _________customerRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________accountBasedExpenseLineDetailChildElement, ________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                            BeanDefinitionBuilder _________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________classRefChildElement = DomUtils.getChildElementByTagName(________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                            if (_________classRefChildElement!= null) {
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "value", "value");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "name", "name");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "type", "type");
                                                                                ________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _________classRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________accountBasedExpenseLineDetailChildElement, ________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                            BeanDefinitionBuilder _________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________accountRefChildElement = DomUtils.getChildElementByTagName(________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                            if (_________accountRefChildElement!= null) {
                                                                                parseProperty(_________accountRefBuilder, _________accountRefChildElement, "value", "value");
                                                                                parseProperty(_________accountRefBuilder, _________accountRefChildElement, "name", "name");
                                                                                parseProperty(_________accountRefBuilder, _________accountRefChildElement, "type", "type");
                                                                                ________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", _________accountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________accountBasedExpenseLineDetailBuilder, ________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                        if (!parseObjectRef(________accountBasedExpenseLineDetailChildElement, ________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                            BeanDefinitionBuilder _________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                            Element _________markupInfoChildElement = DomUtils.getChildElementByTagName(________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                            if (_________markupInfoChildElement!= null) {
                                                                                parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percentBased", "percentBased");
                                                                                parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "value", "value");
                                                                                parseProperty(_________markupInfoBuilder, _________markupInfoChildElement, "percent", "percent");
                                                                                if (!parseObjectRef(_________markupInfoChildElement, _________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                    BeanDefinitionBuilder __________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________markupInfoChildElement, "price-level-ref");
                                                                                    if (__________priceLevelRefChildElement!= null) {
                                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "value", "value");
                                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "name", "name");
                                                                                        parseProperty(__________priceLevelRefBuilder, __________priceLevelRefChildElement, "type", "type");
                                                                                        _________markupInfoBuilder.addPropertyValue("priceLevelRef", __________priceLevelRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                ________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _________markupInfoBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________accountBasedExpenseLineDetailBuilder, ________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                        if (!parseObjectRef(________accountBasedExpenseLineDetailChildElement, ________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                            BeanDefinitionBuilder _________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                            if (_________taxCodeRefChildElement!= null) {
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "value", "value");
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "name", "name");
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "type", "type");
                                                                                ________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _________taxCodeRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________accountBasedExpenseLineDetailBuilder, ________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                        if (!parseObjectRef(________accountBasedExpenseLineDetailChildElement, ________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                            if (_________expenseDetailLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________expenseDetailLineDetailExChildElement, _________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", _________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("accountBasedExpenseLineDetail", ________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                    BeanDefinitionBuilder ________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                    Element ________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                    if (________depositLineDetailChildElement!= null) {
                                                                        if (!parseObjectRef(________depositLineDetailChildElement, ________depositLineDetailBuilder, "entity", "entity")) {
                                                                            BeanDefinitionBuilder _________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________entityChildElement = DomUtils.getChildElementByTagName(________depositLineDetailChildElement, "entity");
                                                                            if (_________entityChildElement!= null) {
                                                                                parseProperty(_________entityBuilder, _________entityChildElement, "value", "value");
                                                                                parseProperty(_________entityBuilder, _________entityChildElement, "name", "name");
                                                                                parseProperty(_________entityBuilder, _________entityChildElement, "type", "type");
                                                                                ________depositLineDetailBuilder.addPropertyValue("entity", _________entityBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________depositLineDetailChildElement, ________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                            BeanDefinitionBuilder _________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________classRefChildElement = DomUtils.getChildElementByTagName(________depositLineDetailChildElement, "class-ref");
                                                                            if (_________classRefChildElement!= null) {
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "value", "value");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "name", "name");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "type", "type");
                                                                                ________depositLineDetailBuilder.addPropertyValue("classRef", _________classRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________depositLineDetailChildElement, ________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                            BeanDefinitionBuilder _________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________accountRefChildElement = DomUtils.getChildElementByTagName(________depositLineDetailChildElement, "account-ref");
                                                                            if (_________accountRefChildElement!= null) {
                                                                                parseProperty(_________accountRefBuilder, _________accountRefChildElement, "value", "value");
                                                                                parseProperty(_________accountRefBuilder, _________accountRefChildElement, "name", "name");
                                                                                parseProperty(_________accountRefBuilder, _________accountRefChildElement, "type", "type");
                                                                                ________depositLineDetailBuilder.addPropertyValue("accountRef", _________accountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________depositLineDetailChildElement, ________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                            BeanDefinitionBuilder _________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(________depositLineDetailChildElement, "payment-method-ref");
                                                                            if (_________paymentMethodRefChildElement!= null) {
                                                                                parseProperty(_________paymentMethodRefBuilder, _________paymentMethodRefChildElement, "value", "value");
                                                                                parseProperty(_________paymentMethodRefBuilder, _________paymentMethodRefChildElement, "name", "name");
                                                                                parseProperty(_________paymentMethodRefBuilder, _________paymentMethodRefChildElement, "type", "type");
                                                                                ________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", _________paymentMethodRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________depositLineDetailBuilder, ________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                        parseProperty(________depositLineDetailBuilder, ________depositLineDetailChildElement, "txnType", "txnType");
                                                                        if (!parseObjectRef(________depositLineDetailChildElement, ________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                            if (_________depositLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________depositLineDetailExChildElement, _________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", _________depositLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("depositLineDetail", ________depositLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                    BeanDefinitionBuilder ________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                    Element ________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                    if (________purchaseOrderItemLineDetailChildElement!= null) {
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                            BeanDefinitionBuilder __________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element __________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                            if (__________salesItemLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(__________salesItemLineDetailExChildElement, __________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", __________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                            BeanDefinitionBuilder ___________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________itemRefChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                            if (___________itemRefChildElement!= null) {
                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "value", "value");
                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "name", "name");
                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "type", "type");
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", ___________itemRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                            BeanDefinitionBuilder ___________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________classRefChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                            if (___________classRefChildElement!= null) {
                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "value", "value");
                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "name", "name");
                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "type", "type");
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", ___________classRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                            BeanDefinitionBuilder ___________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                            if (___________priceLevelRefChildElement!= null) {
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "value", "value");
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "name", "name");
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "type", "type");
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ___________priceLevelRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                            BeanDefinitionBuilder ___________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                            Element ___________markupInfoChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                            if (___________markupInfoChildElement!= null) {
                                                                                parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percentBased", "percentBased");
                                                                                parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "value", "value");
                                                                                parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percent", "percent");
                                                                                if (!parseObjectRef(___________markupInfoChildElement, ___________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                    BeanDefinitionBuilder ____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________markupInfoChildElement, "price-level-ref");
                                                                                    if (____________priceLevelRefChildElement!= null) {
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "value", "value");
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "name", "name");
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "type", "type");
                                                                                        ___________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________priceLevelRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ___________markupInfoBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                            BeanDefinitionBuilder ___________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                            Element ___________uomRefChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                            if (___________uomRefChildElement!= null) {
                                                                                parseProperty(___________uomRefBuilder, ___________uomRefChildElement, "unit", "unit");
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", ___________uomRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                            BeanDefinitionBuilder ___________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________itemAccountRefChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                            if (___________itemAccountRefChildElement!= null) {
                                                                                parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "value", "value");
                                                                                parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "name", "name");
                                                                                parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "type", "type");
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ___________itemAccountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                            BeanDefinitionBuilder ___________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                            if (___________inventorySiteRefChildElement!= null) {
                                                                                parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "value", "value");
                                                                                parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "name", "name");
                                                                                parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "type", "type");
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ___________inventorySiteRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                            BeanDefinitionBuilder ___________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                            if (___________taxCodeRefChildElement!= null) {
                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "value", "value");
                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "name", "name");
                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "type", "type");
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ___________taxCodeRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                        parseProperty(________purchaseOrderItemLineDetailBuilder, ________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                        if (!parseObjectRef(________purchaseOrderItemLineDetailChildElement, ________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                            if (_________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________purchaseOrderItemLineDetailExChildElement, _________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", _________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("purchaseOrderItemLineDetail", ________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                    BeanDefinitionBuilder ________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                    Element ________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                    if (________salesOrderItemLineDetailChildElement!= null) {
                                                                        parseProperty(________salesOrderItemLineDetailBuilder, ________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                        parseProperty(________salesOrderItemLineDetailBuilder, ________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                        parseProperty(________salesOrderItemLineDetailBuilder, ________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                        if (!parseObjectRef(________salesOrderItemLineDetailChildElement, ________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                            BeanDefinitionBuilder __________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element __________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                            if (__________salesItemLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(__________salesItemLineDetailExChildElement, __________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", __________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________salesOrderItemLineDetailBuilder, ________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                        if (!parseObjectRef(________salesOrderItemLineDetailChildElement, ________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                            BeanDefinitionBuilder ___________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________itemRefChildElement = DomUtils.getChildElementByTagName(________salesOrderItemLineDetailChildElement, "item-ref");
                                                                            if (___________itemRefChildElement!= null) {
                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "value", "value");
                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "name", "name");
                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "type", "type");
                                                                                ________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", ___________itemRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesOrderItemLineDetailChildElement, ________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                            BeanDefinitionBuilder ___________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________classRefChildElement = DomUtils.getChildElementByTagName(________salesOrderItemLineDetailChildElement, "class-ref");
                                                                            if (___________classRefChildElement!= null) {
                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "value", "value");
                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "name", "name");
                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "type", "type");
                                                                                ________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", ___________classRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________salesOrderItemLineDetailBuilder, ________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                        parseProperty(________salesOrderItemLineDetailBuilder, ________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                        if (!parseObjectRef(________salesOrderItemLineDetailChildElement, ________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                            BeanDefinitionBuilder ___________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                            if (___________priceLevelRefChildElement!= null) {
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "value", "value");
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "name", "name");
                                                                                parseProperty(___________priceLevelRefBuilder, ___________priceLevelRefChildElement, "type", "type");
                                                                                ________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ___________priceLevelRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesOrderItemLineDetailChildElement, ________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                            BeanDefinitionBuilder ___________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                            Element ___________markupInfoChildElement = DomUtils.getChildElementByTagName(________salesOrderItemLineDetailChildElement, "markup-info");
                                                                            if (___________markupInfoChildElement!= null) {
                                                                                parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percentBased", "percentBased");
                                                                                parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "value", "value");
                                                                                parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percent", "percent");
                                                                                if (!parseObjectRef(___________markupInfoChildElement, ___________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                    BeanDefinitionBuilder ____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element ____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________markupInfoChildElement, "price-level-ref");
                                                                                    if (____________priceLevelRefChildElement!= null) {
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "value", "value");
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "name", "name");
                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "type", "type");
                                                                                        ___________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________priceLevelRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                ________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ___________markupInfoBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________salesOrderItemLineDetailBuilder, ________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                        if (!parseObjectRef(________salesOrderItemLineDetailChildElement, ________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                            BeanDefinitionBuilder ___________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                            Element ___________uomRefChildElement = DomUtils.getChildElementByTagName(________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                            if (___________uomRefChildElement!= null) {
                                                                                parseProperty(___________uomRefBuilder, ___________uomRefChildElement, "unit", "unit");
                                                                                ________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", ___________uomRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesOrderItemLineDetailChildElement, ________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                            BeanDefinitionBuilder ___________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________itemAccountRefChildElement = DomUtils.getChildElementByTagName(________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                            if (___________itemAccountRefChildElement!= null) {
                                                                                parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "value", "value");
                                                                                parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "name", "name");
                                                                                parseProperty(___________itemAccountRefBuilder, ___________itemAccountRefChildElement, "type", "type");
                                                                                ________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ___________itemAccountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesOrderItemLineDetailChildElement, ________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                            BeanDefinitionBuilder ___________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                            if (___________inventorySiteRefChildElement!= null) {
                                                                                parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "value", "value");
                                                                                parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "name", "name");
                                                                                parseProperty(___________inventorySiteRefBuilder, ___________inventorySiteRefChildElement, "type", "type");
                                                                                ________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ___________inventorySiteRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________salesOrderItemLineDetailChildElement, ________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                            BeanDefinitionBuilder ___________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element ___________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                            if (___________taxCodeRefChildElement!= null) {
                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "value", "value");
                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "name", "name");
                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "type", "type");
                                                                                ________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ___________taxCodeRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________salesOrderItemLineDetailBuilder, ________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                        builder.addPropertyValue("salesOrderItemLineDetail", ________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                    BeanDefinitionBuilder ________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                    Element ________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                    if (________itemReceiptLineDetailChildElement!= null) {
                                                                        if (!parseObjectRef(________itemReceiptLineDetailChildElement, ________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                            if (_________itemReceiptLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________itemReceiptLineDetailExChildElement, _________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", _________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("itemReceiptLineDetail", ________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                    BeanDefinitionBuilder ________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                    Element ________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                    if (________journalEntryLineDetailChildElement!= null) {
                                                                        parseProperty(________journalEntryLineDetailBuilder, ________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                        if (!parseObjectRef(________journalEntryLineDetailChildElement, ________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                            BeanDefinitionBuilder _________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                            Element _________entityChildElement = DomUtils.getChildElementByTagName(________journalEntryLineDetailChildElement, "entity");
                                                                            if (_________entityChildElement!= null) {
                                                                                parseProperty(_________entityBuilder, _________entityChildElement, "type", "type");
                                                                                if (!parseObjectRef(_________entityChildElement, _________entityBuilder, "entity-ref", "entityRef")) {
                                                                                    BeanDefinitionBuilder __________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                    Element __________entityRefChildElement = DomUtils.getChildElementByTagName(_________entityChildElement, "entity-ref");
                                                                                    if (__________entityRefChildElement!= null) {
                                                                                        parseProperty(__________entityRefBuilder, __________entityRefChildElement, "value", "value");
                                                                                        parseProperty(__________entityRefBuilder, __________entityRefChildElement, "name", "name");
                                                                                        parseProperty(__________entityRefBuilder, __________entityRefChildElement, "type", "type");
                                                                                        _________entityBuilder.addPropertyValue("entityRef", __________entityRefBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                ________journalEntryLineDetailBuilder.addPropertyValue("entity", _________entityBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________journalEntryLineDetailChildElement, ________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                            BeanDefinitionBuilder _________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________accountRefChildElement = DomUtils.getChildElementByTagName(________journalEntryLineDetailChildElement, "account-ref");
                                                                            if (_________accountRefChildElement!= null) {
                                                                                parseProperty(_________accountRefBuilder, _________accountRefChildElement, "value", "value");
                                                                                parseProperty(_________accountRefBuilder, _________accountRefChildElement, "name", "name");
                                                                                parseProperty(_________accountRefBuilder, _________accountRefChildElement, "type", "type");
                                                                                ________journalEntryLineDetailBuilder.addPropertyValue("accountRef", _________accountRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________journalEntryLineDetailChildElement, ________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                            BeanDefinitionBuilder _________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________classRefChildElement = DomUtils.getChildElementByTagName(________journalEntryLineDetailChildElement, "class-ref");
                                                                            if (_________classRefChildElement!= null) {
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "value", "value");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "name", "name");
                                                                                parseProperty(_________classRefBuilder, _________classRefChildElement, "type", "type");
                                                                                ________journalEntryLineDetailBuilder.addPropertyValue("classRef", _________classRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________journalEntryLineDetailChildElement, ________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                            BeanDefinitionBuilder _________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________departmentRefChildElement = DomUtils.getChildElementByTagName(________journalEntryLineDetailChildElement, "department-ref");
                                                                            if (_________departmentRefChildElement!= null) {
                                                                                parseProperty(_________departmentRefBuilder, _________departmentRefChildElement, "value", "value");
                                                                                parseProperty(_________departmentRefBuilder, _________departmentRefChildElement, "name", "name");
                                                                                parseProperty(_________departmentRefBuilder, _________departmentRefChildElement, "type", "type");
                                                                                ________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", _________departmentRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        if (!parseObjectRef(________journalEntryLineDetailChildElement, ________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                            BeanDefinitionBuilder _________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                            if (_________taxCodeRefChildElement!= null) {
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "value", "value");
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "name", "name");
                                                                                parseProperty(_________taxCodeRefBuilder, _________taxCodeRefChildElement, "type", "type");
                                                                                ________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", _________taxCodeRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________journalEntryLineDetailBuilder, ________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                        parseProperty(________journalEntryLineDetailBuilder, ________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                        parseProperty(________journalEntryLineDetailBuilder, ________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                        if (!parseObjectRef(________journalEntryLineDetailChildElement, ________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                            if (_________journalEntryLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________journalEntryLineDetailExChildElement, _________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", _________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("journalEntryLineDetail", ________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                    BeanDefinitionBuilder ________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                    Element ________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                    if (________groupLineDetailChildElement!= null) {
                                                                        if (!parseObjectRef(________groupLineDetailChildElement, ________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                            BeanDefinitionBuilder _________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________groupItemRefChildElement = DomUtils.getChildElementByTagName(________groupLineDetailChildElement, "group-item-ref");
                                                                            if (_________groupItemRefChildElement!= null) {
                                                                                parseProperty(_________groupItemRefBuilder, _________groupItemRefChildElement, "value", "value");
                                                                                parseProperty(_________groupItemRefBuilder, _________groupItemRefChildElement, "name", "name");
                                                                                parseProperty(_________groupItemRefBuilder, _________groupItemRefChildElement, "type", "type");
                                                                                ________groupLineDetailBuilder.addPropertyValue("groupItemRef", _________groupItemRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________groupLineDetailBuilder, ________groupLineDetailChildElement, "quantity", "quantity");
                                                                        parseProperty(________groupLineDetailBuilder, ________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                        parseListAndSetProperty(________groupLineDetailChildElement, ________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                            public BeanDefinition parse(Element element) {
                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                parseProperty(builder, element, "id", "id");
                                                                                parseProperty(builder, element, "lineNum", "lineNum");
                                                                                parseProperty(builder, element, "description", "description");
                                                                                parseProperty(builder, element, "amount", "amount");
                                                                                parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                    public BeanDefinition parse(Element element) {
                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                        parseProperty(builder, element, "txnId", "txnId");
                                                                                        parseProperty(builder, element, "txnType", "txnType");
                                                                                        parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                        return builder.getBeanDefinition();
                                                                                    }

                                                                                }
                                                                                );
                                                                                parseProperty(builder, element, "detailType", "detailType");
                                                                                if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                    BeanDefinitionBuilder __________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                    Element __________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                    if (__________paymentLineDetailChildElement!= null) {
                                                                                        if (!parseObjectRef(__________paymentLineDetailChildElement, __________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                            BeanDefinitionBuilder ___________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________itemRefChildElement = DomUtils.getChildElementByTagName(__________paymentLineDetailChildElement, "item-ref");
                                                                                            if (___________itemRefChildElement!= null) {
                                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "value", "value");
                                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "name", "name");
                                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "type", "type");
                                                                                                __________paymentLineDetailBuilder.addPropertyValue("itemRef", ___________itemRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________paymentLineDetailBuilder, __________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                        if (!parseObjectRef(__________paymentLineDetailChildElement, __________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                            BeanDefinitionBuilder ___________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________classRefChildElement = DomUtils.getChildElementByTagName(__________paymentLineDetailChildElement, "class-ref");
                                                                                            if (___________classRefChildElement!= null) {
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "value", "value");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "name", "name");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "type", "type");
                                                                                                __________paymentLineDetailBuilder.addPropertyValue("classRef", ___________classRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________paymentLineDetailBuilder, __________paymentLineDetailChildElement, "balance", "balance");
                                                                                        if (!parseObjectRef(__________paymentLineDetailChildElement, __________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                            BeanDefinitionBuilder ___________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                            Element ___________discountChildElement = DomUtils.getChildElementByTagName(__________paymentLineDetailChildElement, "discount");
                                                                                            if (___________discountChildElement!= null) {
                                                                                                if (!parseObjectRef(___________discountChildElement, ___________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                    BeanDefinitionBuilder ____________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________discountRefChildElement = DomUtils.getChildElementByTagName(___________discountChildElement, "discount-ref");
                                                                                                    if (____________discountRefChildElement!= null) {
                                                                                                        parseProperty(____________discountRefBuilder, ____________discountRefChildElement, "value", "value");
                                                                                                        parseProperty(____________discountRefBuilder, ____________discountRefChildElement, "name", "name");
                                                                                                        parseProperty(____________discountRefBuilder, ____________discountRefChildElement, "type", "type");
                                                                                                        ___________discountBuilder.addPropertyValue("discountRef", ____________discountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseProperty(___________discountBuilder, ___________discountChildElement, "percentBased", "percentBased");
                                                                                                parseProperty(___________discountBuilder, ___________discountChildElement, "discountPercent", "discountPercent");
                                                                                                if (!parseObjectRef(___________discountChildElement, ___________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                    BeanDefinitionBuilder ____________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________discountAccountRefChildElement = DomUtils.getChildElementByTagName(___________discountChildElement, "discount-account-ref");
                                                                                                    if (____________discountAccountRefChildElement!= null) {
                                                                                                        parseProperty(____________discountAccountRefBuilder, ____________discountAccountRefChildElement, "value", "value");
                                                                                                        parseProperty(____________discountAccountRefBuilder, ____________discountAccountRefChildElement, "name", "name");
                                                                                                        parseProperty(____________discountAccountRefBuilder, ____________discountAccountRefChildElement, "type", "type");
                                                                                                        ___________discountBuilder.addPropertyValue("discountAccountRef", ____________discountAccountRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                __________paymentLineDetailBuilder.addPropertyValue("discount", ___________discountBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________paymentLineDetailChildElement, __________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                            BeanDefinitionBuilder ___________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________paymentLineExChildElement = DomUtils.getChildElementByTagName(__________paymentLineDetailChildElement, "payment-line-ex");
                                                                                            if (___________paymentLineExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________paymentLineExChildElement, ___________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", ___________paymentLineExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("paymentLineDetail", __________paymentLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                    BeanDefinitionBuilder __________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                    Element __________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                    if (__________discountLineDetailChildElement!= null) {
                                                                                        parseProperty(__________discountLineDetailBuilder, __________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                        if (!parseObjectRef(__________discountLineDetailChildElement, __________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                            BeanDefinitionBuilder ____________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________discountRefChildElement = DomUtils.getChildElementByTagName(__________discountLineDetailChildElement, "discount-ref");
                                                                                            if (____________discountRefChildElement!= null) {
                                                                                                parseProperty(____________discountRefBuilder, ____________discountRefChildElement, "value", "value");
                                                                                                parseProperty(____________discountRefBuilder, ____________discountRefChildElement, "name", "name");
                                                                                                parseProperty(____________discountRefBuilder, ____________discountRefChildElement, "type", "type");
                                                                                                __________discountLineDetailBuilder.addPropertyValue("discountRef", ____________discountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________discountLineDetailBuilder, __________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                        parseProperty(__________discountLineDetailBuilder, __________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                        if (!parseObjectRef(__________discountLineDetailChildElement, __________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                            BeanDefinitionBuilder ____________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________discountAccountRefChildElement = DomUtils.getChildElementByTagName(__________discountLineDetailChildElement, "discount-account-ref");
                                                                                            if (____________discountAccountRefChildElement!= null) {
                                                                                                parseProperty(____________discountAccountRefBuilder, ____________discountAccountRefChildElement, "value", "value");
                                                                                                parseProperty(____________discountAccountRefBuilder, ____________discountAccountRefChildElement, "name", "name");
                                                                                                parseProperty(____________discountAccountRefBuilder, ____________discountAccountRefChildElement, "type", "type");
                                                                                                __________discountLineDetailBuilder.addPropertyValue("discountAccountRef", ____________discountAccountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________discountLineDetailBuilder, __________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                        if (!parseObjectRef(__________discountLineDetailChildElement, __________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                            BeanDefinitionBuilder ___________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________classRefChildElement = DomUtils.getChildElementByTagName(__________discountLineDetailChildElement, "class-ref");
                                                                                            if (___________classRefChildElement!= null) {
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "value", "value");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "name", "name");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "type", "type");
                                                                                                __________discountLineDetailBuilder.addPropertyValue("classRef", ___________classRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________discountLineDetailChildElement, __________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                            BeanDefinitionBuilder ___________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________discountLineDetailChildElement, "tax-code-ref");
                                                                                            if (___________taxCodeRefChildElement!= null) {
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "value", "value");
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "name", "name");
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "type", "type");
                                                                                                __________discountLineDetailBuilder.addPropertyValue("taxCodeRef", ___________taxCodeRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________discountLineDetailChildElement, __________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(__________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                            if (___________discountLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________discountLineDetailExChildElement, ___________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", ___________discountLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("discountLineDetail", __________discountLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                    BeanDefinitionBuilder __________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                    Element __________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                    if (__________taxLineDetailChildElement!= null) {
                                                                                        if (!parseObjectRef(__________taxLineDetailChildElement, __________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                            BeanDefinitionBuilder ___________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________taxRateRefChildElement = DomUtils.getChildElementByTagName(__________taxLineDetailChildElement, "tax-rate-ref");
                                                                                            if (___________taxRateRefChildElement!= null) {
                                                                                                parseProperty(___________taxRateRefBuilder, ___________taxRateRefChildElement, "value", "value");
                                                                                                parseProperty(___________taxRateRefBuilder, ___________taxRateRefChildElement, "name", "name");
                                                                                                parseProperty(___________taxRateRefBuilder, ___________taxRateRefChildElement, "type", "type");
                                                                                                __________taxLineDetailBuilder.addPropertyValue("taxRateRef", ___________taxRateRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________taxLineDetailBuilder, __________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                        parseProperty(__________taxLineDetailBuilder, __________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                        parseProperty(__________taxLineDetailBuilder, __________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                        parseProperty(__________taxLineDetailBuilder, __________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                        parseProperty(__________taxLineDetailBuilder, __________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                        parseProperty(__________taxLineDetailBuilder, __________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                        if (!parseObjectRef(__________taxLineDetailChildElement, __________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(__________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                            if (___________taxLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________taxLineDetailExChildElement, ___________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", ___________taxLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("taxLineDetail", __________taxLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                    BeanDefinitionBuilder __________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                    Element __________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                    if (__________salesItemLineDetailChildElement!= null) {
                                                                                        parseProperty(__________salesItemLineDetailBuilder, __________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                        if (!parseObjectRef(__________salesItemLineDetailChildElement, __________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                            BeanDefinitionBuilder ____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________itemRefChildElement = DomUtils.getChildElementByTagName(__________salesItemLineDetailChildElement, "item-ref");
                                                                                            if (____________itemRefChildElement!= null) {
                                                                                                parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "value", "value");
                                                                                                parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "name", "name");
                                                                                                parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "type", "type");
                                                                                                __________salesItemLineDetailBuilder.addPropertyValue("itemRef", ____________itemRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesItemLineDetailChildElement, __________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                            BeanDefinitionBuilder ____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________classRefChildElement = DomUtils.getChildElementByTagName(__________salesItemLineDetailChildElement, "class-ref");
                                                                                            if (____________classRefChildElement!= null) {
                                                                                                parseProperty(____________classRefBuilder, ____________classRefChildElement, "value", "value");
                                                                                                parseProperty(____________classRefBuilder, ____________classRefChildElement, "name", "name");
                                                                                                parseProperty(____________classRefBuilder, ____________classRefChildElement, "type", "type");
                                                                                                __________salesItemLineDetailBuilder.addPropertyValue("classRef", ____________classRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________salesItemLineDetailBuilder, __________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                        parseProperty(__________salesItemLineDetailBuilder, __________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                        if (!parseObjectRef(__________salesItemLineDetailChildElement, __________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                            BeanDefinitionBuilder ____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________salesItemLineDetailChildElement, "price-level-ref");
                                                                                            if (____________priceLevelRefChildElement!= null) {
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "value", "value");
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "name", "name");
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "type", "type");
                                                                                                __________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", ____________priceLevelRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesItemLineDetailChildElement, __________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                            BeanDefinitionBuilder ____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                            Element ____________markupInfoChildElement = DomUtils.getChildElementByTagName(__________salesItemLineDetailChildElement, "markup-info");
                                                                                            if (____________markupInfoChildElement!= null) {
                                                                                                parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "value", "value");
                                                                                                parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percent", "percent");
                                                                                                if (!parseObjectRef(____________markupInfoChildElement, ____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                    BeanDefinitionBuilder _____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________markupInfoChildElement, "price-level-ref");
                                                                                                    if (_____________priceLevelRefChildElement!= null) {
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "type", "type");
                                                                                                        ____________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________priceLevelRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                __________salesItemLineDetailBuilder.addPropertyValue("markupInfo", ____________markupInfoBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________salesItemLineDetailBuilder, __________salesItemLineDetailChildElement, "qty", "qty");
                                                                                        if (!parseObjectRef(__________salesItemLineDetailChildElement, __________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                            BeanDefinitionBuilder ____________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                            Element ____________uomRefChildElement = DomUtils.getChildElementByTagName(__________salesItemLineDetailChildElement, "uom-ref");
                                                                                            if (____________uomRefChildElement!= null) {
                                                                                                parseProperty(____________uomRefBuilder, ____________uomRefChildElement, "unit", "unit");
                                                                                                __________salesItemLineDetailBuilder.addPropertyValue("uomRef", ____________uomRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesItemLineDetailChildElement, __________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                            BeanDefinitionBuilder ____________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________itemAccountRefChildElement = DomUtils.getChildElementByTagName(__________salesItemLineDetailChildElement, "item-account-ref");
                                                                                            if (____________itemAccountRefChildElement!= null) {
                                                                                                parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "value", "value");
                                                                                                parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "name", "name");
                                                                                                parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "type", "type");
                                                                                                __________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", ____________itemAccountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesItemLineDetailChildElement, __________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                            BeanDefinitionBuilder ____________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(__________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                            if (____________inventorySiteRefChildElement!= null) {
                                                                                                parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "value", "value");
                                                                                                parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "name", "name");
                                                                                                parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "type", "type");
                                                                                                __________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ____________inventorySiteRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesItemLineDetailChildElement, __________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                            BeanDefinitionBuilder ____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                            if (____________taxCodeRefChildElement!= null) {
                                                                                                parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "value", "value");
                                                                                                parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "name", "name");
                                                                                                parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "type", "type");
                                                                                                __________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", ____________taxCodeRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________salesItemLineDetailBuilder, __________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                        parseProperty(__________salesItemLineDetailBuilder, __________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                        if (!parseObjectRef(__________salesItemLineDetailChildElement, __________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(__________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                            if (___________salesItemLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________salesItemLineDetailExChildElement, ___________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ___________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("salesItemLineDetail", __________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                    BeanDefinitionBuilder __________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                    Element __________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                    if (__________descriptionLineDetailChildElement!= null) {
                                                                                        parseProperty(__________descriptionLineDetailBuilder, __________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                        if (!parseObjectRef(__________descriptionLineDetailChildElement, __________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                            BeanDefinitionBuilder ___________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                            if (___________taxCodeRefChildElement!= null) {
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "value", "value");
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "name", "name");
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "type", "type");
                                                                                                __________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", ___________taxCodeRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________descriptionLineDetailChildElement, __________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(__________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                            if (___________descriptionLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________descriptionLineDetailExChildElement, ___________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", ___________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("descriptionLineDetail", __________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                    BeanDefinitionBuilder __________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                    Element __________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                    if (__________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                        parseProperty(__________itemBasedExpenseLineDetailBuilder, __________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                            BeanDefinitionBuilder ____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________itemRefChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                            if (____________itemRefChildElement!= null) {
                                                                                                parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "value", "value");
                                                                                                parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "name", "name");
                                                                                                parseProperty(____________itemRefBuilder, ____________itemRefChildElement, "type", "type");
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", ____________itemRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                            BeanDefinitionBuilder ____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________classRefChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                            if (____________classRefChildElement!= null) {
                                                                                                parseProperty(____________classRefBuilder, ____________classRefChildElement, "value", "value");
                                                                                                parseProperty(____________classRefBuilder, ____________classRefChildElement, "name", "name");
                                                                                                parseProperty(____________classRefBuilder, ____________classRefChildElement, "type", "type");
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ____________classRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________itemBasedExpenseLineDetailBuilder, __________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                        parseProperty(__________itemBasedExpenseLineDetailBuilder, __________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                            BeanDefinitionBuilder ____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                            if (____________priceLevelRefChildElement!= null) {
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "value", "value");
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "name", "name");
                                                                                                parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "type", "type");
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", ____________priceLevelRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                            BeanDefinitionBuilder ____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                            Element ____________markupInfoChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                            if (____________markupInfoChildElement!= null) {
                                                                                                parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "value", "value");
                                                                                                parseProperty(____________markupInfoBuilder, ____________markupInfoChildElement, "percent", "percent");
                                                                                                if (!parseObjectRef(____________markupInfoChildElement, ____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                    BeanDefinitionBuilder _____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element _____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________markupInfoChildElement, "price-level-ref");
                                                                                                    if (_____________priceLevelRefChildElement!= null) {
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "value", "value");
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "name", "name");
                                                                                                        parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "type", "type");
                                                                                                        ____________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________priceLevelRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ____________markupInfoBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________itemBasedExpenseLineDetailBuilder, __________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                            BeanDefinitionBuilder ____________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                            Element ____________uomRefChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                            if (____________uomRefChildElement!= null) {
                                                                                                parseProperty(____________uomRefBuilder, ____________uomRefChildElement, "unit", "unit");
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", ____________uomRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                            BeanDefinitionBuilder ____________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________itemAccountRefChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                            if (____________itemAccountRefChildElement!= null) {
                                                                                                parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "value", "value");
                                                                                                parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "name", "name");
                                                                                                parseProperty(____________itemAccountRefBuilder, ____________itemAccountRefChildElement, "type", "type");
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", ____________itemAccountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                            BeanDefinitionBuilder ____________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                            if (____________inventorySiteRefChildElement!= null) {
                                                                                                parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "value", "value");
                                                                                                parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "name", "name");
                                                                                                parseProperty(____________inventorySiteRefBuilder, ____________inventorySiteRefChildElement, "type", "type");
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", ____________inventorySiteRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                            BeanDefinitionBuilder ____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                            if (____________taxCodeRefChildElement!= null) {
                                                                                                parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "value", "value");
                                                                                                parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "name", "name");
                                                                                                parseProperty(____________taxCodeRefBuilder, ____________taxCodeRefChildElement, "type", "type");
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ____________taxCodeRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                            BeanDefinitionBuilder ___________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________customerRefChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                            if (___________customerRefChildElement!= null) {
                                                                                                parseProperty(___________customerRefBuilder, ___________customerRefChildElement, "value", "value");
                                                                                                parseProperty(___________customerRefBuilder, ___________customerRefChildElement, "name", "name");
                                                                                                parseProperty(___________customerRefBuilder, ___________customerRefChildElement, "type", "type");
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ___________customerRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________itemBasedExpenseLineDetailBuilder, __________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                        parseProperty(__________itemBasedExpenseLineDetailBuilder, __________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                        if (!parseObjectRef(__________itemBasedExpenseLineDetailChildElement, __________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(__________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                            if (___________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________itemBasedExpenseLineDetailExChildElement, ___________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", ___________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("itemBasedExpenseLineDetail", __________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                    BeanDefinitionBuilder __________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                    Element __________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                    if (__________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                        if (!parseObjectRef(__________accountBasedExpenseLineDetailChildElement, __________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                            BeanDefinitionBuilder ___________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________customerRefChildElement = DomUtils.getChildElementByTagName(__________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                            if (___________customerRefChildElement!= null) {
                                                                                                parseProperty(___________customerRefBuilder, ___________customerRefChildElement, "value", "value");
                                                                                                parseProperty(___________customerRefBuilder, ___________customerRefChildElement, "name", "name");
                                                                                                parseProperty(___________customerRefBuilder, ___________customerRefChildElement, "type", "type");
                                                                                                __________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ___________customerRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________accountBasedExpenseLineDetailChildElement, __________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                            BeanDefinitionBuilder ___________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________classRefChildElement = DomUtils.getChildElementByTagName(__________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                            if (___________classRefChildElement!= null) {
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "value", "value");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "name", "name");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "type", "type");
                                                                                                __________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ___________classRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________accountBasedExpenseLineDetailChildElement, __________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                            BeanDefinitionBuilder ___________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________accountRefChildElement = DomUtils.getChildElementByTagName(__________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                            if (___________accountRefChildElement!= null) {
                                                                                                parseProperty(___________accountRefBuilder, ___________accountRefChildElement, "value", "value");
                                                                                                parseProperty(___________accountRefBuilder, ___________accountRefChildElement, "name", "name");
                                                                                                parseProperty(___________accountRefBuilder, ___________accountRefChildElement, "type", "type");
                                                                                                __________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", ___________accountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________accountBasedExpenseLineDetailBuilder, __________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                        if (!parseObjectRef(__________accountBasedExpenseLineDetailChildElement, __________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                            BeanDefinitionBuilder ___________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                            Element ___________markupInfoChildElement = DomUtils.getChildElementByTagName(__________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                            if (___________markupInfoChildElement!= null) {
                                                                                                parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "value", "value");
                                                                                                parseProperty(___________markupInfoBuilder, ___________markupInfoChildElement, "percent", "percent");
                                                                                                if (!parseObjectRef(___________markupInfoChildElement, ___________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                    BeanDefinitionBuilder ____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________markupInfoChildElement, "price-level-ref");
                                                                                                    if (____________priceLevelRefChildElement!= null) {
                                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "value", "value");
                                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "name", "name");
                                                                                                        parseProperty(____________priceLevelRefBuilder, ____________priceLevelRefChildElement, "type", "type");
                                                                                                        ___________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________priceLevelRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                __________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ___________markupInfoBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________accountBasedExpenseLineDetailBuilder, __________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                        if (!parseObjectRef(__________accountBasedExpenseLineDetailChildElement, __________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                            BeanDefinitionBuilder ___________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                            if (___________taxCodeRefChildElement!= null) {
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "value", "value");
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "name", "name");
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "type", "type");
                                                                                                __________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ___________taxCodeRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________accountBasedExpenseLineDetailBuilder, __________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                        if (!parseObjectRef(__________accountBasedExpenseLineDetailChildElement, __________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(__________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                            if (___________expenseDetailLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________expenseDetailLineDetailExChildElement, ___________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", ___________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("accountBasedExpenseLineDetail", __________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                    BeanDefinitionBuilder __________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                    Element __________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                    if (__________depositLineDetailChildElement!= null) {
                                                                                        if (!parseObjectRef(__________depositLineDetailChildElement, __________depositLineDetailBuilder, "entity", "entity")) {
                                                                                            BeanDefinitionBuilder ___________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________entityChildElement = DomUtils.getChildElementByTagName(__________depositLineDetailChildElement, "entity");
                                                                                            if (___________entityChildElement!= null) {
                                                                                                parseProperty(___________entityBuilder, ___________entityChildElement, "value", "value");
                                                                                                parseProperty(___________entityBuilder, ___________entityChildElement, "name", "name");
                                                                                                parseProperty(___________entityBuilder, ___________entityChildElement, "type", "type");
                                                                                                __________depositLineDetailBuilder.addPropertyValue("entity", ___________entityBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________depositLineDetailChildElement, __________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                            BeanDefinitionBuilder ___________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________classRefChildElement = DomUtils.getChildElementByTagName(__________depositLineDetailChildElement, "class-ref");
                                                                                            if (___________classRefChildElement!= null) {
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "value", "value");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "name", "name");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "type", "type");
                                                                                                __________depositLineDetailBuilder.addPropertyValue("classRef", ___________classRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________depositLineDetailChildElement, __________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                            BeanDefinitionBuilder ___________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________accountRefChildElement = DomUtils.getChildElementByTagName(__________depositLineDetailChildElement, "account-ref");
                                                                                            if (___________accountRefChildElement!= null) {
                                                                                                parseProperty(___________accountRefBuilder, ___________accountRefChildElement, "value", "value");
                                                                                                parseProperty(___________accountRefBuilder, ___________accountRefChildElement, "name", "name");
                                                                                                parseProperty(___________accountRefBuilder, ___________accountRefChildElement, "type", "type");
                                                                                                __________depositLineDetailBuilder.addPropertyValue("accountRef", ___________accountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________depositLineDetailChildElement, __________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                            BeanDefinitionBuilder ___________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(__________depositLineDetailChildElement, "payment-method-ref");
                                                                                            if (___________paymentMethodRefChildElement!= null) {
                                                                                                parseProperty(___________paymentMethodRefBuilder, ___________paymentMethodRefChildElement, "value", "value");
                                                                                                parseProperty(___________paymentMethodRefBuilder, ___________paymentMethodRefChildElement, "name", "name");
                                                                                                parseProperty(___________paymentMethodRefBuilder, ___________paymentMethodRefChildElement, "type", "type");
                                                                                                __________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", ___________paymentMethodRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________depositLineDetailBuilder, __________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                        parseProperty(__________depositLineDetailBuilder, __________depositLineDetailChildElement, "txnType", "txnType");
                                                                                        if (!parseObjectRef(__________depositLineDetailChildElement, __________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(__________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                            if (___________depositLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________depositLineDetailExChildElement, ___________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", ___________depositLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("depositLineDetail", __________depositLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                    BeanDefinitionBuilder __________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                    Element __________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                    if (__________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ____________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ____________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                            if (____________salesItemLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(____________salesItemLineDetailExChildElement, ____________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ____________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                            BeanDefinitionBuilder _____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________itemRefChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                            if (_____________itemRefChildElement!= null) {
                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "value", "value");
                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "name", "name");
                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "type", "type");
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", _____________itemRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                            BeanDefinitionBuilder _____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________classRefChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                            if (_____________classRefChildElement!= null) {
                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "value", "value");
                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "name", "name");
                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "type", "type");
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", _____________classRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                            BeanDefinitionBuilder _____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                            if (_____________priceLevelRefChildElement!= null) {
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "value", "value");
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "name", "name");
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "type", "type");
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _____________priceLevelRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                            BeanDefinitionBuilder _____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                            Element _____________markupInfoChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                            if (_____________markupInfoChildElement!= null) {
                                                                                                parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "value", "value");
                                                                                                parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percent", "percent");
                                                                                                if (!parseObjectRef(_____________markupInfoChildElement, _____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                    BeanDefinitionBuilder ______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________markupInfoChildElement, "price-level-ref");
                                                                                                    if (______________priceLevelRefChildElement!= null) {
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "value", "value");
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "name", "name");
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "type", "type");
                                                                                                        _____________markupInfoBuilder.addPropertyValue("priceLevelRef", ______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _____________markupInfoBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                            BeanDefinitionBuilder _____________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                            Element _____________uomRefChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                            if (_____________uomRefChildElement!= null) {
                                                                                                parseProperty(_____________uomRefBuilder, _____________uomRefChildElement, "unit", "unit");
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", _____________uomRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                            BeanDefinitionBuilder _____________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________itemAccountRefChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                            if (_____________itemAccountRefChildElement!= null) {
                                                                                                parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "value", "value");
                                                                                                parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "name", "name");
                                                                                                parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "type", "type");
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _____________itemAccountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                            BeanDefinitionBuilder _____________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                            if (_____________inventorySiteRefChildElement!= null) {
                                                                                                parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "value", "value");
                                                                                                parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "name", "name");
                                                                                                parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "type", "type");
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _____________inventorySiteRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                            BeanDefinitionBuilder _____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                            if (_____________taxCodeRefChildElement!= null) {
                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "value", "value");
                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "name", "name");
                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "type", "type");
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _____________taxCodeRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                        parseProperty(__________purchaseOrderItemLineDetailBuilder, __________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                        if (!parseObjectRef(__________purchaseOrderItemLineDetailChildElement, __________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(__________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                            if (___________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________purchaseOrderItemLineDetailExChildElement, ___________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", ___________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("purchaseOrderItemLineDetail", __________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                    BeanDefinitionBuilder __________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                    Element __________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                    if (__________salesOrderItemLineDetailChildElement!= null) {
                                                                                        parseProperty(__________salesOrderItemLineDetailBuilder, __________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                        parseProperty(__________salesOrderItemLineDetailBuilder, __________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                        parseProperty(__________salesOrderItemLineDetailBuilder, __________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                        if (!parseObjectRef(__________salesOrderItemLineDetailChildElement, __________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ____________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ____________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(__________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                            if (____________salesItemLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(____________salesItemLineDetailExChildElement, ____________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ____________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________salesOrderItemLineDetailBuilder, __________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                        if (!parseObjectRef(__________salesOrderItemLineDetailChildElement, __________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                            BeanDefinitionBuilder _____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________itemRefChildElement = DomUtils.getChildElementByTagName(__________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                            if (_____________itemRefChildElement!= null) {
                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "value", "value");
                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "name", "name");
                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "type", "type");
                                                                                                __________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", _____________itemRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesOrderItemLineDetailChildElement, __________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                            BeanDefinitionBuilder _____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________classRefChildElement = DomUtils.getChildElementByTagName(__________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                            if (_____________classRefChildElement!= null) {
                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "value", "value");
                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "name", "name");
                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "type", "type");
                                                                                                __________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", _____________classRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________salesOrderItemLineDetailBuilder, __________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                        parseProperty(__________salesOrderItemLineDetailBuilder, __________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                        if (!parseObjectRef(__________salesOrderItemLineDetailChildElement, __________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                            BeanDefinitionBuilder _____________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                            if (_____________priceLevelRefChildElement!= null) {
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "value", "value");
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "name", "name");
                                                                                                parseProperty(_____________priceLevelRefBuilder, _____________priceLevelRefChildElement, "type", "type");
                                                                                                __________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _____________priceLevelRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesOrderItemLineDetailChildElement, __________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                            BeanDefinitionBuilder _____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                            Element _____________markupInfoChildElement = DomUtils.getChildElementByTagName(__________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                            if (_____________markupInfoChildElement!= null) {
                                                                                                parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "value", "value");
                                                                                                parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percent", "percent");
                                                                                                if (!parseObjectRef(_____________markupInfoChildElement, _____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                    BeanDefinitionBuilder ______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________markupInfoChildElement, "price-level-ref");
                                                                                                    if (______________priceLevelRefChildElement!= null) {
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "value", "value");
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "name", "name");
                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "type", "type");
                                                                                                        _____________markupInfoBuilder.addPropertyValue("priceLevelRef", ______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                __________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _____________markupInfoBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________salesOrderItemLineDetailBuilder, __________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                        if (!parseObjectRef(__________salesOrderItemLineDetailChildElement, __________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                            BeanDefinitionBuilder _____________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                            Element _____________uomRefChildElement = DomUtils.getChildElementByTagName(__________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                            if (_____________uomRefChildElement!= null) {
                                                                                                parseProperty(_____________uomRefBuilder, _____________uomRefChildElement, "unit", "unit");
                                                                                                __________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", _____________uomRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesOrderItemLineDetailChildElement, __________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                            BeanDefinitionBuilder _____________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________itemAccountRefChildElement = DomUtils.getChildElementByTagName(__________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                            if (_____________itemAccountRefChildElement!= null) {
                                                                                                parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "value", "value");
                                                                                                parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "name", "name");
                                                                                                parseProperty(_____________itemAccountRefBuilder, _____________itemAccountRefChildElement, "type", "type");
                                                                                                __________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _____________itemAccountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesOrderItemLineDetailChildElement, __________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                            BeanDefinitionBuilder _____________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(__________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                            if (_____________inventorySiteRefChildElement!= null) {
                                                                                                parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "value", "value");
                                                                                                parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "name", "name");
                                                                                                parseProperty(_____________inventorySiteRefBuilder, _____________inventorySiteRefChildElement, "type", "type");
                                                                                                __________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _____________inventorySiteRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________salesOrderItemLineDetailChildElement, __________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                            BeanDefinitionBuilder _____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element _____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                            if (_____________taxCodeRefChildElement!= null) {
                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "value", "value");
                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "name", "name");
                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "type", "type");
                                                                                                __________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _____________taxCodeRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________salesOrderItemLineDetailBuilder, __________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                        builder.addPropertyValue("salesOrderItemLineDetail", __________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                    BeanDefinitionBuilder __________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                    Element __________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                    if (__________itemReceiptLineDetailChildElement!= null) {
                                                                                        if (!parseObjectRef(__________itemReceiptLineDetailChildElement, __________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(__________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                            if (___________itemReceiptLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________itemReceiptLineDetailExChildElement, ___________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", ___________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("itemReceiptLineDetail", __________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                    BeanDefinitionBuilder __________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                    Element __________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                    if (__________journalEntryLineDetailChildElement!= null) {
                                                                                        parseProperty(__________journalEntryLineDetailBuilder, __________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                        if (!parseObjectRef(__________journalEntryLineDetailChildElement, __________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                            BeanDefinitionBuilder ___________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                            Element ___________entityChildElement = DomUtils.getChildElementByTagName(__________journalEntryLineDetailChildElement, "entity");
                                                                                            if (___________entityChildElement!= null) {
                                                                                                parseProperty(___________entityBuilder, ___________entityChildElement, "type", "type");
                                                                                                if (!parseObjectRef(___________entityChildElement, ___________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                    BeanDefinitionBuilder ____________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                    Element ____________entityRefChildElement = DomUtils.getChildElementByTagName(___________entityChildElement, "entity-ref");
                                                                                                    if (____________entityRefChildElement!= null) {
                                                                                                        parseProperty(____________entityRefBuilder, ____________entityRefChildElement, "value", "value");
                                                                                                        parseProperty(____________entityRefBuilder, ____________entityRefChildElement, "name", "name");
                                                                                                        parseProperty(____________entityRefBuilder, ____________entityRefChildElement, "type", "type");
                                                                                                        ___________entityBuilder.addPropertyValue("entityRef", ____________entityRefBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                __________journalEntryLineDetailBuilder.addPropertyValue("entity", ___________entityBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________journalEntryLineDetailChildElement, __________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                            BeanDefinitionBuilder ___________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________accountRefChildElement = DomUtils.getChildElementByTagName(__________journalEntryLineDetailChildElement, "account-ref");
                                                                                            if (___________accountRefChildElement!= null) {
                                                                                                parseProperty(___________accountRefBuilder, ___________accountRefChildElement, "value", "value");
                                                                                                parseProperty(___________accountRefBuilder, ___________accountRefChildElement, "name", "name");
                                                                                                parseProperty(___________accountRefBuilder, ___________accountRefChildElement, "type", "type");
                                                                                                __________journalEntryLineDetailBuilder.addPropertyValue("accountRef", ___________accountRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________journalEntryLineDetailChildElement, __________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                            BeanDefinitionBuilder ___________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________classRefChildElement = DomUtils.getChildElementByTagName(__________journalEntryLineDetailChildElement, "class-ref");
                                                                                            if (___________classRefChildElement!= null) {
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "value", "value");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "name", "name");
                                                                                                parseProperty(___________classRefBuilder, ___________classRefChildElement, "type", "type");
                                                                                                __________journalEntryLineDetailBuilder.addPropertyValue("classRef", ___________classRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________journalEntryLineDetailChildElement, __________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                            BeanDefinitionBuilder ___________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________departmentRefChildElement = DomUtils.getChildElementByTagName(__________journalEntryLineDetailChildElement, "department-ref");
                                                                                            if (___________departmentRefChildElement!= null) {
                                                                                                parseProperty(___________departmentRefBuilder, ___________departmentRefChildElement, "value", "value");
                                                                                                parseProperty(___________departmentRefBuilder, ___________departmentRefChildElement, "name", "name");
                                                                                                parseProperty(___________departmentRefBuilder, ___________departmentRefChildElement, "type", "type");
                                                                                                __________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", ___________departmentRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        if (!parseObjectRef(__________journalEntryLineDetailChildElement, __________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                            BeanDefinitionBuilder ___________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                            if (___________taxCodeRefChildElement!= null) {
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "value", "value");
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "name", "name");
                                                                                                parseProperty(___________taxCodeRefBuilder, ___________taxCodeRefChildElement, "type", "type");
                                                                                                __________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", ___________taxCodeRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________journalEntryLineDetailBuilder, __________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                        parseProperty(__________journalEntryLineDetailBuilder, __________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                        parseProperty(__________journalEntryLineDetailBuilder, __________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                        if (!parseObjectRef(__________journalEntryLineDetailChildElement, __________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(__________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                            if (___________journalEntryLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________journalEntryLineDetailExChildElement, ___________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", ___________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("journalEntryLineDetail", __________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                    BeanDefinitionBuilder __________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                    Element __________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                    if (__________groupLineDetailChildElement!= null) {
                                                                                        if (!parseObjectRef(__________groupLineDetailChildElement, __________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                            BeanDefinitionBuilder ___________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________groupItemRefChildElement = DomUtils.getChildElementByTagName(__________groupLineDetailChildElement, "group-item-ref");
                                                                                            if (___________groupItemRefChildElement!= null) {
                                                                                                parseProperty(___________groupItemRefBuilder, ___________groupItemRefChildElement, "value", "value");
                                                                                                parseProperty(___________groupItemRefBuilder, ___________groupItemRefChildElement, "name", "name");
                                                                                                parseProperty(___________groupItemRefBuilder, ___________groupItemRefChildElement, "type", "type");
                                                                                                __________groupLineDetailBuilder.addPropertyValue("groupItemRef", ___________groupItemRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________groupLineDetailBuilder, __________groupLineDetailChildElement, "quantity", "quantity");
                                                                                        parseProperty(__________groupLineDetailBuilder, __________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                        parseListAndSetProperty(__________groupLineDetailChildElement, __________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                            public BeanDefinition parse(Element element) {
                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                                parseProperty(builder, element, "id", "id");
                                                                                                parseProperty(builder, element, "lineNum", "lineNum");
                                                                                                parseProperty(builder, element, "description", "description");
                                                                                                parseProperty(builder, element, "amount", "amount");
                                                                                                parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                                        parseProperty(builder, element, "txnId", "txnId");
                                                                                                        parseProperty(builder, element, "txnType", "txnType");
                                                                                                        parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                                        return builder.getBeanDefinition();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                parseProperty(builder, element, "detailType", "detailType");
                                                                                                if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                                    if (____________paymentLineDetailChildElement!= null) {
                                                                                                        if (!parseObjectRef(____________paymentLineDetailChildElement, ____________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                            BeanDefinitionBuilder _____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________itemRefChildElement = DomUtils.getChildElementByTagName(____________paymentLineDetailChildElement, "item-ref");
                                                                                                            if (_____________itemRefChildElement!= null) {
                                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "type", "type");
                                                                                                                ____________paymentLineDetailBuilder.addPropertyValue("itemRef", _____________itemRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________paymentLineDetailBuilder, ____________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                        if (!parseObjectRef(____________paymentLineDetailChildElement, ____________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                            BeanDefinitionBuilder _____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________classRefChildElement = DomUtils.getChildElementByTagName(____________paymentLineDetailChildElement, "class-ref");
                                                                                                            if (_____________classRefChildElement!= null) {
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "type", "type");
                                                                                                                ____________paymentLineDetailBuilder.addPropertyValue("classRef", _____________classRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________paymentLineDetailBuilder, ____________paymentLineDetailChildElement, "balance", "balance");
                                                                                                        if (!parseObjectRef(____________paymentLineDetailChildElement, ____________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                                            BeanDefinitionBuilder _____________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                                            Element _____________discountChildElement = DomUtils.getChildElementByTagName(____________paymentLineDetailChildElement, "discount");
                                                                                                            if (_____________discountChildElement!= null) {
                                                                                                                if (!parseObjectRef(_____________discountChildElement, _____________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                                    BeanDefinitionBuilder ______________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________discountRefChildElement = DomUtils.getChildElementByTagName(_____________discountChildElement, "discount-ref");
                                                                                                                    if (______________discountRefChildElement!= null) {
                                                                                                                        parseProperty(______________discountRefBuilder, ______________discountRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________discountRefBuilder, ______________discountRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________discountRefBuilder, ______________discountRefChildElement, "type", "type");
                                                                                                                        _____________discountBuilder.addPropertyValue("discountRef", ______________discountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseProperty(_____________discountBuilder, _____________discountChildElement, "percentBased", "percentBased");
                                                                                                                parseProperty(_____________discountBuilder, _____________discountChildElement, "discountPercent", "discountPercent");
                                                                                                                if (!parseObjectRef(_____________discountChildElement, _____________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                    BeanDefinitionBuilder ______________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_____________discountChildElement, "discount-account-ref");
                                                                                                                    if (______________discountAccountRefChildElement!= null) {
                                                                                                                        parseProperty(______________discountAccountRefBuilder, ______________discountAccountRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________discountAccountRefBuilder, ______________discountAccountRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________discountAccountRefBuilder, ______________discountAccountRefChildElement, "type", "type");
                                                                                                                        _____________discountBuilder.addPropertyValue("discountAccountRef", ______________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                ____________paymentLineDetailBuilder.addPropertyValue("discount", _____________discountBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________paymentLineDetailChildElement, ____________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                                            BeanDefinitionBuilder _____________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________paymentLineExChildElement = DomUtils.getChildElementByTagName(____________paymentLineDetailChildElement, "payment-line-ex");
                                                                                                            if (_____________paymentLineExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________paymentLineExChildElement, _____________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", _____________paymentLineExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("paymentLineDetail", ____________paymentLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                                    if (____________discountLineDetailChildElement!= null) {
                                                                                                        parseProperty(____________discountLineDetailBuilder, ____________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                        if (!parseObjectRef(____________discountLineDetailChildElement, ____________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                                            BeanDefinitionBuilder ______________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________discountRefChildElement = DomUtils.getChildElementByTagName(____________discountLineDetailChildElement, "discount-ref");
                                                                                                            if (______________discountRefChildElement!= null) {
                                                                                                                parseProperty(______________discountRefBuilder, ______________discountRefChildElement, "value", "value");
                                                                                                                parseProperty(______________discountRefBuilder, ______________discountRefChildElement, "name", "name");
                                                                                                                parseProperty(______________discountRefBuilder, ______________discountRefChildElement, "type", "type");
                                                                                                                ____________discountLineDetailBuilder.addPropertyValue("discountRef", ______________discountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________discountLineDetailBuilder, ____________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                                        parseProperty(____________discountLineDetailBuilder, ____________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                                        if (!parseObjectRef(____________discountLineDetailChildElement, ____________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                            BeanDefinitionBuilder ______________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________discountAccountRefChildElement = DomUtils.getChildElementByTagName(____________discountLineDetailChildElement, "discount-account-ref");
                                                                                                            if (______________discountAccountRefChildElement!= null) {
                                                                                                                parseProperty(______________discountAccountRefBuilder, ______________discountAccountRefChildElement, "value", "value");
                                                                                                                parseProperty(______________discountAccountRefBuilder, ______________discountAccountRefChildElement, "name", "name");
                                                                                                                parseProperty(______________discountAccountRefBuilder, ______________discountAccountRefChildElement, "type", "type");
                                                                                                                ____________discountLineDetailBuilder.addPropertyValue("discountAccountRef", ______________discountAccountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________discountLineDetailBuilder, ____________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                        if (!parseObjectRef(____________discountLineDetailChildElement, ____________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                            BeanDefinitionBuilder _____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________classRefChildElement = DomUtils.getChildElementByTagName(____________discountLineDetailChildElement, "class-ref");
                                                                                                            if (_____________classRefChildElement!= null) {
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "type", "type");
                                                                                                                ____________discountLineDetailBuilder.addPropertyValue("classRef", _____________classRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________discountLineDetailChildElement, ____________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                            BeanDefinitionBuilder _____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(____________discountLineDetailChildElement, "tax-code-ref");
                                                                                                            if (_____________taxCodeRefChildElement!= null) {
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "type", "type");
                                                                                                                ____________discountLineDetailBuilder.addPropertyValue("taxCodeRef", _____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________discountLineDetailChildElement, ____________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(____________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                                            if (_____________discountLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________discountLineDetailExChildElement, _____________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", _____________discountLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("discountLineDetail", ____________discountLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                                    if (____________taxLineDetailChildElement!= null) {
                                                                                                        if (!parseObjectRef(____________taxLineDetailChildElement, ____________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                                            BeanDefinitionBuilder _____________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________taxRateRefChildElement = DomUtils.getChildElementByTagName(____________taxLineDetailChildElement, "tax-rate-ref");
                                                                                                            if (_____________taxRateRefChildElement!= null) {
                                                                                                                parseProperty(_____________taxRateRefBuilder, _____________taxRateRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________taxRateRefBuilder, _____________taxRateRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________taxRateRefBuilder, _____________taxRateRefChildElement, "type", "type");
                                                                                                                ____________taxLineDetailBuilder.addPropertyValue("taxRateRef", _____________taxRateRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________taxLineDetailBuilder, ____________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                                        parseProperty(____________taxLineDetailBuilder, ____________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                                        parseProperty(____________taxLineDetailBuilder, ____________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                                        parseProperty(____________taxLineDetailBuilder, ____________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                                        parseProperty(____________taxLineDetailBuilder, ____________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                                        parseProperty(____________taxLineDetailBuilder, ____________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                        if (!parseObjectRef(____________taxLineDetailChildElement, ____________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(____________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                                            if (_____________taxLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________taxLineDetailExChildElement, _____________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", _____________taxLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("taxLineDetail", ____________taxLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                                    if (____________salesItemLineDetailChildElement!= null) {
                                                                                                        parseProperty(____________salesItemLineDetailBuilder, ____________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                        if (!parseObjectRef(____________salesItemLineDetailChildElement, ____________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                            BeanDefinitionBuilder ______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________itemRefChildElement = DomUtils.getChildElementByTagName(____________salesItemLineDetailChildElement, "item-ref");
                                                                                                            if (______________itemRefChildElement!= null) {
                                                                                                                parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "value", "value");
                                                                                                                parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "name", "name");
                                                                                                                parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "type", "type");
                                                                                                                ____________salesItemLineDetailBuilder.addPropertyValue("itemRef", ______________itemRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesItemLineDetailChildElement, ____________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                            BeanDefinitionBuilder ______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________classRefChildElement = DomUtils.getChildElementByTagName(____________salesItemLineDetailChildElement, "class-ref");
                                                                                                            if (______________classRefChildElement!= null) {
                                                                                                                parseProperty(______________classRefBuilder, ______________classRefChildElement, "value", "value");
                                                                                                                parseProperty(______________classRefBuilder, ______________classRefChildElement, "name", "name");
                                                                                                                parseProperty(______________classRefBuilder, ______________classRefChildElement, "type", "type");
                                                                                                                ____________salesItemLineDetailBuilder.addPropertyValue("classRef", ______________classRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________salesItemLineDetailBuilder, ____________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                        parseProperty(____________salesItemLineDetailBuilder, ____________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                        if (!parseObjectRef(____________salesItemLineDetailChildElement, ____________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                            BeanDefinitionBuilder ______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________salesItemLineDetailChildElement, "price-level-ref");
                                                                                                            if (______________priceLevelRefChildElement!= null) {
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "value", "value");
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "name", "name");
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "type", "type");
                                                                                                                ____________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", ______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesItemLineDetailChildElement, ____________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                            BeanDefinitionBuilder ______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                            Element ______________markupInfoChildElement = DomUtils.getChildElementByTagName(____________salesItemLineDetailChildElement, "markup-info");
                                                                                                            if (______________markupInfoChildElement!= null) {
                                                                                                                parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "value", "value");
                                                                                                                parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percent", "percent");
                                                                                                                if (!parseObjectRef(______________markupInfoChildElement, ______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                    BeanDefinitionBuilder _______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________markupInfoChildElement, "price-level-ref");
                                                                                                                    if (_______________priceLevelRefChildElement!= null) {
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "type", "type");
                                                                                                                        ______________markupInfoBuilder.addPropertyValue("priceLevelRef", _______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                ____________salesItemLineDetailBuilder.addPropertyValue("markupInfo", ______________markupInfoBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________salesItemLineDetailBuilder, ____________salesItemLineDetailChildElement, "qty", "qty");
                                                                                                        if (!parseObjectRef(____________salesItemLineDetailChildElement, ____________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                            BeanDefinitionBuilder ______________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                            Element ______________uomRefChildElement = DomUtils.getChildElementByTagName(____________salesItemLineDetailChildElement, "uom-ref");
                                                                                                            if (______________uomRefChildElement!= null) {
                                                                                                                parseProperty(______________uomRefBuilder, ______________uomRefChildElement, "unit", "unit");
                                                                                                                ____________salesItemLineDetailBuilder.addPropertyValue("uomRef", ______________uomRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesItemLineDetailChildElement, ____________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                            BeanDefinitionBuilder ______________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________itemAccountRefChildElement = DomUtils.getChildElementByTagName(____________salesItemLineDetailChildElement, "item-account-ref");
                                                                                                            if (______________itemAccountRefChildElement!= null) {
                                                                                                                parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "value", "value");
                                                                                                                parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "name", "name");
                                                                                                                parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "type", "type");
                                                                                                                ____________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", ______________itemAccountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesItemLineDetailChildElement, ____________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                            BeanDefinitionBuilder ______________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(____________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                                            if (______________inventorySiteRefChildElement!= null) {
                                                                                                                parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "value", "value");
                                                                                                                parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "name", "name");
                                                                                                                parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "type", "type");
                                                                                                                ____________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ______________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesItemLineDetailChildElement, ____________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                            BeanDefinitionBuilder ______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(____________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                                            if (______________taxCodeRefChildElement!= null) {
                                                                                                                parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "value", "value");
                                                                                                                parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "name", "name");
                                                                                                                parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "type", "type");
                                                                                                                ____________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", ______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________salesItemLineDetailBuilder, ____________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                        parseProperty(____________salesItemLineDetailBuilder, ____________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                        if (!parseObjectRef(____________salesItemLineDetailChildElement, ____________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(____________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                            if (_____________salesItemLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________salesItemLineDetailExChildElement, _____________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _____________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("salesItemLineDetail", ____________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                                    if (____________descriptionLineDetailChildElement!= null) {
                                                                                                        parseProperty(____________descriptionLineDetailBuilder, ____________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                        if (!parseObjectRef(____________descriptionLineDetailChildElement, ____________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                            BeanDefinitionBuilder _____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(____________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                                            if (_____________taxCodeRefChildElement!= null) {
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "type", "type");
                                                                                                                ____________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", _____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________descriptionLineDetailChildElement, ____________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(____________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                                            if (_____________descriptionLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________descriptionLineDetailExChildElement, _____________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", _____________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("descriptionLineDetail", ____________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                                    if (____________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                                        parseProperty(____________itemBasedExpenseLineDetailBuilder, ____________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                            BeanDefinitionBuilder ______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________itemRefChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                                            if (______________itemRefChildElement!= null) {
                                                                                                                parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "value", "value");
                                                                                                                parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "name", "name");
                                                                                                                parseProperty(______________itemRefBuilder, ______________itemRefChildElement, "type", "type");
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", ______________itemRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                            BeanDefinitionBuilder ______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________classRefChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                            if (______________classRefChildElement!= null) {
                                                                                                                parseProperty(______________classRefBuilder, ______________classRefChildElement, "value", "value");
                                                                                                                parseProperty(______________classRefBuilder, ______________classRefChildElement, "name", "name");
                                                                                                                parseProperty(______________classRefBuilder, ______________classRefChildElement, "type", "type");
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ______________classRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________itemBasedExpenseLineDetailBuilder, ____________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                        parseProperty(____________itemBasedExpenseLineDetailBuilder, ____________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                            BeanDefinitionBuilder ______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                                            if (______________priceLevelRefChildElement!= null) {
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "value", "value");
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "name", "name");
                                                                                                                parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "type", "type");
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", ______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                            BeanDefinitionBuilder ______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                            Element ______________markupInfoChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                            if (______________markupInfoChildElement!= null) {
                                                                                                                parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "value", "value");
                                                                                                                parseProperty(______________markupInfoBuilder, ______________markupInfoChildElement, "percent", "percent");
                                                                                                                if (!parseObjectRef(______________markupInfoChildElement, ______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                    BeanDefinitionBuilder _______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element _______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________markupInfoChildElement, "price-level-ref");
                                                                                                                    if (_______________priceLevelRefChildElement!= null) {
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "value", "value");
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "name", "name");
                                                                                                                        parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "type", "type");
                                                                                                                        ______________markupInfoBuilder.addPropertyValue("priceLevelRef", _______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ______________markupInfoBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________itemBasedExpenseLineDetailBuilder, ____________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                            BeanDefinitionBuilder ______________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                            Element ______________uomRefChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                                            if (______________uomRefChildElement!= null) {
                                                                                                                parseProperty(______________uomRefBuilder, ______________uomRefChildElement, "unit", "unit");
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", ______________uomRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                            BeanDefinitionBuilder ______________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________itemAccountRefChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                                            if (______________itemAccountRefChildElement!= null) {
                                                                                                                parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "value", "value");
                                                                                                                parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "name", "name");
                                                                                                                parseProperty(______________itemAccountRefBuilder, ______________itemAccountRefChildElement, "type", "type");
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", ______________itemAccountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                            BeanDefinitionBuilder ______________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                                            if (______________inventorySiteRefChildElement!= null) {
                                                                                                                parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "value", "value");
                                                                                                                parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "name", "name");
                                                                                                                parseProperty(______________inventorySiteRefBuilder, ______________inventorySiteRefChildElement, "type", "type");
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", ______________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                            BeanDefinitionBuilder ______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element ______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                            if (______________taxCodeRefChildElement!= null) {
                                                                                                                parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "value", "value");
                                                                                                                parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "name", "name");
                                                                                                                parseProperty(______________taxCodeRefBuilder, ______________taxCodeRefChildElement, "type", "type");
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                            BeanDefinitionBuilder _____________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________customerRefChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                            if (_____________customerRefChildElement!= null) {
                                                                                                                parseProperty(_____________customerRefBuilder, _____________customerRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________customerRefBuilder, _____________customerRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________customerRefBuilder, _____________customerRefChildElement, "type", "type");
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _____________customerRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________itemBasedExpenseLineDetailBuilder, ____________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                        parseProperty(____________itemBasedExpenseLineDetailBuilder, ____________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                        if (!parseObjectRef(____________itemBasedExpenseLineDetailChildElement, ____________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(____________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                                            if (_____________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________itemBasedExpenseLineDetailExChildElement, _____________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", _____________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("itemBasedExpenseLineDetail", ____________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                                    if (____________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                                        if (!parseObjectRef(____________accountBasedExpenseLineDetailChildElement, ____________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                            BeanDefinitionBuilder _____________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________customerRefChildElement = DomUtils.getChildElementByTagName(____________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                            if (_____________customerRefChildElement!= null) {
                                                                                                                parseProperty(_____________customerRefBuilder, _____________customerRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________customerRefBuilder, _____________customerRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________customerRefBuilder, _____________customerRefChildElement, "type", "type");
                                                                                                                ____________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _____________customerRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________accountBasedExpenseLineDetailChildElement, ____________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                            BeanDefinitionBuilder _____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________classRefChildElement = DomUtils.getChildElementByTagName(____________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                            if (_____________classRefChildElement!= null) {
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "type", "type");
                                                                                                                ____________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _____________classRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________accountBasedExpenseLineDetailChildElement, ____________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                            BeanDefinitionBuilder _____________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________accountRefChildElement = DomUtils.getChildElementByTagName(____________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                                            if (_____________accountRefChildElement!= null) {
                                                                                                                parseProperty(_____________accountRefBuilder, _____________accountRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________accountRefBuilder, _____________accountRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________accountRefBuilder, _____________accountRefChildElement, "type", "type");
                                                                                                                ____________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", _____________accountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________accountBasedExpenseLineDetailBuilder, ____________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                        if (!parseObjectRef(____________accountBasedExpenseLineDetailChildElement, ____________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                            BeanDefinitionBuilder _____________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                            Element _____________markupInfoChildElement = DomUtils.getChildElementByTagName(____________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                            if (_____________markupInfoChildElement!= null) {
                                                                                                                parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "value", "value");
                                                                                                                parseProperty(_____________markupInfoBuilder, _____________markupInfoChildElement, "percent", "percent");
                                                                                                                if (!parseObjectRef(_____________markupInfoChildElement, _____________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                    BeanDefinitionBuilder ______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________markupInfoChildElement, "price-level-ref");
                                                                                                                    if (______________priceLevelRefChildElement!= null) {
                                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________priceLevelRefBuilder, ______________priceLevelRefChildElement, "type", "type");
                                                                                                                        _____________markupInfoBuilder.addPropertyValue("priceLevelRef", ______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                ____________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _____________markupInfoBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________accountBasedExpenseLineDetailBuilder, ____________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                        if (!parseObjectRef(____________accountBasedExpenseLineDetailChildElement, ____________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                            BeanDefinitionBuilder _____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(____________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                            if (_____________taxCodeRefChildElement!= null) {
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "type", "type");
                                                                                                                ____________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________accountBasedExpenseLineDetailBuilder, ____________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                        if (!parseObjectRef(____________accountBasedExpenseLineDetailChildElement, ____________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(____________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                                            if (_____________expenseDetailLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________expenseDetailLineDetailExChildElement, _____________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", _____________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("accountBasedExpenseLineDetail", ____________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                                    if (____________depositLineDetailChildElement!= null) {
                                                                                                        if (!parseObjectRef(____________depositLineDetailChildElement, ____________depositLineDetailBuilder, "entity", "entity")) {
                                                                                                            BeanDefinitionBuilder _____________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________entityChildElement = DomUtils.getChildElementByTagName(____________depositLineDetailChildElement, "entity");
                                                                                                            if (_____________entityChildElement!= null) {
                                                                                                                parseProperty(_____________entityBuilder, _____________entityChildElement, "value", "value");
                                                                                                                parseProperty(_____________entityBuilder, _____________entityChildElement, "name", "name");
                                                                                                                parseProperty(_____________entityBuilder, _____________entityChildElement, "type", "type");
                                                                                                                ____________depositLineDetailBuilder.addPropertyValue("entity", _____________entityBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________depositLineDetailChildElement, ____________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                            BeanDefinitionBuilder _____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________classRefChildElement = DomUtils.getChildElementByTagName(____________depositLineDetailChildElement, "class-ref");
                                                                                                            if (_____________classRefChildElement!= null) {
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "type", "type");
                                                                                                                ____________depositLineDetailBuilder.addPropertyValue("classRef", _____________classRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________depositLineDetailChildElement, ____________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                            BeanDefinitionBuilder _____________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________accountRefChildElement = DomUtils.getChildElementByTagName(____________depositLineDetailChildElement, "account-ref");
                                                                                                            if (_____________accountRefChildElement!= null) {
                                                                                                                parseProperty(_____________accountRefBuilder, _____________accountRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________accountRefBuilder, _____________accountRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________accountRefBuilder, _____________accountRefChildElement, "type", "type");
                                                                                                                ____________depositLineDetailBuilder.addPropertyValue("accountRef", _____________accountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________depositLineDetailChildElement, ____________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                                            BeanDefinitionBuilder _____________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(____________depositLineDetailChildElement, "payment-method-ref");
                                                                                                            if (_____________paymentMethodRefChildElement!= null) {
                                                                                                                parseProperty(_____________paymentMethodRefBuilder, _____________paymentMethodRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________paymentMethodRefBuilder, _____________paymentMethodRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________paymentMethodRefBuilder, _____________paymentMethodRefChildElement, "type", "type");
                                                                                                                ____________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", _____________paymentMethodRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________depositLineDetailBuilder, ____________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                                        parseProperty(____________depositLineDetailBuilder, ____________depositLineDetailChildElement, "txnType", "txnType");
                                                                                                        if (!parseObjectRef(____________depositLineDetailChildElement, ____________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(____________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                                            if (_____________depositLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________depositLineDetailExChildElement, _____________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", _____________depositLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("depositLineDetail", ____________depositLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                                    if (____________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder ______________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element ______________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                            if (______________salesItemLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(______________salesItemLineDetailExChildElement, ______________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ______________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                            BeanDefinitionBuilder _______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________itemRefChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                                            if (_______________itemRefChildElement!= null) {
                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "type", "type");
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", _______________itemRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                            BeanDefinitionBuilder _______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________classRefChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                                            if (_______________classRefChildElement!= null) {
                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "type", "type");
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", _______________classRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                            BeanDefinitionBuilder _______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                            if (_______________priceLevelRefChildElement!= null) {
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "type", "type");
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                            BeanDefinitionBuilder _______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                            Element _______________markupInfoChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                                            if (_______________markupInfoChildElement!= null) {
                                                                                                                parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "value", "value");
                                                                                                                parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percent", "percent");
                                                                                                                if (!parseObjectRef(_______________markupInfoChildElement, _______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                    BeanDefinitionBuilder ________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______________markupInfoChildElement, "price-level-ref");
                                                                                                                    if (________________priceLevelRefChildElement!= null) {
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "type", "type");
                                                                                                                        _______________markupInfoBuilder.addPropertyValue("priceLevelRef", ________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _______________markupInfoBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                            BeanDefinitionBuilder _______________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                            Element _______________uomRefChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                                            if (_______________uomRefChildElement!= null) {
                                                                                                                parseProperty(_______________uomRefBuilder, _______________uomRefChildElement, "unit", "unit");
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", _______________uomRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                            BeanDefinitionBuilder _______________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________itemAccountRefChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                            if (_______________itemAccountRefChildElement!= null) {
                                                                                                                parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "type", "type");
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _______________itemAccountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                            BeanDefinitionBuilder _______________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                            if (_______________inventorySiteRefChildElement!= null) {
                                                                                                                parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "type", "type");
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _______________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                            BeanDefinitionBuilder _______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                            if (_______________taxCodeRefChildElement!= null) {
                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "type", "type");
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                        parseProperty(____________purchaseOrderItemLineDetailBuilder, ____________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                                        if (!parseObjectRef(____________purchaseOrderItemLineDetailChildElement, ____________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(____________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                                            if (_____________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________purchaseOrderItemLineDetailExChildElement, _____________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", _____________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("purchaseOrderItemLineDetail", ____________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                                    if (____________salesOrderItemLineDetailChildElement!= null) {
                                                                                                        parseProperty(____________salesOrderItemLineDetailBuilder, ____________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                        parseProperty(____________salesOrderItemLineDetailBuilder, ____________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                        parseProperty(____________salesOrderItemLineDetailBuilder, ____________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                        if (!parseObjectRef(____________salesOrderItemLineDetailChildElement, ____________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder ______________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element ______________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(____________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                            if (______________salesItemLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(______________salesItemLineDetailExChildElement, ______________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ______________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________salesOrderItemLineDetailBuilder, ____________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                        if (!parseObjectRef(____________salesOrderItemLineDetailChildElement, ____________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                            BeanDefinitionBuilder _______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________itemRefChildElement = DomUtils.getChildElementByTagName(____________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                                            if (_______________itemRefChildElement!= null) {
                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "type", "type");
                                                                                                                ____________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", _______________itemRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesOrderItemLineDetailChildElement, ____________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                            BeanDefinitionBuilder _______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________classRefChildElement = DomUtils.getChildElementByTagName(____________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                                            if (_______________classRefChildElement!= null) {
                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "type", "type");
                                                                                                                ____________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", _______________classRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________salesOrderItemLineDetailBuilder, ____________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                        parseProperty(____________salesOrderItemLineDetailBuilder, ____________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                        if (!parseObjectRef(____________salesOrderItemLineDetailChildElement, ____________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                            BeanDefinitionBuilder _______________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                            if (_______________priceLevelRefChildElement!= null) {
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________priceLevelRefBuilder, _______________priceLevelRefChildElement, "type", "type");
                                                                                                                ____________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _______________priceLevelRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesOrderItemLineDetailChildElement, ____________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                            BeanDefinitionBuilder _______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                            Element _______________markupInfoChildElement = DomUtils.getChildElementByTagName(____________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                                            if (_______________markupInfoChildElement!= null) {
                                                                                                                parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "value", "value");
                                                                                                                parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percent", "percent");
                                                                                                                if (!parseObjectRef(_______________markupInfoChildElement, _______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                    BeanDefinitionBuilder ________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______________markupInfoChildElement, "price-level-ref");
                                                                                                                    if (________________priceLevelRefChildElement!= null) {
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "value", "value");
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "name", "name");
                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "type", "type");
                                                                                                                        _______________markupInfoBuilder.addPropertyValue("priceLevelRef", ________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                ____________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _______________markupInfoBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________salesOrderItemLineDetailBuilder, ____________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                        if (!parseObjectRef(____________salesOrderItemLineDetailChildElement, ____________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                            BeanDefinitionBuilder _______________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                            Element _______________uomRefChildElement = DomUtils.getChildElementByTagName(____________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                                            if (_______________uomRefChildElement!= null) {
                                                                                                                parseProperty(_______________uomRefBuilder, _______________uomRefChildElement, "unit", "unit");
                                                                                                                ____________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", _______________uomRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesOrderItemLineDetailChildElement, ____________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                            BeanDefinitionBuilder _______________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________itemAccountRefChildElement = DomUtils.getChildElementByTagName(____________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                            if (_______________itemAccountRefChildElement!= null) {
                                                                                                                parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________itemAccountRefBuilder, _______________itemAccountRefChildElement, "type", "type");
                                                                                                                ____________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _______________itemAccountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesOrderItemLineDetailChildElement, ____________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                            BeanDefinitionBuilder _______________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(____________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                            if (_______________inventorySiteRefChildElement!= null) {
                                                                                                                parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________inventorySiteRefBuilder, _______________inventorySiteRefChildElement, "type", "type");
                                                                                                                ____________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _______________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________salesOrderItemLineDetailChildElement, ____________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                            BeanDefinitionBuilder _______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(____________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                            if (_______________taxCodeRefChildElement!= null) {
                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "value", "value");
                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "name", "name");
                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "type", "type");
                                                                                                                ____________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________salesOrderItemLineDetailBuilder, ____________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                        builder.addPropertyValue("salesOrderItemLineDetail", ____________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                                    if (____________itemReceiptLineDetailChildElement!= null) {
                                                                                                        if (!parseObjectRef(____________itemReceiptLineDetailChildElement, ____________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(____________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                                            if (_____________itemReceiptLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________itemReceiptLineDetailExChildElement, _____________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", _____________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("itemReceiptLineDetail", ____________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                                    if (____________journalEntryLineDetailChildElement!= null) {
                                                                                                        parseProperty(____________journalEntryLineDetailBuilder, ____________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                                        if (!parseObjectRef(____________journalEntryLineDetailChildElement, ____________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                                            BeanDefinitionBuilder _____________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                                            Element _____________entityChildElement = DomUtils.getChildElementByTagName(____________journalEntryLineDetailChildElement, "entity");
                                                                                                            if (_____________entityChildElement!= null) {
                                                                                                                parseProperty(_____________entityBuilder, _____________entityChildElement, "type", "type");
                                                                                                                if (!parseObjectRef(_____________entityChildElement, _____________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                                    BeanDefinitionBuilder ______________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________entityRefChildElement = DomUtils.getChildElementByTagName(_____________entityChildElement, "entity-ref");
                                                                                                                    if (______________entityRefChildElement!= null) {
                                                                                                                        parseProperty(______________entityRefBuilder, ______________entityRefChildElement, "value", "value");
                                                                                                                        parseProperty(______________entityRefBuilder, ______________entityRefChildElement, "name", "name");
                                                                                                                        parseProperty(______________entityRefBuilder, ______________entityRefChildElement, "type", "type");
                                                                                                                        _____________entityBuilder.addPropertyValue("entityRef", ______________entityRefBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                ____________journalEntryLineDetailBuilder.addPropertyValue("entity", _____________entityBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________journalEntryLineDetailChildElement, ____________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                            BeanDefinitionBuilder _____________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________accountRefChildElement = DomUtils.getChildElementByTagName(____________journalEntryLineDetailChildElement, "account-ref");
                                                                                                            if (_____________accountRefChildElement!= null) {
                                                                                                                parseProperty(_____________accountRefBuilder, _____________accountRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________accountRefBuilder, _____________accountRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________accountRefBuilder, _____________accountRefChildElement, "type", "type");
                                                                                                                ____________journalEntryLineDetailBuilder.addPropertyValue("accountRef", _____________accountRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________journalEntryLineDetailChildElement, ____________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                            BeanDefinitionBuilder _____________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________classRefChildElement = DomUtils.getChildElementByTagName(____________journalEntryLineDetailChildElement, "class-ref");
                                                                                                            if (_____________classRefChildElement!= null) {
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________classRefBuilder, _____________classRefChildElement, "type", "type");
                                                                                                                ____________journalEntryLineDetailBuilder.addPropertyValue("classRef", _____________classRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________journalEntryLineDetailChildElement, ____________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                                            BeanDefinitionBuilder _____________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________departmentRefChildElement = DomUtils.getChildElementByTagName(____________journalEntryLineDetailChildElement, "department-ref");
                                                                                                            if (_____________departmentRefChildElement!= null) {
                                                                                                                parseProperty(_____________departmentRefBuilder, _____________departmentRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________departmentRefBuilder, _____________departmentRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________departmentRefBuilder, _____________departmentRefChildElement, "type", "type");
                                                                                                                ____________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", _____________departmentRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        if (!parseObjectRef(____________journalEntryLineDetailChildElement, ____________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                            BeanDefinitionBuilder _____________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________taxCodeRefChildElement = DomUtils.getChildElementByTagName(____________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                                            if (_____________taxCodeRefChildElement!= null) {
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________taxCodeRefBuilder, _____________taxCodeRefChildElement, "type", "type");
                                                                                                                ____________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", _____________taxCodeRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________journalEntryLineDetailBuilder, ____________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                                        parseProperty(____________journalEntryLineDetailBuilder, ____________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                        parseProperty(____________journalEntryLineDetailBuilder, ____________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                        if (!parseObjectRef(____________journalEntryLineDetailChildElement, ____________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(____________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                                            if (_____________journalEntryLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________journalEntryLineDetailExChildElement, _____________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", _____________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("journalEntryLineDetail", ____________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                                    if (____________groupLineDetailChildElement!= null) {
                                                                                                        if (!parseObjectRef(____________groupLineDetailChildElement, ____________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                                            BeanDefinitionBuilder _____________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________groupItemRefChildElement = DomUtils.getChildElementByTagName(____________groupLineDetailChildElement, "group-item-ref");
                                                                                                            if (_____________groupItemRefChildElement!= null) {
                                                                                                                parseProperty(_____________groupItemRefBuilder, _____________groupItemRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________groupItemRefBuilder, _____________groupItemRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________groupItemRefBuilder, _____________groupItemRefChildElement, "type", "type");
                                                                                                                ____________groupLineDetailBuilder.addPropertyValue("groupItemRef", _____________groupItemRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________groupLineDetailBuilder, ____________groupLineDetailChildElement, "quantity", "quantity");
                                                                                                        parseProperty(____________groupLineDetailBuilder, ____________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                        parseListAndSetProperty(____________groupLineDetailChildElement, ____________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                                                parseProperty(builder, element, "id", "id");
                                                                                                                parseProperty(builder, element, "lineNum", "lineNum");
                                                                                                                parseProperty(builder, element, "description", "description");
                                                                                                                parseProperty(builder, element, "amount", "amount");
                                                                                                                parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                                                        parseProperty(builder, element, "txnId", "txnId");
                                                                                                                        parseProperty(builder, element, "txnType", "txnType");
                                                                                                                        parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                                                        return builder.getBeanDefinition();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                parseProperty(builder, element, "detailType", "detailType");
                                                                                                                if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                                                    if (______________paymentLineDetailChildElement!= null) {
                                                                                                                        if (!parseObjectRef(______________paymentLineDetailChildElement, ______________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                            BeanDefinitionBuilder _______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________itemRefChildElement = DomUtils.getChildElementByTagName(______________paymentLineDetailChildElement, "item-ref");
                                                                                                                            if (_______________itemRefChildElement!= null) {
                                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "type", "type");
                                                                                                                                ______________paymentLineDetailBuilder.addPropertyValue("itemRef", _______________itemRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________paymentLineDetailBuilder, ______________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                        if (!parseObjectRef(______________paymentLineDetailChildElement, ______________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                            BeanDefinitionBuilder _______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________classRefChildElement = DomUtils.getChildElementByTagName(______________paymentLineDetailChildElement, "class-ref");
                                                                                                                            if (_______________classRefChildElement!= null) {
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "type", "type");
                                                                                                                                ______________paymentLineDetailBuilder.addPropertyValue("classRef", _______________classRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________paymentLineDetailBuilder, ______________paymentLineDetailChildElement, "balance", "balance");
                                                                                                                        if (!parseObjectRef(______________paymentLineDetailChildElement, ______________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                                                            BeanDefinitionBuilder _______________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                                                            Element _______________discountChildElement = DomUtils.getChildElementByTagName(______________paymentLineDetailChildElement, "discount");
                                                                                                                            if (_______________discountChildElement!= null) {
                                                                                                                                if (!parseObjectRef(_______________discountChildElement, _______________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________discountRefChildElement = DomUtils.getChildElementByTagName(_______________discountChildElement, "discount-ref");
                                                                                                                                    if (________________discountRefChildElement!= null) {
                                                                                                                                        parseProperty(________________discountRefBuilder, ________________discountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________discountRefBuilder, ________________discountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________discountRefBuilder, ________________discountRefChildElement, "type", "type");
                                                                                                                                        _______________discountBuilder.addPropertyValue("discountRef", ________________discountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseProperty(_______________discountBuilder, _______________discountChildElement, "percentBased", "percentBased");
                                                                                                                                parseProperty(_______________discountBuilder, _______________discountChildElement, "discountPercent", "discountPercent");
                                                                                                                                if (!parseObjectRef(_______________discountChildElement, _______________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_______________discountChildElement, "discount-account-ref");
                                                                                                                                    if (________________discountAccountRefChildElement!= null) {
                                                                                                                                        parseProperty(________________discountAccountRefBuilder, ________________discountAccountRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________discountAccountRefBuilder, ________________discountAccountRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________discountAccountRefBuilder, ________________discountAccountRefChildElement, "type", "type");
                                                                                                                                        _______________discountBuilder.addPropertyValue("discountAccountRef", ________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                ______________paymentLineDetailBuilder.addPropertyValue("discount", _______________discountBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________paymentLineDetailChildElement, ______________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                                                            BeanDefinitionBuilder _______________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________paymentLineExChildElement = DomUtils.getChildElementByTagName(______________paymentLineDetailChildElement, "payment-line-ex");
                                                                                                                            if (_______________paymentLineExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________paymentLineExChildElement, _______________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", _______________paymentLineExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("paymentLineDetail", ______________paymentLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                                                    if (______________discountLineDetailChildElement!= null) {
                                                                                                                        parseProperty(______________discountLineDetailBuilder, ______________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                        if (!parseObjectRef(______________discountLineDetailChildElement, ______________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                                                            BeanDefinitionBuilder ________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________discountRefChildElement = DomUtils.getChildElementByTagName(______________discountLineDetailChildElement, "discount-ref");
                                                                                                                            if (________________discountRefChildElement!= null) {
                                                                                                                                parseProperty(________________discountRefBuilder, ________________discountRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________discountRefBuilder, ________________discountRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________discountRefBuilder, ________________discountRefChildElement, "type", "type");
                                                                                                                                ______________discountLineDetailBuilder.addPropertyValue("discountRef", ________________discountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________discountLineDetailBuilder, ______________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                        parseProperty(______________discountLineDetailBuilder, ______________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                                                        if (!parseObjectRef(______________discountLineDetailChildElement, ______________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                            BeanDefinitionBuilder ________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(______________discountLineDetailChildElement, "discount-account-ref");
                                                                                                                            if (________________discountAccountRefChildElement!= null) {
                                                                                                                                parseProperty(________________discountAccountRefBuilder, ________________discountAccountRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________discountAccountRefBuilder, ________________discountAccountRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________discountAccountRefBuilder, ________________discountAccountRefChildElement, "type", "type");
                                                                                                                                ______________discountLineDetailBuilder.addPropertyValue("discountAccountRef", ________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________discountLineDetailBuilder, ______________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                        if (!parseObjectRef(______________discountLineDetailChildElement, ______________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                            BeanDefinitionBuilder _______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________classRefChildElement = DomUtils.getChildElementByTagName(______________discountLineDetailChildElement, "class-ref");
                                                                                                                            if (_______________classRefChildElement!= null) {
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "type", "type");
                                                                                                                                ______________discountLineDetailBuilder.addPropertyValue("classRef", _______________classRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________discountLineDetailChildElement, ______________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                            BeanDefinitionBuilder _______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______________discountLineDetailChildElement, "tax-code-ref");
                                                                                                                            if (_______________taxCodeRefChildElement!= null) {
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "type", "type");
                                                                                                                                ______________discountLineDetailBuilder.addPropertyValue("taxCodeRef", _______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________discountLineDetailChildElement, ______________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(______________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                                                            if (_______________discountLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________discountLineDetailExChildElement, _______________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", _______________discountLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("discountLineDetail", ______________discountLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                                                    if (______________taxLineDetailChildElement!= null) {
                                                                                                                        if (!parseObjectRef(______________taxLineDetailChildElement, ______________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                                                            BeanDefinitionBuilder _______________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________taxRateRefChildElement = DomUtils.getChildElementByTagName(______________taxLineDetailChildElement, "tax-rate-ref");
                                                                                                                            if (_______________taxRateRefChildElement!= null) {
                                                                                                                                parseProperty(_______________taxRateRefBuilder, _______________taxRateRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________taxRateRefBuilder, _______________taxRateRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________taxRateRefBuilder, _______________taxRateRefChildElement, "type", "type");
                                                                                                                                ______________taxLineDetailBuilder.addPropertyValue("taxRateRef", _______________taxRateRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________taxLineDetailBuilder, ______________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                        parseProperty(______________taxLineDetailBuilder, ______________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                                                        parseProperty(______________taxLineDetailBuilder, ______________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                                                        parseProperty(______________taxLineDetailBuilder, ______________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                                                        parseProperty(______________taxLineDetailBuilder, ______________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                                                        parseProperty(______________taxLineDetailBuilder, ______________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                        if (!parseObjectRef(______________taxLineDetailChildElement, ______________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(______________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                                                            if (_______________taxLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________taxLineDetailExChildElement, _______________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", _______________taxLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("taxLineDetail", ______________taxLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                                                    if (______________salesItemLineDetailChildElement!= null) {
                                                                                                                        parseProperty(______________salesItemLineDetailBuilder, ______________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                        if (!parseObjectRef(______________salesItemLineDetailChildElement, ______________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                            BeanDefinitionBuilder ________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________itemRefChildElement = DomUtils.getChildElementByTagName(______________salesItemLineDetailChildElement, "item-ref");
                                                                                                                            if (________________itemRefChildElement!= null) {
                                                                                                                                parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "type", "type");
                                                                                                                                ______________salesItemLineDetailBuilder.addPropertyValue("itemRef", ________________itemRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesItemLineDetailChildElement, ______________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                            BeanDefinitionBuilder ________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________classRefChildElement = DomUtils.getChildElementByTagName(______________salesItemLineDetailChildElement, "class-ref");
                                                                                                                            if (________________classRefChildElement!= null) {
                                                                                                                                parseProperty(________________classRefBuilder, ________________classRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________classRefBuilder, ________________classRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________classRefBuilder, ________________classRefChildElement, "type", "type");
                                                                                                                                ______________salesItemLineDetailBuilder.addPropertyValue("classRef", ________________classRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________salesItemLineDetailBuilder, ______________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                        parseProperty(______________salesItemLineDetailBuilder, ______________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                        if (!parseObjectRef(______________salesItemLineDetailChildElement, ______________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                            BeanDefinitionBuilder ________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________salesItemLineDetailChildElement, "price-level-ref");
                                                                                                                            if (________________priceLevelRefChildElement!= null) {
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "type", "type");
                                                                                                                                ______________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", ________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesItemLineDetailChildElement, ______________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                            BeanDefinitionBuilder ________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                            Element ________________markupInfoChildElement = DomUtils.getChildElementByTagName(______________salesItemLineDetailChildElement, "markup-info");
                                                                                                                            if (________________markupInfoChildElement!= null) {
                                                                                                                                parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "value", "value");
                                                                                                                                parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percent", "percent");
                                                                                                                                if (!parseObjectRef(________________markupInfoChildElement, ________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________________markupInfoChildElement, "price-level-ref");
                                                                                                                                    if (_________________priceLevelRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "type", "type");
                                                                                                                                        ________________markupInfoBuilder.addPropertyValue("priceLevelRef", _________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                ______________salesItemLineDetailBuilder.addPropertyValue("markupInfo", ________________markupInfoBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________salesItemLineDetailBuilder, ______________salesItemLineDetailChildElement, "qty", "qty");
                                                                                                                        if (!parseObjectRef(______________salesItemLineDetailChildElement, ______________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                            BeanDefinitionBuilder ________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                            Element ________________uomRefChildElement = DomUtils.getChildElementByTagName(______________salesItemLineDetailChildElement, "uom-ref");
                                                                                                                            if (________________uomRefChildElement!= null) {
                                                                                                                                parseProperty(________________uomRefBuilder, ________________uomRefChildElement, "unit", "unit");
                                                                                                                                ______________salesItemLineDetailBuilder.addPropertyValue("uomRef", ________________uomRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesItemLineDetailChildElement, ______________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                            BeanDefinitionBuilder ________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(______________salesItemLineDetailChildElement, "item-account-ref");
                                                                                                                            if (________________itemAccountRefChildElement!= null) {
                                                                                                                                parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "type", "type");
                                                                                                                                ______________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", ________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesItemLineDetailChildElement, ______________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                            BeanDefinitionBuilder ________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(______________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                            if (________________inventorySiteRefChildElement!= null) {
                                                                                                                                parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                ______________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesItemLineDetailChildElement, ______________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                            BeanDefinitionBuilder ________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                                                            if (________________taxCodeRefChildElement!= null) {
                                                                                                                                parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "type", "type");
                                                                                                                                ______________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", ________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________salesItemLineDetailBuilder, ______________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                        parseProperty(______________salesItemLineDetailBuilder, ______________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                        if (!parseObjectRef(______________salesItemLineDetailChildElement, ______________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(______________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                            if (_______________salesItemLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________salesItemLineDetailExChildElement, _______________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _______________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("salesItemLineDetail", ______________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                                                    if (______________descriptionLineDetailChildElement!= null) {
                                                                                                                        parseProperty(______________descriptionLineDetailBuilder, ______________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                        if (!parseObjectRef(______________descriptionLineDetailChildElement, ______________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                            BeanDefinitionBuilder _______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                                                            if (_______________taxCodeRefChildElement!= null) {
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "type", "type");
                                                                                                                                ______________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", _______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________descriptionLineDetailChildElement, ______________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(______________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                                                            if (_______________descriptionLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________descriptionLineDetailExChildElement, _______________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", _______________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("descriptionLineDetail", ______________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                                                    if (______________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                                                        parseProperty(______________itemBasedExpenseLineDetailBuilder, ______________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                            BeanDefinitionBuilder ________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________itemRefChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                                                            if (________________itemRefChildElement!= null) {
                                                                                                                                parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________itemRefBuilder, ________________itemRefChildElement, "type", "type");
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", ________________itemRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                            BeanDefinitionBuilder ________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________classRefChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                            if (________________classRefChildElement!= null) {
                                                                                                                                parseProperty(________________classRefBuilder, ________________classRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________classRefBuilder, ________________classRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________classRefBuilder, ________________classRefChildElement, "type", "type");
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ________________classRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________itemBasedExpenseLineDetailBuilder, ______________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                        parseProperty(______________itemBasedExpenseLineDetailBuilder, ______________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                            BeanDefinitionBuilder ________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                                                            if (________________priceLevelRefChildElement!= null) {
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "type", "type");
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", ________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                            BeanDefinitionBuilder ________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                            Element ________________markupInfoChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                            if (________________markupInfoChildElement!= null) {
                                                                                                                                parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "value", "value");
                                                                                                                                parseProperty(________________markupInfoBuilder, ________________markupInfoChildElement, "percent", "percent");
                                                                                                                                if (!parseObjectRef(________________markupInfoChildElement, ________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                    BeanDefinitionBuilder _________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element _________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________________markupInfoChildElement, "price-level-ref");
                                                                                                                                    if (_________________priceLevelRefChildElement!= null) {
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "value", "value");
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "name", "name");
                                                                                                                                        parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "type", "type");
                                                                                                                                        ________________markupInfoBuilder.addPropertyValue("priceLevelRef", _________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ________________markupInfoBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________itemBasedExpenseLineDetailBuilder, ______________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                            BeanDefinitionBuilder ________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                            Element ________________uomRefChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                                                            if (________________uomRefChildElement!= null) {
                                                                                                                                parseProperty(________________uomRefBuilder, ________________uomRefChildElement, "unit", "unit");
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", ________________uomRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                            BeanDefinitionBuilder ________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                                                            if (________________itemAccountRefChildElement!= null) {
                                                                                                                                parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________itemAccountRefBuilder, ________________itemAccountRefChildElement, "type", "type");
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", ________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                            BeanDefinitionBuilder ________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                                                            if (________________inventorySiteRefChildElement!= null) {
                                                                                                                                parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________inventorySiteRefBuilder, ________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", ________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                            BeanDefinitionBuilder ________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                            if (________________taxCodeRefChildElement!= null) {
                                                                                                                                parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "value", "value");
                                                                                                                                parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "name", "name");
                                                                                                                                parseProperty(________________taxCodeRefBuilder, ________________taxCodeRefChildElement, "type", "type");
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                            BeanDefinitionBuilder _______________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________customerRefChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                            if (_______________customerRefChildElement!= null) {
                                                                                                                                parseProperty(_______________customerRefBuilder, _______________customerRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________customerRefBuilder, _______________customerRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________customerRefBuilder, _______________customerRefChildElement, "type", "type");
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _______________customerRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________itemBasedExpenseLineDetailBuilder, ______________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                        parseProperty(______________itemBasedExpenseLineDetailBuilder, ______________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                        if (!parseObjectRef(______________itemBasedExpenseLineDetailChildElement, ______________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(______________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                                                            if (_______________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________itemBasedExpenseLineDetailExChildElement, _______________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", _______________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("itemBasedExpenseLineDetail", ______________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                                                    if (______________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                                                        if (!parseObjectRef(______________accountBasedExpenseLineDetailChildElement, ______________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                            BeanDefinitionBuilder _______________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________customerRefChildElement = DomUtils.getChildElementByTagName(______________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                            if (_______________customerRefChildElement!= null) {
                                                                                                                                parseProperty(_______________customerRefBuilder, _______________customerRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________customerRefBuilder, _______________customerRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________customerRefBuilder, _______________customerRefChildElement, "type", "type");
                                                                                                                                ______________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _______________customerRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________accountBasedExpenseLineDetailChildElement, ______________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                            BeanDefinitionBuilder _______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________classRefChildElement = DomUtils.getChildElementByTagName(______________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                            if (_______________classRefChildElement!= null) {
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "type", "type");
                                                                                                                                ______________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _______________classRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________accountBasedExpenseLineDetailChildElement, ______________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                            BeanDefinitionBuilder _______________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________accountRefChildElement = DomUtils.getChildElementByTagName(______________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                                                            if (_______________accountRefChildElement!= null) {
                                                                                                                                parseProperty(_______________accountRefBuilder, _______________accountRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________accountRefBuilder, _______________accountRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________accountRefBuilder, _______________accountRefChildElement, "type", "type");
                                                                                                                                ______________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", _______________accountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________accountBasedExpenseLineDetailBuilder, ______________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                        if (!parseObjectRef(______________accountBasedExpenseLineDetailChildElement, ______________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                            BeanDefinitionBuilder _______________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                            Element _______________markupInfoChildElement = DomUtils.getChildElementByTagName(______________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                            if (_______________markupInfoChildElement!= null) {
                                                                                                                                parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "value", "value");
                                                                                                                                parseProperty(_______________markupInfoBuilder, _______________markupInfoChildElement, "percent", "percent");
                                                                                                                                if (!parseObjectRef(_______________markupInfoChildElement, _______________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_______________markupInfoChildElement, "price-level-ref");
                                                                                                                                    if (________________priceLevelRefChildElement!= null) {
                                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________priceLevelRefBuilder, ________________priceLevelRefChildElement, "type", "type");
                                                                                                                                        _______________markupInfoBuilder.addPropertyValue("priceLevelRef", ________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                ______________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _______________markupInfoBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________accountBasedExpenseLineDetailBuilder, ______________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                        if (!parseObjectRef(______________accountBasedExpenseLineDetailChildElement, ______________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                            BeanDefinitionBuilder _______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                            if (_______________taxCodeRefChildElement!= null) {
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "type", "type");
                                                                                                                                ______________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________accountBasedExpenseLineDetailBuilder, ______________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                        if (!parseObjectRef(______________accountBasedExpenseLineDetailChildElement, ______________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(______________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                                                            if (_______________expenseDetailLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________expenseDetailLineDetailExChildElement, _______________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", _______________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("accountBasedExpenseLineDetail", ______________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                                                    if (______________depositLineDetailChildElement!= null) {
                                                                                                                        if (!parseObjectRef(______________depositLineDetailChildElement, ______________depositLineDetailBuilder, "entity", "entity")) {
                                                                                                                            BeanDefinitionBuilder _______________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________entityChildElement = DomUtils.getChildElementByTagName(______________depositLineDetailChildElement, "entity");
                                                                                                                            if (_______________entityChildElement!= null) {
                                                                                                                                parseProperty(_______________entityBuilder, _______________entityChildElement, "value", "value");
                                                                                                                                parseProperty(_______________entityBuilder, _______________entityChildElement, "name", "name");
                                                                                                                                parseProperty(_______________entityBuilder, _______________entityChildElement, "type", "type");
                                                                                                                                ______________depositLineDetailBuilder.addPropertyValue("entity", _______________entityBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________depositLineDetailChildElement, ______________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                            BeanDefinitionBuilder _______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________classRefChildElement = DomUtils.getChildElementByTagName(______________depositLineDetailChildElement, "class-ref");
                                                                                                                            if (_______________classRefChildElement!= null) {
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "type", "type");
                                                                                                                                ______________depositLineDetailBuilder.addPropertyValue("classRef", _______________classRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________depositLineDetailChildElement, ______________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                            BeanDefinitionBuilder _______________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________accountRefChildElement = DomUtils.getChildElementByTagName(______________depositLineDetailChildElement, "account-ref");
                                                                                                                            if (_______________accountRefChildElement!= null) {
                                                                                                                                parseProperty(_______________accountRefBuilder, _______________accountRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________accountRefBuilder, _______________accountRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________accountRefBuilder, _______________accountRefChildElement, "type", "type");
                                                                                                                                ______________depositLineDetailBuilder.addPropertyValue("accountRef", _______________accountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________depositLineDetailChildElement, ______________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                                                            BeanDefinitionBuilder _______________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(______________depositLineDetailChildElement, "payment-method-ref");
                                                                                                                            if (_______________paymentMethodRefChildElement!= null) {
                                                                                                                                parseProperty(_______________paymentMethodRefBuilder, _______________paymentMethodRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________paymentMethodRefBuilder, _______________paymentMethodRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________paymentMethodRefBuilder, _______________paymentMethodRefChildElement, "type", "type");
                                                                                                                                ______________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", _______________paymentMethodRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________depositLineDetailBuilder, ______________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                                                        parseProperty(______________depositLineDetailBuilder, ______________depositLineDetailChildElement, "txnType", "txnType");
                                                                                                                        if (!parseObjectRef(______________depositLineDetailChildElement, ______________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(______________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                                                            if (_______________depositLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________depositLineDetailExChildElement, _______________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", _______________depositLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("depositLineDetail", ______________depositLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                                                    if (______________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder ________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                            if (________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(________________salesItemLineDetailExChildElement, ________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                            BeanDefinitionBuilder _________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________itemRefChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                                                            if (_________________itemRefChildElement!= null) {
                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "type", "type");
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", _________________itemRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                            BeanDefinitionBuilder _________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________classRefChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                                                            if (_________________classRefChildElement!= null) {
                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "type", "type");
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", _________________classRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                            BeanDefinitionBuilder _________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                            if (_________________priceLevelRefChildElement!= null) {
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "type", "type");
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                            BeanDefinitionBuilder _________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                            Element _________________markupInfoChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                                                            if (_________________markupInfoChildElement!= null) {
                                                                                                                                parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "value", "value");
                                                                                                                                parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percent", "percent");
                                                                                                                                if (!parseObjectRef(_________________markupInfoChildElement, _________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________________markupInfoChildElement, "price-level-ref");
                                                                                                                                    if (__________________priceLevelRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "type", "type");
                                                                                                                                        _________________markupInfoBuilder.addPropertyValue("priceLevelRef", __________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _________________markupInfoBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                            BeanDefinitionBuilder _________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                            Element _________________uomRefChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                            if (_________________uomRefChildElement!= null) {
                                                                                                                                parseProperty(_________________uomRefBuilder, _________________uomRefChildElement, "unit", "unit");
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", _________________uomRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                            BeanDefinitionBuilder _________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                            if (_________________itemAccountRefChildElement!= null) {
                                                                                                                                parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "type", "type");
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                            BeanDefinitionBuilder _________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                            if (_________________inventorySiteRefChildElement!= null) {
                                                                                                                                parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                            BeanDefinitionBuilder _________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                            if (_________________taxCodeRefChildElement!= null) {
                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "type", "type");
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                        parseProperty(______________purchaseOrderItemLineDetailBuilder, ______________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                                                        if (!parseObjectRef(______________purchaseOrderItemLineDetailChildElement, ______________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(______________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                                                            if (_______________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________purchaseOrderItemLineDetailExChildElement, _______________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", _______________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("purchaseOrderItemLineDetail", ______________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                                                    if (______________salesOrderItemLineDetailChildElement!= null) {
                                                                                                                        parseProperty(______________salesOrderItemLineDetailBuilder, ______________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                        parseProperty(______________salesOrderItemLineDetailBuilder, ______________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                        parseProperty(______________salesOrderItemLineDetailBuilder, ______________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                        if (!parseObjectRef(______________salesOrderItemLineDetailChildElement, ______________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder ________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element ________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(______________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                            if (________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(________________salesItemLineDetailExChildElement, ________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________salesOrderItemLineDetailBuilder, ______________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                        if (!parseObjectRef(______________salesOrderItemLineDetailChildElement, ______________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                            BeanDefinitionBuilder _________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________itemRefChildElement = DomUtils.getChildElementByTagName(______________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                                                            if (_________________itemRefChildElement!= null) {
                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "type", "type");
                                                                                                                                ______________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", _________________itemRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesOrderItemLineDetailChildElement, ______________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                            BeanDefinitionBuilder _________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________classRefChildElement = DomUtils.getChildElementByTagName(______________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                                                            if (_________________classRefChildElement!= null) {
                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "type", "type");
                                                                                                                                ______________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", _________________classRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________salesOrderItemLineDetailBuilder, ______________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                        parseProperty(______________salesOrderItemLineDetailBuilder, ______________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                        if (!parseObjectRef(______________salesOrderItemLineDetailChildElement, ______________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                            BeanDefinitionBuilder _________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(______________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                            if (_________________priceLevelRefChildElement!= null) {
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________priceLevelRefBuilder, _________________priceLevelRefChildElement, "type", "type");
                                                                                                                                ______________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesOrderItemLineDetailChildElement, ______________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                            BeanDefinitionBuilder _________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                            Element _________________markupInfoChildElement = DomUtils.getChildElementByTagName(______________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                                                            if (_________________markupInfoChildElement!= null) {
                                                                                                                                parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "value", "value");
                                                                                                                                parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percent", "percent");
                                                                                                                                if (!parseObjectRef(_________________markupInfoChildElement, _________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                    BeanDefinitionBuilder __________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element __________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________________markupInfoChildElement, "price-level-ref");
                                                                                                                                    if (__________________priceLevelRefChildElement!= null) {
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "value", "value");
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "name", "name");
                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "type", "type");
                                                                                                                                        _________________markupInfoBuilder.addPropertyValue("priceLevelRef", __________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                ______________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _________________markupInfoBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________salesOrderItemLineDetailBuilder, ______________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                        if (!parseObjectRef(______________salesOrderItemLineDetailChildElement, ______________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                            BeanDefinitionBuilder _________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                            Element _________________uomRefChildElement = DomUtils.getChildElementByTagName(______________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                            if (_________________uomRefChildElement!= null) {
                                                                                                                                parseProperty(_________________uomRefBuilder, _________________uomRefChildElement, "unit", "unit");
                                                                                                                                ______________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", _________________uomRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesOrderItemLineDetailChildElement, ______________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                            BeanDefinitionBuilder _________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(______________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                            if (_________________itemAccountRefChildElement!= null) {
                                                                                                                                parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________itemAccountRefBuilder, _________________itemAccountRefChildElement, "type", "type");
                                                                                                                                ______________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesOrderItemLineDetailChildElement, ______________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                            BeanDefinitionBuilder _________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(______________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                            if (_________________inventorySiteRefChildElement!= null) {
                                                                                                                                parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________inventorySiteRefBuilder, _________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                ______________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________salesOrderItemLineDetailChildElement, ______________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                            BeanDefinitionBuilder _________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                            if (_________________taxCodeRefChildElement!= null) {
                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "value", "value");
                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "name", "name");
                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "type", "type");
                                                                                                                                ______________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________salesOrderItemLineDetailBuilder, ______________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                        builder.addPropertyValue("salesOrderItemLineDetail", ______________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                                                    if (______________itemReceiptLineDetailChildElement!= null) {
                                                                                                                        if (!parseObjectRef(______________itemReceiptLineDetailChildElement, ______________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(______________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                                                            if (_______________itemReceiptLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________itemReceiptLineDetailExChildElement, _______________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", _______________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("itemReceiptLineDetail", ______________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                                                    if (______________journalEntryLineDetailChildElement!= null) {
                                                                                                                        parseProperty(______________journalEntryLineDetailBuilder, ______________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                                                        if (!parseObjectRef(______________journalEntryLineDetailChildElement, ______________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                                                            BeanDefinitionBuilder _______________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                                                            Element _______________entityChildElement = DomUtils.getChildElementByTagName(______________journalEntryLineDetailChildElement, "entity");
                                                                                                                            if (_______________entityChildElement!= null) {
                                                                                                                                parseProperty(_______________entityBuilder, _______________entityChildElement, "type", "type");
                                                                                                                                if (!parseObjectRef(_______________entityChildElement, _______________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                                                    BeanDefinitionBuilder ________________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________entityRefChildElement = DomUtils.getChildElementByTagName(_______________entityChildElement, "entity-ref");
                                                                                                                                    if (________________entityRefChildElement!= null) {
                                                                                                                                        parseProperty(________________entityRefBuilder, ________________entityRefChildElement, "value", "value");
                                                                                                                                        parseProperty(________________entityRefBuilder, ________________entityRefChildElement, "name", "name");
                                                                                                                                        parseProperty(________________entityRefBuilder, ________________entityRefChildElement, "type", "type");
                                                                                                                                        _______________entityBuilder.addPropertyValue("entityRef", ________________entityRefBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                ______________journalEntryLineDetailBuilder.addPropertyValue("entity", _______________entityBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________journalEntryLineDetailChildElement, ______________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                            BeanDefinitionBuilder _______________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________accountRefChildElement = DomUtils.getChildElementByTagName(______________journalEntryLineDetailChildElement, "account-ref");
                                                                                                                            if (_______________accountRefChildElement!= null) {
                                                                                                                                parseProperty(_______________accountRefBuilder, _______________accountRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________accountRefBuilder, _______________accountRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________accountRefBuilder, _______________accountRefChildElement, "type", "type");
                                                                                                                                ______________journalEntryLineDetailBuilder.addPropertyValue("accountRef", _______________accountRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________journalEntryLineDetailChildElement, ______________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                            BeanDefinitionBuilder _______________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________classRefChildElement = DomUtils.getChildElementByTagName(______________journalEntryLineDetailChildElement, "class-ref");
                                                                                                                            if (_______________classRefChildElement!= null) {
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________classRefBuilder, _______________classRefChildElement, "type", "type");
                                                                                                                                ______________journalEntryLineDetailBuilder.addPropertyValue("classRef", _______________classRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________journalEntryLineDetailChildElement, ______________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                                                            BeanDefinitionBuilder _______________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________departmentRefChildElement = DomUtils.getChildElementByTagName(______________journalEntryLineDetailChildElement, "department-ref");
                                                                                                                            if (_______________departmentRefChildElement!= null) {
                                                                                                                                parseProperty(_______________departmentRefBuilder, _______________departmentRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________departmentRefBuilder, _______________departmentRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________departmentRefBuilder, _______________departmentRefChildElement, "type", "type");
                                                                                                                                ______________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", _______________departmentRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        if (!parseObjectRef(______________journalEntryLineDetailChildElement, ______________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                            BeanDefinitionBuilder _______________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________taxCodeRefChildElement = DomUtils.getChildElementByTagName(______________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                                                            if (_______________taxCodeRefChildElement!= null) {
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________taxCodeRefBuilder, _______________taxCodeRefChildElement, "type", "type");
                                                                                                                                ______________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", _______________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________journalEntryLineDetailBuilder, ______________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                                                        parseProperty(______________journalEntryLineDetailBuilder, ______________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                        parseProperty(______________journalEntryLineDetailBuilder, ______________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                        if (!parseObjectRef(______________journalEntryLineDetailChildElement, ______________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(______________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                                                            if (_______________journalEntryLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________journalEntryLineDetailExChildElement, _______________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", _______________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("journalEntryLineDetail", ______________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                                                    if (______________groupLineDetailChildElement!= null) {
                                                                                                                        if (!parseObjectRef(______________groupLineDetailChildElement, ______________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                                                            BeanDefinitionBuilder _______________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________groupItemRefChildElement = DomUtils.getChildElementByTagName(______________groupLineDetailChildElement, "group-item-ref");
                                                                                                                            if (_______________groupItemRefChildElement!= null) {
                                                                                                                                parseProperty(_______________groupItemRefBuilder, _______________groupItemRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________groupItemRefBuilder, _______________groupItemRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________groupItemRefBuilder, _______________groupItemRefChildElement, "type", "type");
                                                                                                                                ______________groupLineDetailBuilder.addPropertyValue("groupItemRef", _______________groupItemRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________groupLineDetailBuilder, ______________groupLineDetailChildElement, "quantity", "quantity");
                                                                                                                        parseProperty(______________groupLineDetailBuilder, ______________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                        parseListAndSetProperty(______________groupLineDetailChildElement, ______________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                                                                parseProperty(builder, element, "id", "id");
                                                                                                                                parseProperty(builder, element, "lineNum", "lineNum");
                                                                                                                                parseProperty(builder, element, "description", "description");
                                                                                                                                parseProperty(builder, element, "amount", "amount");
                                                                                                                                parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                                                                        parseProperty(builder, element, "txnId", "txnId");
                                                                                                                                        parseProperty(builder, element, "txnType", "txnType");
                                                                                                                                        parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                                                                        return builder.getBeanDefinition();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                parseProperty(builder, element, "detailType", "detailType");
                                                                                                                                if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                                                                    if (________________paymentLineDetailChildElement!= null) {
                                                                                                                                        if (!parseObjectRef(________________paymentLineDetailChildElement, ________________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________itemRefChildElement = DomUtils.getChildElementByTagName(________________paymentLineDetailChildElement, "item-ref");
                                                                                                                                            if (_________________itemRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "type", "type");
                                                                                                                                                ________________paymentLineDetailBuilder.addPropertyValue("itemRef", _________________itemRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________paymentLineDetailBuilder, ________________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                        if (!parseObjectRef(________________paymentLineDetailChildElement, ________________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________classRefChildElement = DomUtils.getChildElementByTagName(________________paymentLineDetailChildElement, "class-ref");
                                                                                                                                            if (_________________classRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "type", "type");
                                                                                                                                                ________________paymentLineDetailBuilder.addPropertyValue("classRef", _________________classRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________paymentLineDetailBuilder, ________________paymentLineDetailChildElement, "balance", "balance");
                                                                                                                                        if (!parseObjectRef(________________paymentLineDetailChildElement, ________________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                                                                            BeanDefinitionBuilder _________________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                                                                            Element _________________discountChildElement = DomUtils.getChildElementByTagName(________________paymentLineDetailChildElement, "discount");
                                                                                                                                            if (_________________discountChildElement!= null) {
                                                                                                                                                if (!parseObjectRef(_________________discountChildElement, _________________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________discountRefChildElement = DomUtils.getChildElementByTagName(_________________discountChildElement, "discount-ref");
                                                                                                                                                    if (__________________discountRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________discountRefBuilder, __________________discountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________discountRefBuilder, __________________discountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________discountRefBuilder, __________________discountRefChildElement, "type", "type");
                                                                                                                                                        _________________discountBuilder.addPropertyValue("discountRef", __________________discountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseProperty(_________________discountBuilder, _________________discountChildElement, "percentBased", "percentBased");
                                                                                                                                                parseProperty(_________________discountBuilder, _________________discountChildElement, "discountPercent", "discountPercent");
                                                                                                                                                if (!parseObjectRef(_________________discountChildElement, _________________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(_________________discountChildElement, "discount-account-ref");
                                                                                                                                                    if (__________________discountAccountRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________discountAccountRefBuilder, __________________discountAccountRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________discountAccountRefBuilder, __________________discountAccountRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________discountAccountRefBuilder, __________________discountAccountRefChildElement, "type", "type");
                                                                                                                                                        _________________discountBuilder.addPropertyValue("discountAccountRef", __________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                ________________paymentLineDetailBuilder.addPropertyValue("discount", _________________discountBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________paymentLineDetailChildElement, ________________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________paymentLineExChildElement = DomUtils.getChildElementByTagName(________________paymentLineDetailChildElement, "payment-line-ex");
                                                                                                                                            if (_________________paymentLineExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________paymentLineExChildElement, _________________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", _________________paymentLineExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("paymentLineDetail", ________________paymentLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                                                                    if (________________discountLineDetailChildElement!= null) {
                                                                                                                                        parseProperty(________________discountLineDetailBuilder, ________________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                        if (!parseObjectRef(________________discountLineDetailChildElement, ________________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________discountRefChildElement = DomUtils.getChildElementByTagName(________________discountLineDetailChildElement, "discount-ref");
                                                                                                                                            if (__________________discountRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________discountRefBuilder, __________________discountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________discountRefBuilder, __________________discountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________discountRefBuilder, __________________discountRefChildElement, "type", "type");
                                                                                                                                                ________________discountLineDetailBuilder.addPropertyValue("discountRef", __________________discountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________discountLineDetailBuilder, ________________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                        parseProperty(________________discountLineDetailBuilder, ________________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                                                                        if (!parseObjectRef(________________discountLineDetailChildElement, ________________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(________________discountLineDetailChildElement, "discount-account-ref");
                                                                                                                                            if (__________________discountAccountRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________discountAccountRefBuilder, __________________discountAccountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________discountAccountRefBuilder, __________________discountAccountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________discountAccountRefBuilder, __________________discountAccountRefChildElement, "type", "type");
                                                                                                                                                ________________discountLineDetailBuilder.addPropertyValue("discountAccountRef", __________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________discountLineDetailBuilder, ________________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                        if (!parseObjectRef(________________discountLineDetailChildElement, ________________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________classRefChildElement = DomUtils.getChildElementByTagName(________________discountLineDetailChildElement, "class-ref");
                                                                                                                                            if (_________________classRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "type", "type");
                                                                                                                                                ________________discountLineDetailBuilder.addPropertyValue("classRef", _________________classRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________discountLineDetailChildElement, ________________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________________discountLineDetailChildElement, "tax-code-ref");
                                                                                                                                            if (_________________taxCodeRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                ________________discountLineDetailBuilder.addPropertyValue("taxCodeRef", _________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________discountLineDetailChildElement, ________________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(________________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                                                                            if (_________________discountLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________discountLineDetailExChildElement, _________________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", _________________discountLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("discountLineDetail", ________________discountLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                                                                    if (________________taxLineDetailChildElement!= null) {
                                                                                                                                        if (!parseObjectRef(________________taxLineDetailChildElement, ________________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________taxRateRefChildElement = DomUtils.getChildElementByTagName(________________taxLineDetailChildElement, "tax-rate-ref");
                                                                                                                                            if (_________________taxRateRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________taxRateRefBuilder, _________________taxRateRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________taxRateRefBuilder, _________________taxRateRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________taxRateRefBuilder, _________________taxRateRefChildElement, "type", "type");
                                                                                                                                                ________________taxLineDetailBuilder.addPropertyValue("taxRateRef", _________________taxRateRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________taxLineDetailBuilder, ________________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                        parseProperty(________________taxLineDetailBuilder, ________________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                                                                        parseProperty(________________taxLineDetailBuilder, ________________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                                                                        parseProperty(________________taxLineDetailBuilder, ________________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                                                                        parseProperty(________________taxLineDetailBuilder, ________________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                                                                        parseProperty(________________taxLineDetailBuilder, ________________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                        if (!parseObjectRef(________________taxLineDetailChildElement, ________________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(________________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                                                                            if (_________________taxLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________taxLineDetailExChildElement, _________________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", _________________taxLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("taxLineDetail", ________________taxLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                                                                    if (________________salesItemLineDetailChildElement!= null) {
                                                                                                                                        parseProperty(________________salesItemLineDetailBuilder, ________________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                        if (!parseObjectRef(________________salesItemLineDetailChildElement, ________________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________itemRefChildElement = DomUtils.getChildElementByTagName(________________salesItemLineDetailChildElement, "item-ref");
                                                                                                                                            if (__________________itemRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "type", "type");
                                                                                                                                                ________________salesItemLineDetailBuilder.addPropertyValue("itemRef", __________________itemRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesItemLineDetailChildElement, ________________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________classRefChildElement = DomUtils.getChildElementByTagName(________________salesItemLineDetailChildElement, "class-ref");
                                                                                                                                            if (__________________classRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________classRefBuilder, __________________classRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________classRefBuilder, __________________classRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________classRefBuilder, __________________classRefChildElement, "type", "type");
                                                                                                                                                ________________salesItemLineDetailBuilder.addPropertyValue("classRef", __________________classRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________salesItemLineDetailBuilder, ________________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                        parseProperty(________________salesItemLineDetailBuilder, ________________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                        if (!parseObjectRef(________________salesItemLineDetailChildElement, ________________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________________salesItemLineDetailChildElement, "price-level-ref");
                                                                                                                                            if (__________________priceLevelRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                ________________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", __________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesItemLineDetailChildElement, ________________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                            BeanDefinitionBuilder __________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                            Element __________________markupInfoChildElement = DomUtils.getChildElementByTagName(________________salesItemLineDetailChildElement, "markup-info");
                                                                                                                                            if (__________________markupInfoChildElement!= null) {
                                                                                                                                                parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                if (!parseObjectRef(__________________markupInfoChildElement, __________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                    if (___________________priceLevelRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                        __________________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                ________________salesItemLineDetailBuilder.addPropertyValue("markupInfo", __________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________salesItemLineDetailBuilder, ________________salesItemLineDetailChildElement, "qty", "qty");
                                                                                                                                        if (!parseObjectRef(________________salesItemLineDetailChildElement, ________________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                            Element __________________uomRefChildElement = DomUtils.getChildElementByTagName(________________salesItemLineDetailChildElement, "uom-ref");
                                                                                                                                            if (__________________uomRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________uomRefBuilder, __________________uomRefChildElement, "unit", "unit");
                                                                                                                                                ________________salesItemLineDetailBuilder.addPropertyValue("uomRef", __________________uomRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesItemLineDetailChildElement, ________________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(________________salesItemLineDetailChildElement, "item-account-ref");
                                                                                                                                            if (__________________itemAccountRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                ________________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", __________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesItemLineDetailChildElement, ________________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(________________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                            if (__________________inventorySiteRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                ________________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", __________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesItemLineDetailChildElement, ________________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                            if (__________________taxCodeRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                ________________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", __________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________salesItemLineDetailBuilder, ________________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                        parseProperty(________________salesItemLineDetailBuilder, ________________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                        if (!parseObjectRef(________________salesItemLineDetailChildElement, ________________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(________________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                            if (_________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________salesItemLineDetailExChildElement, _________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", _________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("salesItemLineDetail", ________________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                                                                    if (________________descriptionLineDetailChildElement!= null) {
                                                                                                                                        parseProperty(________________descriptionLineDetailBuilder, ________________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                        if (!parseObjectRef(________________descriptionLineDetailChildElement, ________________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                                                                            if (_________________taxCodeRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                ________________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", _________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________descriptionLineDetailChildElement, ________________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(________________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                                                                            if (_________________descriptionLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________descriptionLineDetailExChildElement, _________________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", _________________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("descriptionLineDetail", ________________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                                                                    if (________________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                        parseProperty(________________itemBasedExpenseLineDetailBuilder, ________________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________itemRefChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                                                                            if (__________________itemRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________itemRefBuilder, __________________itemRefChildElement, "type", "type");
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", __________________itemRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________classRefChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                            if (__________________classRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________classRefBuilder, __________________classRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________classRefBuilder, __________________classRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________classRefBuilder, __________________classRefChildElement, "type", "type");
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", __________________classRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________itemBasedExpenseLineDetailBuilder, ________________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                        parseProperty(________________itemBasedExpenseLineDetailBuilder, ________________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                                                                            if (__________________priceLevelRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", __________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                            BeanDefinitionBuilder __________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                            Element __________________markupInfoChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                            if (__________________markupInfoChildElement!= null) {
                                                                                                                                                parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________markupInfoBuilder, __________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                if (!parseObjectRef(__________________markupInfoChildElement, __________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                    BeanDefinitionBuilder ___________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ___________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                    if (___________________priceLevelRefChildElement!= null) {
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                        __________________markupInfoBuilder.addPropertyValue("priceLevelRef", ___________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", __________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________itemBasedExpenseLineDetailBuilder, ________________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                            Element __________________uomRefChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                                                                            if (__________________uomRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________uomRefBuilder, __________________uomRefChildElement, "unit", "unit");
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", __________________uomRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                                                                            if (__________________itemAccountRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________itemAccountRefBuilder, __________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", __________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                                                                            if (__________________inventorySiteRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________inventorySiteRefBuilder, __________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", __________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                            BeanDefinitionBuilder __________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                            if (__________________taxCodeRefChildElement!= null) {
                                                                                                                                                parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                parseProperty(__________________taxCodeRefBuilder, __________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", __________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________customerRefChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                            if (_________________customerRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________customerRefBuilder, _________________customerRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________customerRefBuilder, _________________customerRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________customerRefBuilder, _________________customerRefChildElement, "type", "type");
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _________________customerRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________itemBasedExpenseLineDetailBuilder, ________________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                        parseProperty(________________itemBasedExpenseLineDetailBuilder, ________________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                        if (!parseObjectRef(________________itemBasedExpenseLineDetailChildElement, ________________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(________________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                                                                            if (_________________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________itemBasedExpenseLineDetailExChildElement, _________________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", _________________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("itemBasedExpenseLineDetail", ________________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                                                                    if (________________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                        if (!parseObjectRef(________________accountBasedExpenseLineDetailChildElement, ________________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________customerRefChildElement = DomUtils.getChildElementByTagName(________________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                            if (_________________customerRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________customerRefBuilder, _________________customerRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________customerRefBuilder, _________________customerRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________customerRefBuilder, _________________customerRefChildElement, "type", "type");
                                                                                                                                                ________________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", _________________customerRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________accountBasedExpenseLineDetailChildElement, ________________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________classRefChildElement = DomUtils.getChildElementByTagName(________________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                            if (_________________classRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "type", "type");
                                                                                                                                                ________________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", _________________classRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________accountBasedExpenseLineDetailChildElement, ________________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________accountRefChildElement = DomUtils.getChildElementByTagName(________________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                                                                            if (_________________accountRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________accountRefBuilder, _________________accountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________accountRefBuilder, _________________accountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________accountRefBuilder, _________________accountRefChildElement, "type", "type");
                                                                                                                                                ________________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", _________________accountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________accountBasedExpenseLineDetailBuilder, ________________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                        if (!parseObjectRef(________________accountBasedExpenseLineDetailChildElement, ________________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                            BeanDefinitionBuilder _________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                            Element _________________markupInfoChildElement = DomUtils.getChildElementByTagName(________________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                            if (_________________markupInfoChildElement!= null) {
                                                                                                                                                parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________markupInfoBuilder, _________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                if (!parseObjectRef(_________________markupInfoChildElement, _________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                    if (__________________priceLevelRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________priceLevelRefBuilder, __________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                        _________________markupInfoBuilder.addPropertyValue("priceLevelRef", __________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                ________________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", _________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________accountBasedExpenseLineDetailBuilder, ________________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                        if (!parseObjectRef(________________accountBasedExpenseLineDetailChildElement, ________________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                            if (_________________taxCodeRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                ________________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", _________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________accountBasedExpenseLineDetailBuilder, ________________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                        if (!parseObjectRef(________________accountBasedExpenseLineDetailChildElement, ________________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(________________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                                                                            if (_________________expenseDetailLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________expenseDetailLineDetailExChildElement, _________________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", _________________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("accountBasedExpenseLineDetail", ________________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                                                                    if (________________depositLineDetailChildElement!= null) {
                                                                                                                                        if (!parseObjectRef(________________depositLineDetailChildElement, ________________depositLineDetailBuilder, "entity", "entity")) {
                                                                                                                                            BeanDefinitionBuilder _________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________entityChildElement = DomUtils.getChildElementByTagName(________________depositLineDetailChildElement, "entity");
                                                                                                                                            if (_________________entityChildElement!= null) {
                                                                                                                                                parseProperty(_________________entityBuilder, _________________entityChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________entityBuilder, _________________entityChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________entityBuilder, _________________entityChildElement, "type", "type");
                                                                                                                                                ________________depositLineDetailBuilder.addPropertyValue("entity", _________________entityBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________depositLineDetailChildElement, ________________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________classRefChildElement = DomUtils.getChildElementByTagName(________________depositLineDetailChildElement, "class-ref");
                                                                                                                                            if (_________________classRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "type", "type");
                                                                                                                                                ________________depositLineDetailBuilder.addPropertyValue("classRef", _________________classRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________depositLineDetailChildElement, ________________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________accountRefChildElement = DomUtils.getChildElementByTagName(________________depositLineDetailChildElement, "account-ref");
                                                                                                                                            if (_________________accountRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________accountRefBuilder, _________________accountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________accountRefBuilder, _________________accountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________accountRefBuilder, _________________accountRefChildElement, "type", "type");
                                                                                                                                                ________________depositLineDetailBuilder.addPropertyValue("accountRef", _________________accountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________depositLineDetailChildElement, ________________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(________________depositLineDetailChildElement, "payment-method-ref");
                                                                                                                                            if (_________________paymentMethodRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________paymentMethodRefBuilder, _________________paymentMethodRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________paymentMethodRefBuilder, _________________paymentMethodRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________paymentMethodRefBuilder, _________________paymentMethodRefChildElement, "type", "type");
                                                                                                                                                ________________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", _________________paymentMethodRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________depositLineDetailBuilder, ________________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                                                                        parseProperty(________________depositLineDetailBuilder, ________________depositLineDetailChildElement, "txnType", "txnType");
                                                                                                                                        if (!parseObjectRef(________________depositLineDetailChildElement, ________________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(________________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                                                                            if (_________________depositLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________depositLineDetailExChildElement, _________________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", _________________depositLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("depositLineDetail", ________________depositLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                                                                    if (________________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder __________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                            if (__________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(__________________salesItemLineDetailExChildElement, __________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", __________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________itemRefChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                            if (___________________itemRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "type", "type");
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", ___________________itemRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________classRefChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                            if (___________________classRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "type", "type");
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", ___________________classRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                            if (___________________priceLevelRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ___________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                            BeanDefinitionBuilder ___________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                            Element ___________________markupInfoChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                            if (___________________markupInfoChildElement!= null) {
                                                                                                                                                parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                if (!parseObjectRef(___________________markupInfoChildElement, ___________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                    if (____________________priceLevelRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                        ___________________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ___________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                            Element ___________________uomRefChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                            if (___________________uomRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________uomRefBuilder, ___________________uomRefChildElement, "unit", "unit");
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", ___________________uomRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                            if (___________________itemAccountRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ___________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                            if (___________________inventorySiteRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ___________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                            if (___________________taxCodeRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ___________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                        parseProperty(________________purchaseOrderItemLineDetailBuilder, ________________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                                                                        if (!parseObjectRef(________________purchaseOrderItemLineDetailChildElement, ________________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(________________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                                                                            if (_________________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________purchaseOrderItemLineDetailExChildElement, _________________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", _________________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("purchaseOrderItemLineDetail", ________________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                                                                    if (________________salesOrderItemLineDetailChildElement!= null) {
                                                                                                                                        parseProperty(________________salesOrderItemLineDetailBuilder, ________________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                        parseProperty(________________salesOrderItemLineDetailBuilder, ________________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                        parseProperty(________________salesOrderItemLineDetailBuilder, ________________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                        if (!parseObjectRef(________________salesOrderItemLineDetailChildElement, ________________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder __________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element __________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(________________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                            if (__________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(__________________salesItemLineDetailExChildElement, __________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", __________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________salesOrderItemLineDetailBuilder, ________________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                        if (!parseObjectRef(________________salesOrderItemLineDetailChildElement, ________________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________itemRefChildElement = DomUtils.getChildElementByTagName(________________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                            if (___________________itemRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "type", "type");
                                                                                                                                                ________________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", ___________________itemRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesOrderItemLineDetailChildElement, ________________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________classRefChildElement = DomUtils.getChildElementByTagName(________________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                            if (___________________classRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "type", "type");
                                                                                                                                                ________________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", ___________________classRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________salesOrderItemLineDetailBuilder, ________________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                        parseProperty(________________salesOrderItemLineDetailBuilder, ________________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                        if (!parseObjectRef(________________salesOrderItemLineDetailChildElement, ________________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(________________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                            if (___________________priceLevelRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________priceLevelRefBuilder, ___________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                ________________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", ___________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesOrderItemLineDetailChildElement, ________________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                            BeanDefinitionBuilder ___________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                            Element ___________________markupInfoChildElement = DomUtils.getChildElementByTagName(________________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                            if (___________________markupInfoChildElement!= null) {
                                                                                                                                                parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                if (!parseObjectRef(___________________markupInfoChildElement, ___________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                    BeanDefinitionBuilder ____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element ____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                    if (____________________priceLevelRefChildElement!= null) {
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                        ___________________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                ________________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", ___________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________salesOrderItemLineDetailBuilder, ________________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                        if (!parseObjectRef(________________salesOrderItemLineDetailChildElement, ________________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                            Element ___________________uomRefChildElement = DomUtils.getChildElementByTagName(________________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                            if (___________________uomRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________uomRefBuilder, ___________________uomRefChildElement, "unit", "unit");
                                                                                                                                                ________________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", ___________________uomRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesOrderItemLineDetailChildElement, ________________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(________________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                            if (___________________itemAccountRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________itemAccountRefBuilder, ___________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                ________________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", ___________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesOrderItemLineDetailChildElement, ________________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(________________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                            if (___________________inventorySiteRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________inventorySiteRefBuilder, ___________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                ________________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ___________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________salesOrderItemLineDetailChildElement, ________________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                            BeanDefinitionBuilder ___________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element ___________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                            if (___________________taxCodeRefChildElement!= null) {
                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                ________________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", ___________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________salesOrderItemLineDetailBuilder, ________________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                        builder.addPropertyValue("salesOrderItemLineDetail", ________________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                                                                    if (________________itemReceiptLineDetailChildElement!= null) {
                                                                                                                                        if (!parseObjectRef(________________itemReceiptLineDetailChildElement, ________________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(________________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                                                                            if (_________________itemReceiptLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________itemReceiptLineDetailExChildElement, _________________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", _________________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("itemReceiptLineDetail", ________________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                                                                    if (________________journalEntryLineDetailChildElement!= null) {
                                                                                                                                        parseProperty(________________journalEntryLineDetailBuilder, ________________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                                                                        if (!parseObjectRef(________________journalEntryLineDetailChildElement, ________________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                                                                            BeanDefinitionBuilder _________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                                                                            Element _________________entityChildElement = DomUtils.getChildElementByTagName(________________journalEntryLineDetailChildElement, "entity");
                                                                                                                                            if (_________________entityChildElement!= null) {
                                                                                                                                                parseProperty(_________________entityBuilder, _________________entityChildElement, "type", "type");
                                                                                                                                                if (!parseObjectRef(_________________entityChildElement, _________________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                                                                    BeanDefinitionBuilder __________________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________entityRefChildElement = DomUtils.getChildElementByTagName(_________________entityChildElement, "entity-ref");
                                                                                                                                                    if (__________________entityRefChildElement!= null) {
                                                                                                                                                        parseProperty(__________________entityRefBuilder, __________________entityRefChildElement, "value", "value");
                                                                                                                                                        parseProperty(__________________entityRefBuilder, __________________entityRefChildElement, "name", "name");
                                                                                                                                                        parseProperty(__________________entityRefBuilder, __________________entityRefChildElement, "type", "type");
                                                                                                                                                        _________________entityBuilder.addPropertyValue("entityRef", __________________entityRefBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                ________________journalEntryLineDetailBuilder.addPropertyValue("entity", _________________entityBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________journalEntryLineDetailChildElement, ________________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________accountRefChildElement = DomUtils.getChildElementByTagName(________________journalEntryLineDetailChildElement, "account-ref");
                                                                                                                                            if (_________________accountRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________accountRefBuilder, _________________accountRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________accountRefBuilder, _________________accountRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________accountRefBuilder, _________________accountRefChildElement, "type", "type");
                                                                                                                                                ________________journalEntryLineDetailBuilder.addPropertyValue("accountRef", _________________accountRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________journalEntryLineDetailChildElement, ________________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________classRefChildElement = DomUtils.getChildElementByTagName(________________journalEntryLineDetailChildElement, "class-ref");
                                                                                                                                            if (_________________classRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________classRefBuilder, _________________classRefChildElement, "type", "type");
                                                                                                                                                ________________journalEntryLineDetailBuilder.addPropertyValue("classRef", _________________classRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________journalEntryLineDetailChildElement, ________________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________departmentRefChildElement = DomUtils.getChildElementByTagName(________________journalEntryLineDetailChildElement, "department-ref");
                                                                                                                                            if (_________________departmentRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________departmentRefBuilder, _________________departmentRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________departmentRefBuilder, _________________departmentRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________departmentRefBuilder, _________________departmentRefChildElement, "type", "type");
                                                                                                                                                ________________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", _________________departmentRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        if (!parseObjectRef(________________journalEntryLineDetailChildElement, ________________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(________________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                                                                            if (_________________taxCodeRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________taxCodeRefBuilder, _________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                ________________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", _________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________journalEntryLineDetailBuilder, ________________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                                                                        parseProperty(________________journalEntryLineDetailBuilder, ________________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                        parseProperty(________________journalEntryLineDetailBuilder, ________________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                        if (!parseObjectRef(________________journalEntryLineDetailChildElement, ________________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(________________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                                                                            if (_________________journalEntryLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________journalEntryLineDetailExChildElement, _________________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", _________________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("journalEntryLineDetail", ________________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                                                                    if (________________groupLineDetailChildElement!= null) {
                                                                                                                                        if (!parseObjectRef(________________groupLineDetailChildElement, ________________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________groupItemRefChildElement = DomUtils.getChildElementByTagName(________________groupLineDetailChildElement, "group-item-ref");
                                                                                                                                            if (_________________groupItemRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________groupItemRefBuilder, _________________groupItemRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________groupItemRefBuilder, _________________groupItemRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________groupItemRefBuilder, _________________groupItemRefChildElement, "type", "type");
                                                                                                                                                ________________groupLineDetailBuilder.addPropertyValue("groupItemRef", _________________groupItemRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________groupLineDetailBuilder, ________________groupLineDetailChildElement, "quantity", "quantity");
                                                                                                                                        parseProperty(________________groupLineDetailBuilder, ________________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                        parseListAndSetProperty(________________groupLineDetailChildElement, ________________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LineExpressionHolder.class);
                                                                                                                                                parseProperty(builder, element, "id", "id");
                                                                                                                                                parseProperty(builder, element, "lineNum", "lineNum");
                                                                                                                                                parseProperty(builder, element, "description", "description");
                                                                                                                                                parseProperty(builder, element, "amount", "amount");
                                                                                                                                                parseListAndSetProperty(element, builder, "linkedTxn", "linked-txn", "linked-txn", new ParseDelegate<BeanDefinition>() {


                                                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(LinkedTxnExpressionHolder.class);
                                                                                                                                                        parseProperty(builder, element, "txnId", "txnId");
                                                                                                                                                        parseProperty(builder, element, "txnType", "txnType");
                                                                                                                                                        parseProperty(builder, element, "txnLineId", "txnLineId");
                                                                                                                                                        return builder.getBeanDefinition();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                parseProperty(builder, element, "detailType", "detailType");
                                                                                                                                                if (!parseObjectRef(element, builder, "payment-line-detail", "paymentLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________paymentLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PaymentLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________paymentLineDetailChildElement = DomUtils.getChildElementByTagName(element, "payment-line-detail");
                                                                                                                                                    if (__________________paymentLineDetailChildElement!= null) {
                                                                                                                                                        if (!parseObjectRef(__________________paymentLineDetailChildElement, __________________paymentLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________itemRefChildElement = DomUtils.getChildElementByTagName(__________________paymentLineDetailChildElement, "item-ref");
                                                                                                                                                            if (___________________itemRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "type", "type");
                                                                                                                                                                __________________paymentLineDetailBuilder.addPropertyValue("itemRef", ___________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________paymentLineDetailBuilder, __________________paymentLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                        if (!parseObjectRef(__________________paymentLineDetailChildElement, __________________paymentLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________classRefChildElement = DomUtils.getChildElementByTagName(__________________paymentLineDetailChildElement, "class-ref");
                                                                                                                                                            if (___________________classRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "type", "type");
                                                                                                                                                                __________________paymentLineDetailBuilder.addPropertyValue("classRef", ___________________classRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________paymentLineDetailBuilder, __________________paymentLineDetailChildElement, "balance", "balance");
                                                                                                                                                        if (!parseObjectRef(__________________paymentLineDetailChildElement, __________________paymentLineDetailBuilder, "discount", "discount")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________discountBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountOverrideExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________discountChildElement = DomUtils.getChildElementByTagName(__________________paymentLineDetailChildElement, "discount");
                                                                                                                                                            if (___________________discountChildElement!= null) {
                                                                                                                                                                if (!parseObjectRef(___________________discountChildElement, ___________________discountBuilder, "discount-ref", "discountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________discountRefChildElement = DomUtils.getChildElementByTagName(___________________discountChildElement, "discount-ref");
                                                                                                                                                                    if (____________________discountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________discountRefBuilder, ____________________discountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________discountRefBuilder, ____________________discountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________discountRefBuilder, ____________________discountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________discountBuilder.addPropertyValue("discountRef", ____________________discountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                parseProperty(___________________discountBuilder, ___________________discountChildElement, "percentBased", "percentBased");
                                                                                                                                                                parseProperty(___________________discountBuilder, ___________________discountChildElement, "discountPercent", "discountPercent");
                                                                                                                                                                if (!parseObjectRef(___________________discountChildElement, ___________________discountBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(___________________discountChildElement, "discount-account-ref");
                                                                                                                                                                    if (____________________discountAccountRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________discountAccountRefBuilder, ____________________discountAccountRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________discountAccountRefBuilder, ____________________discountAccountRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________discountAccountRefBuilder, ____________________discountAccountRefChildElement, "type", "type");
                                                                                                                                                                        ___________________discountBuilder.addPropertyValue("discountAccountRef", ____________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                __________________paymentLineDetailBuilder.addPropertyValue("discount", ___________________discountBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________paymentLineDetailChildElement, __________________paymentLineDetailBuilder, "payment-line-ex", "paymentLineEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________paymentLineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________paymentLineExChildElement = DomUtils.getChildElementByTagName(__________________paymentLineDetailChildElement, "payment-line-ex");
                                                                                                                                                            if (___________________paymentLineExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________paymentLineExChildElement, ___________________paymentLineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________paymentLineDetailBuilder.addPropertyValue("paymentLineEx", ___________________paymentLineExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("paymentLineDetail", __________________paymentLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "discount-line-detail", "discountLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________discountLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DiscountLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________discountLineDetailChildElement = DomUtils.getChildElementByTagName(element, "discount-line-detail");
                                                                                                                                                    if (__________________discountLineDetailChildElement!= null) {
                                                                                                                                                        parseProperty(__________________discountLineDetailBuilder, __________________discountLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                        if (!parseObjectRef(__________________discountLineDetailChildElement, __________________discountLineDetailBuilder, "discount-ref", "discountRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________discountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________discountRefChildElement = DomUtils.getChildElementByTagName(__________________discountLineDetailChildElement, "discount-ref");
                                                                                                                                                            if (____________________discountRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________discountRefBuilder, ____________________discountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________discountRefBuilder, ____________________discountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________discountRefBuilder, ____________________discountRefChildElement, "type", "type");
                                                                                                                                                                __________________discountLineDetailBuilder.addPropertyValue("discountRef", ____________________discountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________discountLineDetailBuilder, __________________discountLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                                        parseProperty(__________________discountLineDetailBuilder, __________________discountLineDetailChildElement, "discountPercent", "discountPercent");
                                                                                                                                                        if (!parseObjectRef(__________________discountLineDetailChildElement, __________________discountLineDetailBuilder, "discount-account-ref", "discountAccountRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________discountAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________discountAccountRefChildElement = DomUtils.getChildElementByTagName(__________________discountLineDetailChildElement, "discount-account-ref");
                                                                                                                                                            if (____________________discountAccountRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________discountAccountRefBuilder, ____________________discountAccountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________discountAccountRefBuilder, ____________________discountAccountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________discountAccountRefBuilder, ____________________discountAccountRefChildElement, "type", "type");
                                                                                                                                                                __________________discountLineDetailBuilder.addPropertyValue("discountAccountRef", ____________________discountAccountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________discountLineDetailBuilder, __________________discountLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                        if (!parseObjectRef(__________________discountLineDetailChildElement, __________________discountLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________classRefChildElement = DomUtils.getChildElementByTagName(__________________discountLineDetailChildElement, "class-ref");
                                                                                                                                                            if (___________________classRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "type", "type");
                                                                                                                                                                __________________discountLineDetailBuilder.addPropertyValue("classRef", ___________________classRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________discountLineDetailChildElement, __________________discountLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________________discountLineDetailChildElement, "tax-code-ref");
                                                                                                                                                            if (___________________taxCodeRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                __________________discountLineDetailBuilder.addPropertyValue("taxCodeRef", ___________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________discountLineDetailChildElement, __________________discountLineDetailBuilder, "discount-line-detail-ex", "discountLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________discountLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________discountLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________discountLineDetailChildElement, "discount-line-detail-ex");
                                                                                                                                                            if (___________________discountLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________discountLineDetailExChildElement, ___________________discountLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________discountLineDetailBuilder.addPropertyValue("discountLineDetailEx", ___________________discountLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("discountLineDetail", __________________discountLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "tax-line-detail", "taxLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________taxLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(TaxLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________taxLineDetailChildElement = DomUtils.getChildElementByTagName(element, "tax-line-detail");
                                                                                                                                                    if (__________________taxLineDetailChildElement!= null) {
                                                                                                                                                        if (!parseObjectRef(__________________taxLineDetailChildElement, __________________taxLineDetailBuilder, "tax-rate-ref", "taxRateRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________taxRateRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________taxRateRefChildElement = DomUtils.getChildElementByTagName(__________________taxLineDetailChildElement, "tax-rate-ref");
                                                                                                                                                            if (___________________taxRateRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________taxRateRefBuilder, ___________________taxRateRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________taxRateRefBuilder, ___________________taxRateRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________taxRateRefBuilder, ___________________taxRateRefChildElement, "type", "type");
                                                                                                                                                                __________________taxLineDetailBuilder.addPropertyValue("taxRateRef", ___________________taxRateRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________taxLineDetailBuilder, __________________taxLineDetailChildElement, "percentBased", "percentBased");
                                                                                                                                                        parseProperty(__________________taxLineDetailBuilder, __________________taxLineDetailChildElement, "taxPercent", "taxPercent");
                                                                                                                                                        parseProperty(__________________taxLineDetailBuilder, __________________taxLineDetailChildElement, "netAmountTaxable", "netAmountTaxable");
                                                                                                                                                        parseProperty(__________________taxLineDetailBuilder, __________________taxLineDetailChildElement, "taxInclusiveAmount", "taxInclusiveAmount");
                                                                                                                                                        parseProperty(__________________taxLineDetailBuilder, __________________taxLineDetailChildElement, "overrideDeltaAmount", "overrideDeltaAmount");
                                                                                                                                                        parseProperty(__________________taxLineDetailBuilder, __________________taxLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                        if (!parseObjectRef(__________________taxLineDetailChildElement, __________________taxLineDetailBuilder, "tax-line-detail-ex", "taxLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________taxLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________taxLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________taxLineDetailChildElement, "tax-line-detail-ex");
                                                                                                                                                            if (___________________taxLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________taxLineDetailExChildElement, ___________________taxLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________taxLineDetailBuilder.addPropertyValue("taxLineDetailEx", ___________________taxLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("taxLineDetail", __________________taxLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "sales-item-line-detail", "salesItemLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________salesItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesItemLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________salesItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-item-line-detail");
                                                                                                                                                    if (__________________salesItemLineDetailChildElement!= null) {
                                                                                                                                                        parseProperty(__________________salesItemLineDetailBuilder, __________________salesItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                        if (!parseObjectRef(__________________salesItemLineDetailChildElement, __________________salesItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________itemRefChildElement = DomUtils.getChildElementByTagName(__________________salesItemLineDetailChildElement, "item-ref");
                                                                                                                                                            if (____________________itemRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "type", "type");
                                                                                                                                                                __________________salesItemLineDetailBuilder.addPropertyValue("itemRef", ____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesItemLineDetailChildElement, __________________salesItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________classRefChildElement = DomUtils.getChildElementByTagName(__________________salesItemLineDetailChildElement, "class-ref");
                                                                                                                                                            if (____________________classRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "type", "type");
                                                                                                                                                                __________________salesItemLineDetailBuilder.addPropertyValue("classRef", ____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________salesItemLineDetailBuilder, __________________salesItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                        parseProperty(__________________salesItemLineDetailBuilder, __________________salesItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                        if (!parseObjectRef(__________________salesItemLineDetailChildElement, __________________salesItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________________salesItemLineDetailChildElement, "price-level-ref");
                                                                                                                                                            if (____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                __________________salesItemLineDetailBuilder.addPropertyValue("priceLevelRef", ____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesItemLineDetailChildElement, __________________salesItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________markupInfoChildElement = DomUtils.getChildElementByTagName(__________________salesItemLineDetailChildElement, "markup-info");
                                                                                                                                                            if (____________________markupInfoChildElement!= null) {
                                                                                                                                                                parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                if (!parseObjectRef(____________________markupInfoChildElement, ____________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                    if (_____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                        ____________________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                __________________salesItemLineDetailBuilder.addPropertyValue("markupInfo", ____________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________salesItemLineDetailBuilder, __________________salesItemLineDetailChildElement, "qty", "qty");
                                                                                                                                                        if (!parseObjectRef(__________________salesItemLineDetailChildElement, __________________salesItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________uomRefChildElement = DomUtils.getChildElementByTagName(__________________salesItemLineDetailChildElement, "uom-ref");
                                                                                                                                                            if (____________________uomRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________uomRefBuilder, ____________________uomRefChildElement, "unit", "unit");
                                                                                                                                                                __________________salesItemLineDetailBuilder.addPropertyValue("uomRef", ____________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesItemLineDetailChildElement, __________________salesItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(__________________salesItemLineDetailChildElement, "item-account-ref");
                                                                                                                                                            if (____________________itemAccountRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                                __________________salesItemLineDetailBuilder.addPropertyValue("itemAccountRef", ____________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesItemLineDetailChildElement, __________________salesItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(__________________salesItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                            if (____________________inventorySiteRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                                __________________salesItemLineDetailBuilder.addPropertyValue("inventorySiteRef", ____________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesItemLineDetailChildElement, __________________salesItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________________salesItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                                            if (____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                __________________salesItemLineDetailBuilder.addPropertyValue("taxCodeRef", ____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________salesItemLineDetailBuilder, __________________salesItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                        parseProperty(__________________salesItemLineDetailBuilder, __________________salesItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                        if (!parseObjectRef(__________________salesItemLineDetailChildElement, __________________salesItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________salesItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                                            if (___________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________salesItemLineDetailExChildElement, ___________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________salesItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ___________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("salesItemLineDetail", __________________salesItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "description-line-detail", "descriptionLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________descriptionLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DescriptionLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________descriptionLineDetailChildElement = DomUtils.getChildElementByTagName(element, "description-line-detail");
                                                                                                                                                    if (__________________descriptionLineDetailChildElement!= null) {
                                                                                                                                                        parseProperty(__________________descriptionLineDetailBuilder, __________________descriptionLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                        if (!parseObjectRef(__________________descriptionLineDetailChildElement, __________________descriptionLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________________descriptionLineDetailChildElement, "tax-code-ref");
                                                                                                                                                            if (___________________taxCodeRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                __________________descriptionLineDetailBuilder.addPropertyValue("taxCodeRef", ___________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________descriptionLineDetailChildElement, __________________descriptionLineDetailBuilder, "description-line-detail-ex", "descriptionLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________descriptionLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________descriptionLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________descriptionLineDetailChildElement, "description-line-detail-ex");
                                                                                                                                                            if (___________________descriptionLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________descriptionLineDetailExChildElement, ___________________descriptionLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________descriptionLineDetailBuilder.addPropertyValue("descriptionLineDetailEx", ___________________descriptionLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("descriptionLineDetail", __________________descriptionLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "item-based-expense-line-detail", "itemBasedExpenseLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________itemBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________itemBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-based-expense-line-detail");
                                                                                                                                                    if (__________________itemBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                                        parseProperty(__________________itemBasedExpenseLineDetailBuilder, __________________itemBasedExpenseLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________itemRefChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "item-ref");
                                                                                                                                                            if (____________________itemRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________itemRefBuilder, ____________________itemRefChildElement, "type", "type");
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemRef", ____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________classRefChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                                            if (____________________classRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________classRefBuilder, ____________________classRefChildElement, "type", "type");
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________itemBasedExpenseLineDetailBuilder, __________________itemBasedExpenseLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                        parseProperty(__________________itemBasedExpenseLineDetailBuilder, __________________itemBasedExpenseLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "price-level-ref");
                                                                                                                                                            if (____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("priceLevelRef", ____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________markupInfoChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                                            if (____________________markupInfoChildElement!= null) {
                                                                                                                                                                parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________markupInfoBuilder, ____________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                if (!parseObjectRef(____________________markupInfoChildElement, ____________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                    BeanDefinitionBuilder _____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element _____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(____________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                    if (_____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                        ____________________markupInfoBuilder.addPropertyValue("priceLevelRef", _____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ____________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________itemBasedExpenseLineDetailBuilder, __________________itemBasedExpenseLineDetailChildElement, "qty", "qty");
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________uomRefChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "uom-ref");
                                                                                                                                                            if (____________________uomRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________uomRefBuilder, ____________________uomRefChildElement, "unit", "unit");
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("uomRef", ____________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "item-account-ref");
                                                                                                                                                            if (____________________itemAccountRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________itemAccountRefBuilder, ____________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemAccountRef", ____________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                            if (____________________inventorySiteRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________inventorySiteRefBuilder, ____________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("inventorySiteRef", ____________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                                            if (____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(____________________taxCodeRefBuilder, ____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________customerRefChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                                            if (___________________customerRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________customerRefBuilder, ___________________customerRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________customerRefBuilder, ___________________customerRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________customerRefBuilder, ___________________customerRefChildElement, "type", "type");
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ___________________customerRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________itemBasedExpenseLineDetailBuilder, __________________itemBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                                        parseProperty(__________________itemBasedExpenseLineDetailBuilder, __________________itemBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                        if (!parseObjectRef(__________________itemBasedExpenseLineDetailChildElement, __________________itemBasedExpenseLineDetailBuilder, "item-based-expense-line-detail-ex", "itemBasedExpenseLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________itemBasedExpenseLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________itemBasedExpenseLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________itemBasedExpenseLineDetailChildElement, "item-based-expense-line-detail-ex");
                                                                                                                                                            if (___________________itemBasedExpenseLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________itemBasedExpenseLineDetailExChildElement, ___________________itemBasedExpenseLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________itemBasedExpenseLineDetailBuilder.addPropertyValue("itemBasedExpenseLineDetailEx", ___________________itemBasedExpenseLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("itemBasedExpenseLineDetail", __________________itemBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "account-based-expense-line-detail", "accountBasedExpenseLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________accountBasedExpenseLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(AccountBasedExpenseLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________accountBasedExpenseLineDetailChildElement = DomUtils.getChildElementByTagName(element, "account-based-expense-line-detail");
                                                                                                                                                    if (__________________accountBasedExpenseLineDetailChildElement!= null) {
                                                                                                                                                        if (!parseObjectRef(__________________accountBasedExpenseLineDetailChildElement, __________________accountBasedExpenseLineDetailBuilder, "customer-ref", "customerRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________customerRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________customerRefChildElement = DomUtils.getChildElementByTagName(__________________accountBasedExpenseLineDetailChildElement, "customer-ref");
                                                                                                                                                            if (___________________customerRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________customerRefBuilder, ___________________customerRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________customerRefBuilder, ___________________customerRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________customerRefBuilder, ___________________customerRefChildElement, "type", "type");
                                                                                                                                                                __________________accountBasedExpenseLineDetailBuilder.addPropertyValue("customerRef", ___________________customerRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________accountBasedExpenseLineDetailChildElement, __________________accountBasedExpenseLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________classRefChildElement = DomUtils.getChildElementByTagName(__________________accountBasedExpenseLineDetailChildElement, "class-ref");
                                                                                                                                                            if (___________________classRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "type", "type");
                                                                                                                                                                __________________accountBasedExpenseLineDetailBuilder.addPropertyValue("classRef", ___________________classRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________accountBasedExpenseLineDetailChildElement, __________________accountBasedExpenseLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________accountRefChildElement = DomUtils.getChildElementByTagName(__________________accountBasedExpenseLineDetailChildElement, "account-ref");
                                                                                                                                                            if (___________________accountRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________accountRefBuilder, ___________________accountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________accountRefBuilder, ___________________accountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________accountRefBuilder, ___________________accountRefChildElement, "type", "type");
                                                                                                                                                                __________________accountBasedExpenseLineDetailBuilder.addPropertyValue("accountRef", ___________________accountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________accountBasedExpenseLineDetailBuilder, __________________accountBasedExpenseLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                                        if (!parseObjectRef(__________________accountBasedExpenseLineDetailChildElement, __________________accountBasedExpenseLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________markupInfoChildElement = DomUtils.getChildElementByTagName(__________________accountBasedExpenseLineDetailChildElement, "markup-info");
                                                                                                                                                            if (___________________markupInfoChildElement!= null) {
                                                                                                                                                                parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________markupInfoBuilder, ___________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                if (!parseObjectRef(___________________markupInfoChildElement, ___________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(___________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                    if (____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________priceLevelRefBuilder, ____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                        ___________________markupInfoBuilder.addPropertyValue("priceLevelRef", ____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                __________________accountBasedExpenseLineDetailBuilder.addPropertyValue("markupInfo", ___________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________accountBasedExpenseLineDetailBuilder, __________________accountBasedExpenseLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                                        if (!parseObjectRef(__________________accountBasedExpenseLineDetailChildElement, __________________accountBasedExpenseLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________________accountBasedExpenseLineDetailChildElement, "tax-code-ref");
                                                                                                                                                            if (___________________taxCodeRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                __________________accountBasedExpenseLineDetailBuilder.addPropertyValue("taxCodeRef", ___________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________accountBasedExpenseLineDetailBuilder, __________________accountBasedExpenseLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                        if (!parseObjectRef(__________________accountBasedExpenseLineDetailChildElement, __________________accountBasedExpenseLineDetailBuilder, "expense-detail-line-detail-ex", "expenseDetailLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________expenseDetailLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________expenseDetailLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________accountBasedExpenseLineDetailChildElement, "expense-detail-line-detail-ex");
                                                                                                                                                            if (___________________expenseDetailLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________expenseDetailLineDetailExChildElement, ___________________expenseDetailLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________accountBasedExpenseLineDetailBuilder.addPropertyValue("expenseDetailLineDetailEx", ___________________expenseDetailLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("accountBasedExpenseLineDetail", __________________accountBasedExpenseLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "deposit-line-detail", "depositLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________depositLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(DepositLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________depositLineDetailChildElement = DomUtils.getChildElementByTagName(element, "deposit-line-detail");
                                                                                                                                                    if (__________________depositLineDetailChildElement!= null) {
                                                                                                                                                        if (!parseObjectRef(__________________depositLineDetailChildElement, __________________depositLineDetailBuilder, "entity", "entity")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________entityChildElement = DomUtils.getChildElementByTagName(__________________depositLineDetailChildElement, "entity");
                                                                                                                                                            if (___________________entityChildElement!= null) {
                                                                                                                                                                parseProperty(___________________entityBuilder, ___________________entityChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________entityBuilder, ___________________entityChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________entityBuilder, ___________________entityChildElement, "type", "type");
                                                                                                                                                                __________________depositLineDetailBuilder.addPropertyValue("entity", ___________________entityBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________depositLineDetailChildElement, __________________depositLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________classRefChildElement = DomUtils.getChildElementByTagName(__________________depositLineDetailChildElement, "class-ref");
                                                                                                                                                            if (___________________classRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "type", "type");
                                                                                                                                                                __________________depositLineDetailBuilder.addPropertyValue("classRef", ___________________classRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________depositLineDetailChildElement, __________________depositLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________accountRefChildElement = DomUtils.getChildElementByTagName(__________________depositLineDetailChildElement, "account-ref");
                                                                                                                                                            if (___________________accountRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________accountRefBuilder, ___________________accountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________accountRefBuilder, ___________________accountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________accountRefBuilder, ___________________accountRefChildElement, "type", "type");
                                                                                                                                                                __________________depositLineDetailBuilder.addPropertyValue("accountRef", ___________________accountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________depositLineDetailChildElement, __________________depositLineDetailBuilder, "payment-method-ref", "paymentMethodRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________paymentMethodRefChildElement = DomUtils.getChildElementByTagName(__________________depositLineDetailChildElement, "payment-method-ref");
                                                                                                                                                            if (___________________paymentMethodRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________paymentMethodRefBuilder, ___________________paymentMethodRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________paymentMethodRefBuilder, ___________________paymentMethodRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________paymentMethodRefBuilder, ___________________paymentMethodRefChildElement, "type", "type");
                                                                                                                                                                __________________depositLineDetailBuilder.addPropertyValue("paymentMethodRef", ___________________paymentMethodRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________depositLineDetailBuilder, __________________depositLineDetailChildElement, "checkNum", "checkNum");
                                                                                                                                                        parseProperty(__________________depositLineDetailBuilder, __________________depositLineDetailChildElement, "txnType", "txnType");
                                                                                                                                                        if (!parseObjectRef(__________________depositLineDetailChildElement, __________________depositLineDetailBuilder, "deposit-line-detail-ex", "depositLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________depositLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________depositLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________depositLineDetailChildElement, "deposit-line-detail-ex");
                                                                                                                                                            if (___________________depositLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________depositLineDetailExChildElement, ___________________depositLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________depositLineDetailBuilder.addPropertyValue("depositLineDetailEx", ___________________depositLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("depositLineDetail", __________________depositLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "purchase-order-item-line-detail", "purchaseOrderItemLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________purchaseOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(PurchaseOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________purchaseOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "purchase-order-item-line-detail");
                                                                                                                                                    if (__________________purchaseOrderItemLineDetailChildElement!= null) {
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                                            if (____________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(____________________salesItemLineDetailExChildElement, ____________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ____________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________itemRefChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                                            if (_____________________itemRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "type", "type");
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemRef", _____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________classRefChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                                            if (_____________________classRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "type", "type");
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("classRef", _____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                                            if (_____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________markupInfoChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                                            if (_____________________markupInfoChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                if (!parseObjectRef(_____________________markupInfoChildElement, _____________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                    if (______________________priceLevelRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                        _____________________markupInfoBuilder.addPropertyValue("priceLevelRef", ______________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _____________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________uomRefChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                                            if (_____________________uomRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________uomRefBuilder, _____________________uomRefChildElement, "unit", "unit");
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("uomRef", _____________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                                            if (_____________________itemAccountRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _____________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                            if (_____________________inventorySiteRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _____________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                                            if (_____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "manPartNum", "manPartNum");
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                                        parseProperty(__________________purchaseOrderItemLineDetailBuilder, __________________purchaseOrderItemLineDetailChildElement, "openQty", "openQty");
                                                                                                                                                        if (!parseObjectRef(__________________purchaseOrderItemLineDetailChildElement, __________________purchaseOrderItemLineDetailBuilder, "purchase-order-item-line-detail-ex", "purchaseOrderItemLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________purchaseOrderItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________purchaseOrderItemLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________purchaseOrderItemLineDetailChildElement, "purchase-order-item-line-detail-ex");
                                                                                                                                                            if (___________________purchaseOrderItemLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________purchaseOrderItemLineDetailExChildElement, ___________________purchaseOrderItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________purchaseOrderItemLineDetailBuilder.addPropertyValue("purchaseOrderItemLineDetailEx", ___________________purchaseOrderItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("purchaseOrderItemLineDetail", __________________purchaseOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "sales-order-item-line-detail", "salesOrderItemLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________salesOrderItemLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SalesOrderItemLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________salesOrderItemLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sales-order-item-line-detail");
                                                                                                                                                    if (__________________salesOrderItemLineDetailChildElement!= null) {
                                                                                                                                                        parseProperty(__________________salesOrderItemLineDetailBuilder, __________________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                        parseProperty(__________________salesOrderItemLineDetailBuilder, __________________salesOrderItemLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                        parseProperty(__________________salesOrderItemLineDetailBuilder, __________________salesOrderItemLineDetailChildElement, "taxInclusiveAmt", "taxInclusiveAmt");
                                                                                                                                                        if (!parseObjectRef(__________________salesOrderItemLineDetailChildElement, __________________salesOrderItemLineDetailBuilder, "sales-item-line-detail-ex", "salesItemLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ____________________salesItemLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ____________________salesItemLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________salesOrderItemLineDetailChildElement, "sales-item-line-detail-ex");
                                                                                                                                                            if (____________________salesItemLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(____________________salesItemLineDetailExChildElement, ____________________salesItemLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________salesOrderItemLineDetailBuilder.addPropertyValue("salesItemLineDetailEx", ____________________salesItemLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________salesOrderItemLineDetailBuilder, __________________salesOrderItemLineDetailChildElement, "serialVersionUID", "serialVersionUID");
                                                                                                                                                        if (!parseObjectRef(__________________salesOrderItemLineDetailChildElement, __________________salesOrderItemLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________itemRefChildElement = DomUtils.getChildElementByTagName(__________________salesOrderItemLineDetailChildElement, "item-ref");
                                                                                                                                                            if (_____________________itemRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________itemRefBuilder, _____________________itemRefChildElement, "type", "type");
                                                                                                                                                                __________________salesOrderItemLineDetailBuilder.addPropertyValue("itemRef", _____________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesOrderItemLineDetailChildElement, __________________salesOrderItemLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________classRefChildElement = DomUtils.getChildElementByTagName(__________________salesOrderItemLineDetailChildElement, "class-ref");
                                                                                                                                                            if (_____________________classRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________classRefBuilder, _____________________classRefChildElement, "type", "type");
                                                                                                                                                                __________________salesOrderItemLineDetailBuilder.addPropertyValue("classRef", _____________________classRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________salesOrderItemLineDetailBuilder, __________________salesOrderItemLineDetailChildElement, "unitPrice", "unitPrice");
                                                                                                                                                        parseProperty(__________________salesOrderItemLineDetailBuilder, __________________salesOrderItemLineDetailChildElement, "ratePercent", "ratePercent");
                                                                                                                                                        if (!parseObjectRef(__________________salesOrderItemLineDetailChildElement, __________________salesOrderItemLineDetailBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(__________________salesOrderItemLineDetailChildElement, "price-level-ref");
                                                                                                                                                            if (_____________________priceLevelRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________priceLevelRefBuilder, _____________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                __________________salesOrderItemLineDetailBuilder.addPropertyValue("priceLevelRef", _____________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesOrderItemLineDetailChildElement, __________________salesOrderItemLineDetailBuilder, "markup-info", "markupInfo")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________markupInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(MarkupInfoExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________markupInfoChildElement = DomUtils.getChildElementByTagName(__________________salesOrderItemLineDetailChildElement, "markup-info");
                                                                                                                                                            if (_____________________markupInfoChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "percentBased", "percentBased");
                                                                                                                                                                parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________markupInfoBuilder, _____________________markupInfoChildElement, "percent", "percent");
                                                                                                                                                                if (!parseObjectRef(_____________________markupInfoChildElement, _____________________markupInfoBuilder, "price-level-ref", "priceLevelRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ______________________priceLevelRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ______________________priceLevelRefChildElement = DomUtils.getChildElementByTagName(_____________________markupInfoChildElement, "price-level-ref");
                                                                                                                                                                    if (______________________priceLevelRefChildElement!= null) {
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(______________________priceLevelRefBuilder, ______________________priceLevelRefChildElement, "type", "type");
                                                                                                                                                                        _____________________markupInfoBuilder.addPropertyValue("priceLevelRef", ______________________priceLevelRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                __________________salesOrderItemLineDetailBuilder.addPropertyValue("markupInfo", _____________________markupInfoBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________salesOrderItemLineDetailBuilder, __________________salesOrderItemLineDetailChildElement, "qty", "qty");
                                                                                                                                                        if (!parseObjectRef(__________________salesOrderItemLineDetailChildElement, __________________salesOrderItemLineDetailBuilder, "uom-ref", "uomRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________uomRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(UOMRefExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________uomRefChildElement = DomUtils.getChildElementByTagName(__________________salesOrderItemLineDetailChildElement, "uom-ref");
                                                                                                                                                            if (_____________________uomRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________uomRefBuilder, _____________________uomRefChildElement, "unit", "unit");
                                                                                                                                                                __________________salesOrderItemLineDetailBuilder.addPropertyValue("uomRef", _____________________uomRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesOrderItemLineDetailChildElement, __________________salesOrderItemLineDetailBuilder, "item-account-ref", "itemAccountRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________itemAccountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________itemAccountRefChildElement = DomUtils.getChildElementByTagName(__________________salesOrderItemLineDetailChildElement, "item-account-ref");
                                                                                                                                                            if (_____________________itemAccountRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________itemAccountRefBuilder, _____________________itemAccountRefChildElement, "type", "type");
                                                                                                                                                                __________________salesOrderItemLineDetailBuilder.addPropertyValue("itemAccountRef", _____________________itemAccountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesOrderItemLineDetailChildElement, __________________salesOrderItemLineDetailBuilder, "inventory-site-ref", "inventorySiteRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________inventorySiteRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________inventorySiteRefChildElement = DomUtils.getChildElementByTagName(__________________salesOrderItemLineDetailChildElement, "inventory-site-ref");
                                                                                                                                                            if (_____________________inventorySiteRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________inventorySiteRefBuilder, _____________________inventorySiteRefChildElement, "type", "type");
                                                                                                                                                                __________________salesOrderItemLineDetailBuilder.addPropertyValue("inventorySiteRef", _____________________inventorySiteRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________salesOrderItemLineDetailChildElement, __________________salesOrderItemLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                            BeanDefinitionBuilder _____________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element _____________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________________salesOrderItemLineDetailChildElement, "tax-code-ref");
                                                                                                                                                            if (_____________________taxCodeRefChildElement!= null) {
                                                                                                                                                                parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(_____________________taxCodeRefBuilder, _____________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                __________________salesOrderItemLineDetailBuilder.addPropertyValue("taxCodeRef", _____________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________salesOrderItemLineDetailBuilder, __________________salesOrderItemLineDetailChildElement, "manuallyClosed", "manuallyClosed");
                                                                                                                                                        builder.addPropertyValue("salesOrderItemLineDetail", __________________salesOrderItemLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "item-receipt-line-detail", "itemReceiptLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________itemReceiptLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(ItemReceiptLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________itemReceiptLineDetailChildElement = DomUtils.getChildElementByTagName(element, "item-receipt-line-detail");
                                                                                                                                                    if (__________________itemReceiptLineDetailChildElement!= null) {
                                                                                                                                                        if (!parseObjectRef(__________________itemReceiptLineDetailChildElement, __________________itemReceiptLineDetailBuilder, "item-receipt-line-detail-ex", "itemReceiptLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________itemReceiptLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________itemReceiptLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________itemReceiptLineDetailChildElement, "item-receipt-line-detail-ex");
                                                                                                                                                            if (___________________itemReceiptLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________itemReceiptLineDetailExChildElement, ___________________itemReceiptLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________itemReceiptLineDetailBuilder.addPropertyValue("itemReceiptLineDetailEx", ___________________itemReceiptLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("itemReceiptLineDetail", __________________itemReceiptLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "journal-entry-line-detail", "journalEntryLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________journalEntryLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(JournalEntryLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________journalEntryLineDetailChildElement = DomUtils.getChildElementByTagName(element, "journal-entry-line-detail");
                                                                                                                                                    if (__________________journalEntryLineDetailChildElement!= null) {
                                                                                                                                                        parseProperty(__________________journalEntryLineDetailBuilder, __________________journalEntryLineDetailChildElement, "postingType", "postingType");
                                                                                                                                                        if (!parseObjectRef(__________________journalEntryLineDetailChildElement, __________________journalEntryLineDetailBuilder, "entity", "entity")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________entityBuilder = BeanDefinitionBuilder.rootBeanDefinition(EntityTypeRefExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________entityChildElement = DomUtils.getChildElementByTagName(__________________journalEntryLineDetailChildElement, "entity");
                                                                                                                                                            if (___________________entityChildElement!= null) {
                                                                                                                                                                parseProperty(___________________entityBuilder, ___________________entityChildElement, "type", "type");
                                                                                                                                                                if (!parseObjectRef(___________________entityChildElement, ___________________entityBuilder, "entity-ref", "entityRef")) {
                                                                                                                                                                    BeanDefinitionBuilder ____________________entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                                    Element ____________________entityRefChildElement = DomUtils.getChildElementByTagName(___________________entityChildElement, "entity-ref");
                                                                                                                                                                    if (____________________entityRefChildElement!= null) {
                                                                                                                                                                        parseProperty(____________________entityRefBuilder, ____________________entityRefChildElement, "value", "value");
                                                                                                                                                                        parseProperty(____________________entityRefBuilder, ____________________entityRefChildElement, "name", "name");
                                                                                                                                                                        parseProperty(____________________entityRefBuilder, ____________________entityRefChildElement, "type", "type");
                                                                                                                                                                        ___________________entityBuilder.addPropertyValue("entityRef", ____________________entityRefBuilder.getBeanDefinition());
                                                                                                                                                                    }
                                                                                                                                                                }
                                                                                                                                                                __________________journalEntryLineDetailBuilder.addPropertyValue("entity", ___________________entityBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________journalEntryLineDetailChildElement, __________________journalEntryLineDetailBuilder, "account-ref", "accountRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________accountRefChildElement = DomUtils.getChildElementByTagName(__________________journalEntryLineDetailChildElement, "account-ref");
                                                                                                                                                            if (___________________accountRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________accountRefBuilder, ___________________accountRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________accountRefBuilder, ___________________accountRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________accountRefBuilder, ___________________accountRefChildElement, "type", "type");
                                                                                                                                                                __________________journalEntryLineDetailBuilder.addPropertyValue("accountRef", ___________________accountRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________journalEntryLineDetailChildElement, __________________journalEntryLineDetailBuilder, "class-ref", "classRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________classRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________classRefChildElement = DomUtils.getChildElementByTagName(__________________journalEntryLineDetailChildElement, "class-ref");
                                                                                                                                                            if (___________________classRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________classRefBuilder, ___________________classRefChildElement, "type", "type");
                                                                                                                                                                __________________journalEntryLineDetailBuilder.addPropertyValue("classRef", ___________________classRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________journalEntryLineDetailChildElement, __________________journalEntryLineDetailBuilder, "department-ref", "departmentRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________departmentRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________departmentRefChildElement = DomUtils.getChildElementByTagName(__________________journalEntryLineDetailChildElement, "department-ref");
                                                                                                                                                            if (___________________departmentRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________departmentRefBuilder, ___________________departmentRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________departmentRefBuilder, ___________________departmentRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________departmentRefBuilder, ___________________departmentRefChildElement, "type", "type");
                                                                                                                                                                __________________journalEntryLineDetailBuilder.addPropertyValue("departmentRef", ___________________departmentRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        if (!parseObjectRef(__________________journalEntryLineDetailChildElement, __________________journalEntryLineDetailBuilder, "tax-code-ref", "taxCodeRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________taxCodeRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________taxCodeRefChildElement = DomUtils.getChildElementByTagName(__________________journalEntryLineDetailChildElement, "tax-code-ref");
                                                                                                                                                            if (___________________taxCodeRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________taxCodeRefBuilder, ___________________taxCodeRefChildElement, "type", "type");
                                                                                                                                                                __________________journalEntryLineDetailBuilder.addPropertyValue("taxCodeRef", ___________________taxCodeRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________journalEntryLineDetailBuilder, __________________journalEntryLineDetailChildElement, "taxApplicableOn", "taxApplicableOn");
                                                                                                                                                        parseProperty(__________________journalEntryLineDetailBuilder, __________________journalEntryLineDetailChildElement, "taxAmount", "taxAmount");
                                                                                                                                                        parseProperty(__________________journalEntryLineDetailBuilder, __________________journalEntryLineDetailChildElement, "billableStatus", "billableStatus");
                                                                                                                                                        if (!parseObjectRef(__________________journalEntryLineDetailChildElement, __________________journalEntryLineDetailBuilder, "journal-entry-line-detail-ex", "journalEntryLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________journalEntryLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________journalEntryLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________journalEntryLineDetailChildElement, "journal-entry-line-detail-ex");
                                                                                                                                                            if (___________________journalEntryLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________journalEntryLineDetailExChildElement, ___________________journalEntryLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________journalEntryLineDetailBuilder.addPropertyValue("journalEntryLineDetailEx", ___________________journalEntryLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("journalEntryLineDetail", __________________journalEntryLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "group-line-detail", "groupLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________groupLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(GroupLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________groupLineDetailChildElement = DomUtils.getChildElementByTagName(element, "group-line-detail");
                                                                                                                                                    if (__________________groupLineDetailChildElement!= null) {
                                                                                                                                                        if (!parseObjectRef(__________________groupLineDetailChildElement, __________________groupLineDetailBuilder, "group-item-ref", "groupItemRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________groupItemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________groupItemRefChildElement = DomUtils.getChildElementByTagName(__________________groupLineDetailChildElement, "group-item-ref");
                                                                                                                                                            if (___________________groupItemRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________groupItemRefBuilder, ___________________groupItemRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________groupItemRefBuilder, ___________________groupItemRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________groupItemRefBuilder, ___________________groupItemRefChildElement, "type", "type");
                                                                                                                                                                __________________groupLineDetailBuilder.addPropertyValue("groupItemRef", ___________________groupItemRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________groupLineDetailBuilder, __________________groupLineDetailChildElement, "quantity", "quantity");
                                                                                                                                                        parseProperty(__________________groupLineDetailBuilder, __________________groupLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                        parseListAndSetProperty(__________________groupLineDetailChildElement, __________________groupLineDetailBuilder, "line", "line", "line", new ParseDelegate<BeanDefinition>() {


                                                                                                                                                            public BeanDefinition parse(Element element) {
                                                                                                                                                                throw new RuntimeException("Cannot parse this many nested elements");
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        if (!parseObjectRef(__________________groupLineDetailChildElement, __________________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(__________________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                                                                                            if (___________________groupLineDetailExChildElement!= null) {
                                                                                                                                                                parseListAndSetProperty(___________________groupLineDetailExChildElement, ___________________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                                        return element.getTextContent();
                                                                                                                                                                    }

                                                                                                                                                                }
                                                                                                                                                                );
                                                                                                                                                                __________________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", ___________________groupLineDetailExBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        builder.addPropertyValue("groupLineDetail", __________________groupLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                                                                                    BeanDefinitionBuilder __________________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                                                                                    Element __________________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                                                                                    if (__________________subTotalLineDetailChildElement!= null) {
                                                                                                                                                        if (!parseObjectRef(__________________subTotalLineDetailChildElement, __________________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                                            BeanDefinitionBuilder ___________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                                            Element ___________________itemRefChildElement = DomUtils.getChildElementByTagName(__________________subTotalLineDetailChildElement, "item-ref");
                                                                                                                                                            if (___________________itemRefChildElement!= null) {
                                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "value", "value");
                                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "name", "name");
                                                                                                                                                                parseProperty(___________________itemRefBuilder, ___________________itemRefChildElement, "type", "type");
                                                                                                                                                                __________________subTotalLineDetailBuilder.addPropertyValue("itemRef", ___________________itemRefBuilder.getBeanDefinition());
                                                                                                                                                            }
                                                                                                                                                        }
                                                                                                                                                        parseProperty(__________________subTotalLineDetailBuilder, __________________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                                        builder.addPropertyValue("subTotalLineDetail", __________________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                                                                                        parseProperty(builder, element, "definitionId", "definitionId");
                                                                                                                                                        parseProperty(builder, element, "name", "name");
                                                                                                                                                        parseProperty(builder, element, "type", "type");
                                                                                                                                                        parseProperty(builder, element, "stringValue", "stringValue");
                                                                                                                                                        parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                                                                                        parseProperty(builder, element, "dateValue", "dateValue");
                                                                                                                                                        parseProperty(builder, element, "numberValue", "numberValue");
                                                                                                                                                        return builder.getBeanDefinition();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                                                                                    BeanDefinitionBuilder __________________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                                    Element __________________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                                                                                    if (__________________lineExChildElement!= null) {
                                                                                                                                                        parseListAndSetProperty(__________________lineExChildElement, __________________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                            public String parse(Element element) {
                                                                                                                                                                return element.getTextContent();
                                                                                                                                                            }

                                                                                                                                                        }
                                                                                                                                                        );
                                                                                                                                                        builder.addPropertyValue("lineEx", __________________lineExBuilder.getBeanDefinition());
                                                                                                                                                    }
                                                                                                                                                }
                                                                                                                                                return builder.getBeanDefinition();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        if (!parseObjectRef(________________groupLineDetailChildElement, ________________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                                                                            BeanDefinitionBuilder _________________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(________________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                                                                            if (_________________groupLineDetailExChildElement!= null) {
                                                                                                                                                parseListAndSetProperty(_________________groupLineDetailExChildElement, _________________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                                    public String parse(Element element) {
                                                                                                                                                        return element.getTextContent();
                                                                                                                                                    }

                                                                                                                                                }
                                                                                                                                                );
                                                                                                                                                ________________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", _________________groupLineDetailExBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        builder.addPropertyValue("groupLineDetail", ________________groupLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                                                                    BeanDefinitionBuilder ________________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                                                                    Element ________________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                                                                    if (________________subTotalLineDetailChildElement!= null) {
                                                                                                                                        if (!parseObjectRef(________________subTotalLineDetailChildElement, ________________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                                            BeanDefinitionBuilder _________________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                                            Element _________________itemRefChildElement = DomUtils.getChildElementByTagName(________________subTotalLineDetailChildElement, "item-ref");
                                                                                                                                            if (_________________itemRefChildElement!= null) {
                                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "value", "value");
                                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "name", "name");
                                                                                                                                                parseProperty(_________________itemRefBuilder, _________________itemRefChildElement, "type", "type");
                                                                                                                                                ________________subTotalLineDetailBuilder.addPropertyValue("itemRef", _________________itemRefBuilder.getBeanDefinition());
                                                                                                                                            }
                                                                                                                                        }
                                                                                                                                        parseProperty(________________subTotalLineDetailBuilder, ________________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                                        builder.addPropertyValue("subTotalLineDetail", ________________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                                                                        parseProperty(builder, element, "definitionId", "definitionId");
                                                                                                                                        parseProperty(builder, element, "name", "name");
                                                                                                                                        parseProperty(builder, element, "type", "type");
                                                                                                                                        parseProperty(builder, element, "stringValue", "stringValue");
                                                                                                                                        parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                                                                        parseProperty(builder, element, "dateValue", "dateValue");
                                                                                                                                        parseProperty(builder, element, "numberValue", "numberValue");
                                                                                                                                        return builder.getBeanDefinition();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                                                                    BeanDefinitionBuilder ________________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                                    Element ________________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                                                                    if (________________lineExChildElement!= null) {
                                                                                                                                        parseListAndSetProperty(________________lineExChildElement, ________________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                            public String parse(Element element) {
                                                                                                                                                return element.getTextContent();
                                                                                                                                            }

                                                                                                                                        }
                                                                                                                                        );
                                                                                                                                        builder.addPropertyValue("lineEx", ________________lineExBuilder.getBeanDefinition());
                                                                                                                                    }
                                                                                                                                }
                                                                                                                                return builder.getBeanDefinition();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        if (!parseObjectRef(______________groupLineDetailChildElement, ______________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                                                            BeanDefinitionBuilder _______________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(______________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                                                            if (_______________groupLineDetailExChildElement!= null) {
                                                                                                                                parseListAndSetProperty(_______________groupLineDetailExChildElement, _______________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                                    public String parse(Element element) {
                                                                                                                                        return element.getTextContent();
                                                                                                                                    }

                                                                                                                                }
                                                                                                                                );
                                                                                                                                ______________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", _______________groupLineDetailExBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        builder.addPropertyValue("groupLineDetail", ______________groupLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                                                    BeanDefinitionBuilder ______________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                                                    Element ______________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                                                    if (______________subTotalLineDetailChildElement!= null) {
                                                                                                                        if (!parseObjectRef(______________subTotalLineDetailChildElement, ______________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                                            BeanDefinitionBuilder _______________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                                            Element _______________itemRefChildElement = DomUtils.getChildElementByTagName(______________subTotalLineDetailChildElement, "item-ref");
                                                                                                                            if (_______________itemRefChildElement!= null) {
                                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "value", "value");
                                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "name", "name");
                                                                                                                                parseProperty(_______________itemRefBuilder, _______________itemRefChildElement, "type", "type");
                                                                                                                                ______________subTotalLineDetailBuilder.addPropertyValue("itemRef", _______________itemRefBuilder.getBeanDefinition());
                                                                                                                            }
                                                                                                                        }
                                                                                                                        parseProperty(______________subTotalLineDetailBuilder, ______________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                                        builder.addPropertyValue("subTotalLineDetail", ______________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                                                        parseProperty(builder, element, "definitionId", "definitionId");
                                                                                                                        parseProperty(builder, element, "name", "name");
                                                                                                                        parseProperty(builder, element, "type", "type");
                                                                                                                        parseProperty(builder, element, "stringValue", "stringValue");
                                                                                                                        parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                                                        parseProperty(builder, element, "dateValue", "dateValue");
                                                                                                                        parseProperty(builder, element, "numberValue", "numberValue");
                                                                                                                        return builder.getBeanDefinition();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                                                    BeanDefinitionBuilder ______________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                                    Element ______________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                                                    if (______________lineExChildElement!= null) {
                                                                                                                        parseListAndSetProperty(______________lineExChildElement, ______________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                            public String parse(Element element) {
                                                                                                                                return element.getTextContent();
                                                                                                                            }

                                                                                                                        }
                                                                                                                        );
                                                                                                                        builder.addPropertyValue("lineEx", ______________lineExBuilder.getBeanDefinition());
                                                                                                                    }
                                                                                                                }
                                                                                                                return builder.getBeanDefinition();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        if (!parseObjectRef(____________groupLineDetailChildElement, ____________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                                            BeanDefinitionBuilder _____________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                            Element _____________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(____________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                                            if (_____________groupLineDetailExChildElement!= null) {
                                                                                                                parseListAndSetProperty(_____________groupLineDetailExChildElement, _____________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                                    public String parse(Element element) {
                                                                                                                        return element.getTextContent();
                                                                                                                    }

                                                                                                                }
                                                                                                                );
                                                                                                                ____________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", _____________groupLineDetailExBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        builder.addPropertyValue("groupLineDetail", ____________groupLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                                    BeanDefinitionBuilder ____________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                                    Element ____________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                                    if (____________subTotalLineDetailChildElement!= null) {
                                                                                                        if (!parseObjectRef(____________subTotalLineDetailChildElement, ____________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                                            BeanDefinitionBuilder _____________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                                            Element _____________itemRefChildElement = DomUtils.getChildElementByTagName(____________subTotalLineDetailChildElement, "item-ref");
                                                                                                            if (_____________itemRefChildElement!= null) {
                                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "value", "value");
                                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "name", "name");
                                                                                                                parseProperty(_____________itemRefBuilder, _____________itemRefChildElement, "type", "type");
                                                                                                                ____________subTotalLineDetailBuilder.addPropertyValue("itemRef", _____________itemRefBuilder.getBeanDefinition());
                                                                                                            }
                                                                                                        }
                                                                                                        parseProperty(____________subTotalLineDetailBuilder, ____________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                                        builder.addPropertyValue("subTotalLineDetail", ____________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                                    public BeanDefinition parse(Element element) {
                                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                                        parseProperty(builder, element, "definitionId", "definitionId");
                                                                                                        parseProperty(builder, element, "name", "name");
                                                                                                        parseProperty(builder, element, "type", "type");
                                                                                                        parseProperty(builder, element, "stringValue", "stringValue");
                                                                                                        parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                                        parseProperty(builder, element, "dateValue", "dateValue");
                                                                                                        parseProperty(builder, element, "numberValue", "numberValue");
                                                                                                        return builder.getBeanDefinition();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                                    BeanDefinitionBuilder ____________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                                    Element ____________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                                    if (____________lineExChildElement!= null) {
                                                                                                        parseListAndSetProperty(____________lineExChildElement, ____________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                            public String parse(Element element) {
                                                                                                                return element.getTextContent();
                                                                                                            }

                                                                                                        }
                                                                                                        );
                                                                                                        builder.addPropertyValue("lineEx", ____________lineExBuilder.getBeanDefinition());
                                                                                                    }
                                                                                                }
                                                                                                return builder.getBeanDefinition();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        if (!parseObjectRef(__________groupLineDetailChildElement, __________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                                            BeanDefinitionBuilder ___________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                            Element ___________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(__________groupLineDetailChildElement, "group-line-detail-ex");
                                                                                            if (___________groupLineDetailExChildElement!= null) {
                                                                                                parseListAndSetProperty(___________groupLineDetailExChildElement, ___________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                                    public String parse(Element element) {
                                                                                                        return element.getTextContent();
                                                                                                    }

                                                                                                }
                                                                                                );
                                                                                                __________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", ___________groupLineDetailExBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        builder.addPropertyValue("groupLineDetail", __________groupLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                                    BeanDefinitionBuilder __________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                                    Element __________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                                    if (__________subTotalLineDetailChildElement!= null) {
                                                                                        if (!parseObjectRef(__________subTotalLineDetailChildElement, __________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                                            BeanDefinitionBuilder ___________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                                            Element ___________itemRefChildElement = DomUtils.getChildElementByTagName(__________subTotalLineDetailChildElement, "item-ref");
                                                                                            if (___________itemRefChildElement!= null) {
                                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "value", "value");
                                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "name", "name");
                                                                                                parseProperty(___________itemRefBuilder, ___________itemRefChildElement, "type", "type");
                                                                                                __________subTotalLineDetailBuilder.addPropertyValue("itemRef", ___________itemRefBuilder.getBeanDefinition());
                                                                                            }
                                                                                        }
                                                                                        parseProperty(__________subTotalLineDetailBuilder, __________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                                        builder.addPropertyValue("subTotalLineDetail", __________subTotalLineDetailBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                                    public BeanDefinition parse(Element element) {
                                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                                        parseProperty(builder, element, "definitionId", "definitionId");
                                                                                        parseProperty(builder, element, "name", "name");
                                                                                        parseProperty(builder, element, "type", "type");
                                                                                        parseProperty(builder, element, "stringValue", "stringValue");
                                                                                        parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                                        parseProperty(builder, element, "dateValue", "dateValue");
                                                                                        parseProperty(builder, element, "numberValue", "numberValue");
                                                                                        return builder.getBeanDefinition();
                                                                                    }

                                                                                }
                                                                                );
                                                                                if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                                    BeanDefinitionBuilder __________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                                    Element __________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                                    if (__________lineExChildElement!= null) {
                                                                                        parseListAndSetProperty(__________lineExChildElement, __________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                            public String parse(Element element) {
                                                                                                return element.getTextContent();
                                                                                            }

                                                                                        }
                                                                                        );
                                                                                        builder.addPropertyValue("lineEx", __________lineExBuilder.getBeanDefinition());
                                                                                    }
                                                                                }
                                                                                return builder.getBeanDefinition();
                                                                            }

                                                                        }
                                                                        );
                                                                        if (!parseObjectRef(________groupLineDetailChildElement, ________groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                                            BeanDefinitionBuilder _________groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                            Element _________groupLineDetailExChildElement = DomUtils.getChildElementByTagName(________groupLineDetailChildElement, "group-line-detail-ex");
                                                                            if (_________groupLineDetailExChildElement!= null) {
                                                                                parseListAndSetProperty(_________groupLineDetailExChildElement, _________groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                                    public String parse(Element element) {
                                                                                        return element.getTextContent();
                                                                                    }

                                                                                }
                                                                                );
                                                                                ________groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", _________groupLineDetailExBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        builder.addPropertyValue("groupLineDetail", ________groupLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                                    BeanDefinitionBuilder ________subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                                    Element ________subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                                    if (________subTotalLineDetailChildElement!= null) {
                                                                        if (!parseObjectRef(________subTotalLineDetailChildElement, ________subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                                            BeanDefinitionBuilder _________itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                                            Element _________itemRefChildElement = DomUtils.getChildElementByTagName(________subTotalLineDetailChildElement, "item-ref");
                                                                            if (_________itemRefChildElement!= null) {
                                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "value", "value");
                                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "name", "name");
                                                                                parseProperty(_________itemRefBuilder, _________itemRefChildElement, "type", "type");
                                                                                ________subTotalLineDetailBuilder.addPropertyValue("itemRef", _________itemRefBuilder.getBeanDefinition());
                                                                            }
                                                                        }
                                                                        parseProperty(________subTotalLineDetailBuilder, ________subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                                        builder.addPropertyValue("subTotalLineDetail", ________subTotalLineDetailBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                                    public BeanDefinition parse(Element element) {
                                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                                        parseProperty(builder, element, "definitionId", "definitionId");
                                                                        parseProperty(builder, element, "name", "name");
                                                                        parseProperty(builder, element, "type", "type");
                                                                        parseProperty(builder, element, "stringValue", "stringValue");
                                                                        parseProperty(builder, element, "booleanValue", "booleanValue");
                                                                        parseProperty(builder, element, "dateValue", "dateValue");
                                                                        parseProperty(builder, element, "numberValue", "numberValue");
                                                                        return builder.getBeanDefinition();
                                                                    }

                                                                }
                                                                );
                                                                if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                                    BeanDefinitionBuilder ________lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                                    Element ________lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                                    if (________lineExChildElement!= null) {
                                                                        parseListAndSetProperty(________lineExChildElement, ________lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                            public String parse(Element element) {
                                                                                return element.getTextContent();
                                                                            }

                                                                        }
                                                                        );
                                                                        builder.addPropertyValue("lineEx", ________lineExBuilder.getBeanDefinition());
                                                                    }
                                                                }
                                                                return builder.getBeanDefinition();
                                                            }

                                                        }
                                                        );
                                                        if (!parseObjectRef(______groupLineDetailChildElement, ______groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                                            BeanDefinitionBuilder _______groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                            Element _______groupLineDetailExChildElement = DomUtils.getChildElementByTagName(______groupLineDetailChildElement, "group-line-detail-ex");
                                                            if (_______groupLineDetailExChildElement!= null) {
                                                                parseListAndSetProperty(_______groupLineDetailExChildElement, _______groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                                    public String parse(Element element) {
                                                                        return element.getTextContent();
                                                                    }

                                                                }
                                                                );
                                                                ______groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", _______groupLineDetailExBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        builder.addPropertyValue("groupLineDetail", ______groupLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                                    BeanDefinitionBuilder ______subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                                    Element ______subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                                    if (______subTotalLineDetailChildElement!= null) {
                                                        if (!parseObjectRef(______subTotalLineDetailChildElement, ______subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                                            BeanDefinitionBuilder _______itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                                            Element _______itemRefChildElement = DomUtils.getChildElementByTagName(______subTotalLineDetailChildElement, "item-ref");
                                                            if (_______itemRefChildElement!= null) {
                                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "value", "value");
                                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "name", "name");
                                                                parseProperty(_______itemRefBuilder, _______itemRefChildElement, "type", "type");
                                                                ______subTotalLineDetailBuilder.addPropertyValue("itemRef", _______itemRefBuilder.getBeanDefinition());
                                                            }
                                                        }
                                                        parseProperty(______subTotalLineDetailBuilder, ______subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                                        builder.addPropertyValue("subTotalLineDetail", ______subTotalLineDetailBuilder.getBeanDefinition());
                                                    }
                                                }
                                                parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                                    public BeanDefinition parse(Element element) {
                                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                                        parseProperty(builder, element, "definitionId", "definitionId");
                                                        parseProperty(builder, element, "name", "name");
                                                        parseProperty(builder, element, "type", "type");
                                                        parseProperty(builder, element, "stringValue", "stringValue");
                                                        parseProperty(builder, element, "booleanValue", "booleanValue");
                                                        parseProperty(builder, element, "dateValue", "dateValue");
                                                        parseProperty(builder, element, "numberValue", "numberValue");
                                                        return builder.getBeanDefinition();
                                                    }

                                                }
                                                );
                                                if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                                    BeanDefinitionBuilder ______lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                                    Element ______lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                                    if (______lineExChildElement!= null) {
                                                        parseListAndSetProperty(______lineExChildElement, ______lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                            public String parse(Element element) {
                                                                return element.getTextContent();
                                                            }

                                                        }
                                                        );
                                                        builder.addPropertyValue("lineEx", ______lineExBuilder.getBeanDefinition());
                                                    }
                                                }
                                                return builder.getBeanDefinition();
                                            }

                                        }
                                        );
                                        if (!parseObjectRef(____groupLineDetailChildElement, ____groupLineDetailBuilder, "group-line-detail-ex", "groupLineDetailEx")) {
                                            BeanDefinitionBuilder _____groupLineDetailExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                            Element _____groupLineDetailExChildElement = DomUtils.getChildElementByTagName(____groupLineDetailChildElement, "group-line-detail-ex");
                                            if (_____groupLineDetailExChildElement!= null) {
                                                parseListAndSetProperty(_____groupLineDetailExChildElement, _____groupLineDetailExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                                    public String parse(Element element) {
                                                        return element.getTextContent();
                                                    }

                                                }
                                                );
                                                ____groupLineDetailBuilder.addPropertyValue("groupLineDetailEx", _____groupLineDetailExBuilder.getBeanDefinition());
                                            }
                                        }
                                        builder.addPropertyValue("groupLineDetail", ____groupLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                if (!parseObjectRef(element, builder, "sub-total-line-detail", "subTotalLineDetail")) {
                                    BeanDefinitionBuilder ____subTotalLineDetailBuilder = BeanDefinitionBuilder.rootBeanDefinition(SubTotalLineDetailExpressionHolder.class.getName());
                                    Element ____subTotalLineDetailChildElement = DomUtils.getChildElementByTagName(element, "sub-total-line-detail");
                                    if (____subTotalLineDetailChildElement!= null) {
                                        if (!parseObjectRef(____subTotalLineDetailChildElement, ____subTotalLineDetailBuilder, "item-ref", "itemRef")) {
                                            BeanDefinitionBuilder _____itemRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                                            Element _____itemRefChildElement = DomUtils.getChildElementByTagName(____subTotalLineDetailChildElement, "item-ref");
                                            if (_____itemRefChildElement!= null) {
                                                parseProperty(_____itemRefBuilder, _____itemRefChildElement, "value", "value");
                                                parseProperty(_____itemRefBuilder, _____itemRefChildElement, "name", "name");
                                                parseProperty(_____itemRefBuilder, _____itemRefChildElement, "type", "type");
                                                ____subTotalLineDetailBuilder.addPropertyValue("itemRef", _____itemRefBuilder.getBeanDefinition());
                                            }
                                        }
                                        parseProperty(____subTotalLineDetailBuilder, ____subTotalLineDetailChildElement, "serviceDate", "serviceDate");
                                        builder.addPropertyValue("subTotalLineDetail", ____subTotalLineDetailBuilder.getBeanDefinition());
                                    }
                                }
                                parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                                    public BeanDefinition parse(Element element) {
                                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                        parseProperty(builder, element, "definitionId", "definitionId");
                                        parseProperty(builder, element, "name", "name");
                                        parseProperty(builder, element, "type", "type");
                                        parseProperty(builder, element, "stringValue", "stringValue");
                                        parseProperty(builder, element, "booleanValue", "booleanValue");
                                        parseProperty(builder, element, "dateValue", "dateValue");
                                        parseProperty(builder, element, "numberValue", "numberValue");
                                        return builder.getBeanDefinition();
                                    }

                                }
                                );
                                if (!parseObjectRef(element, builder, "line-ex", "lineEx")) {
                                    BeanDefinitionBuilder ____lineExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ____lineExChildElement = DomUtils.getChildElementByTagName(element, "line-ex");
                                    if (____lineExChildElement!= null) {
                                        parseListAndSetProperty(____lineExChildElement, ____lineExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        builder.addPropertyValue("lineEx", ____lineExBuilder.getBeanDefinition());
                                    }
                                }
                                return builder.getBeanDefinition();
                            }

                        }
                        );
                        purchaseBuilder.addPropertyValue("txnTaxDetail", __txnTaxDetailBuilder.getBeanDefinition());
                    }
                }
                parseProperty(purchaseBuilder, purchaseChildElement, "txnSource", "txnSource");
                parseProperty(purchaseBuilder, purchaseChildElement, "serialVersionUID", "serialVersionUID");
                parseProperty(purchaseBuilder, purchaseChildElement, "id", "id");
                parseProperty(purchaseBuilder, purchaseChildElement, "syncToken", "syncToken");
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "meta-data", "metaData")) {
                    BeanDefinitionBuilder ___metaDataBuilder = BeanDefinitionBuilder.rootBeanDefinition(ModificationMetaDataExpressionHolder.class.getName());
                    Element ___metaDataChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "meta-data");
                    if (___metaDataChildElement!= null) {
                        if (!parseObjectRef(___metaDataChildElement, ___metaDataBuilder, "created-by-ref", "createdByRef")) {
                            BeanDefinitionBuilder ____createdByRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                            Element ____createdByRefChildElement = DomUtils.getChildElementByTagName(___metaDataChildElement, "created-by-ref");
                            if (____createdByRefChildElement!= null) {
                                parseProperty(____createdByRefBuilder, ____createdByRefChildElement, "value", "value");
                                parseProperty(____createdByRefBuilder, ____createdByRefChildElement, "name", "name");
                                parseProperty(____createdByRefBuilder, ____createdByRefChildElement, "type", "type");
                                ___metaDataBuilder.addPropertyValue("createdByRef", ____createdByRefBuilder.getBeanDefinition());
                            }
                        }
                        parseProperty(___metaDataBuilder, ___metaDataChildElement, "createTime", "createTime");
                        if (!parseObjectRef(___metaDataChildElement, ___metaDataBuilder, "last-modified-by-ref", "lastModifiedByRef")) {
                            BeanDefinitionBuilder ____lastModifiedByRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                            Element ____lastModifiedByRefChildElement = DomUtils.getChildElementByTagName(___metaDataChildElement, "last-modified-by-ref");
                            if (____lastModifiedByRefChildElement!= null) {
                                parseProperty(____lastModifiedByRefBuilder, ____lastModifiedByRefChildElement, "value", "value");
                                parseProperty(____lastModifiedByRefBuilder, ____lastModifiedByRefChildElement, "name", "name");
                                parseProperty(____lastModifiedByRefBuilder, ____lastModifiedByRefChildElement, "type", "type");
                                ___metaDataBuilder.addPropertyValue("lastModifiedByRef", ____lastModifiedByRefBuilder.getBeanDefinition());
                            }
                        }
                        parseProperty(___metaDataBuilder, ___metaDataChildElement, "lastUpdatedTime", "lastUpdatedTime");
                        parseProperty(___metaDataBuilder, ___metaDataChildElement, "lastChangedInQB", "lastChangedInQB");
                        purchaseBuilder.addPropertyValue("metaData", ___metaDataBuilder.getBeanDefinition());
                    }
                }
                parseListAndSetProperty(purchaseChildElement, purchaseBuilder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                    public BeanDefinition parse(Element element) {
                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                        parseProperty(builder, element, "definitionId", "definitionId");
                        parseProperty(builder, element, "name", "name");
                        parseProperty(builder, element, "type", "type");
                        parseProperty(builder, element, "stringValue", "stringValue");
                        parseProperty(builder, element, "booleanValue", "booleanValue");
                        parseProperty(builder, element, "dateValue", "dateValue");
                        parseProperty(builder, element, "numberValue", "numberValue");
                        return builder.getBeanDefinition();
                    }

                }
                );
                parseListAndSetProperty(purchaseChildElement, purchaseBuilder, "attachableRef", "attachable-ref", "attachable-ref", new ParseDelegate<BeanDefinition>() {


                    public BeanDefinition parse(Element element) {
                        BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(AttachableRefExpressionHolder.class);
                        if (!parseObjectRef(element, builder, "entity-ref", "entityRef")) {
                            BeanDefinitionBuilder ____entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                            Element ____entityRefChildElement = DomUtils.getChildElementByTagName(element, "entity-ref");
                            if (____entityRefChildElement!= null) {
                                parseProperty(____entityRefBuilder, ____entityRefChildElement, "value", "value");
                                parseProperty(____entityRefBuilder, ____entityRefChildElement, "name", "name");
                                parseProperty(____entityRefBuilder, ____entityRefChildElement, "type", "type");
                                builder.addPropertyValue("entityRef", ____entityRefBuilder.getBeanDefinition());
                            }
                        }
                        parseProperty(builder, element, "lineInfo", "lineInfo");
                        parseProperty(builder, element, "includeOnSend", "includeOnSend");
                        parseListAndSetProperty(element, builder, "customField", "custom-field", "custom-field", new ParseDelegate<BeanDefinition>() {


                            public BeanDefinition parse(Element element) {
                                BeanDefinitionBuilder builder = BeanDefinitionBuilder.rootBeanDefinition(CustomFieldExpressionHolder.class);
                                parseProperty(builder, element, "definitionId", "definitionId");
                                parseProperty(builder, element, "name", "name");
                                parseProperty(builder, element, "type", "type");
                                parseProperty(builder, element, "stringValue", "stringValue");
                                parseProperty(builder, element, "booleanValue", "booleanValue");
                                parseProperty(builder, element, "dateValue", "dateValue");
                                parseProperty(builder, element, "numberValue", "numberValue");
                                return builder.getBeanDefinition();
                            }

                        }
                        );
                        if (!parseObjectRef(element, builder, "attachable-ref-ex", "attachableRefEx")) {
                            BeanDefinitionBuilder ____attachableRefExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                            Element ____attachableRefExChildElement = DomUtils.getChildElementByTagName(element, "attachable-ref-ex");
                            if (____attachableRefExChildElement!= null) {
                                parseListAndSetProperty(____attachableRefExChildElement, ____attachableRefExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                    public String parse(Element element) {
                                        return element.getTextContent();
                                    }

                                }
                                );
                                builder.addPropertyValue("attachableRefEx", ____attachableRefExBuilder.getBeanDefinition());
                            }
                        }
                        return builder.getBeanDefinition();
                    }

                }
                );
                parseProperty(purchaseBuilder, purchaseChildElement, "domain", "domain");
                parseProperty(purchaseBuilder, purchaseChildElement, "status", "status");
                parseProperty(purchaseBuilder, purchaseChildElement, "sparse", "sparse");
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "account-ref", "accountRef")) {
                    BeanDefinitionBuilder _accountRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                    Element _accountRefChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "account-ref");
                    if (_accountRefChildElement!= null) {
                        parseProperty(_accountRefBuilder, _accountRefChildElement, "value", "value");
                        parseProperty(_accountRefBuilder, _accountRefChildElement, "name", "name");
                        parseProperty(_accountRefBuilder, _accountRefChildElement, "type", "type");
                        purchaseBuilder.addPropertyValue("accountRef", _accountRefBuilder.getBeanDefinition());
                    }
                }
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "payment-method-ref", "paymentMethodRef")) {
                    BeanDefinitionBuilder _paymentMethodRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                    Element _paymentMethodRefChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "payment-method-ref");
                    if (_paymentMethodRefChildElement!= null) {
                        parseProperty(_paymentMethodRefBuilder, _paymentMethodRefChildElement, "value", "value");
                        parseProperty(_paymentMethodRefBuilder, _paymentMethodRefChildElement, "name", "name");
                        parseProperty(_paymentMethodRefBuilder, _paymentMethodRefChildElement, "type", "type");
                        purchaseBuilder.addPropertyValue("paymentMethodRef", _paymentMethodRefBuilder.getBeanDefinition());
                    }
                }
                parseProperty(purchaseBuilder, purchaseChildElement, "paymentRefNum", "paymentRefNum");
                parseProperty(purchaseBuilder, purchaseChildElement, "paymentType", "paymentType");
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "check-payment", "checkPayment")) {
                    BeanDefinitionBuilder _checkPaymentBuilder = BeanDefinitionBuilder.rootBeanDefinition(CheckPaymentExpressionHolder.class.getName());
                    Element _checkPaymentChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "check-payment");
                    if (_checkPaymentChildElement!= null) {
                        parseProperty(_checkPaymentBuilder, _checkPaymentChildElement, "checkNum", "checkNum");
                        parseProperty(_checkPaymentBuilder, _checkPaymentChildElement, "status", "status");
                        parseProperty(_checkPaymentBuilder, _checkPaymentChildElement, "nameOnAcct", "nameOnAcct");
                        parseProperty(_checkPaymentBuilder, _checkPaymentChildElement, "acctNum", "acctNum");
                        parseProperty(_checkPaymentBuilder, _checkPaymentChildElement, "bankName", "bankName");
                        if (!parseObjectRef(_checkPaymentChildElement, _checkPaymentBuilder, "check-payment-ex", "checkPaymentEx")) {
                            BeanDefinitionBuilder __checkPaymentExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                            Element __checkPaymentExChildElement = DomUtils.getChildElementByTagName(_checkPaymentChildElement, "check-payment-ex");
                            if (__checkPaymentExChildElement!= null) {
                                parseListAndSetProperty(__checkPaymentExChildElement, __checkPaymentExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                    public String parse(Element element) {
                                        return element.getTextContent();
                                    }

                                }
                                );
                                _checkPaymentBuilder.addPropertyValue("checkPaymentEx", __checkPaymentExBuilder.getBeanDefinition());
                            }
                        }
                        purchaseBuilder.addPropertyValue("checkPayment", _checkPaymentBuilder.getBeanDefinition());
                    }
                }
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "credit-card-payment", "creditCardPayment")) {
                    BeanDefinitionBuilder _creditCardPaymentBuilder = BeanDefinitionBuilder.rootBeanDefinition(CreditCardPaymentExpressionHolder.class.getName());
                    Element _creditCardPaymentChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "credit-card-payment");
                    if (_creditCardPaymentChildElement!= null) {
                        if (!parseObjectRef(_creditCardPaymentChildElement, _creditCardPaymentBuilder, "credit-charge-info", "creditChargeInfo")) {
                            BeanDefinitionBuilder __creditChargeInfoBuilder = BeanDefinitionBuilder.rootBeanDefinition(CreditChargeInfoExpressionHolder.class.getName());
                            Element __creditChargeInfoChildElement = DomUtils.getChildElementByTagName(_creditCardPaymentChildElement, "credit-charge-info");
                            if (__creditChargeInfoChildElement!= null) {
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "number", "number");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "type", "type");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "nameOnAcct", "nameOnAcct");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "ccExpiryMonth", "ccExpiryMonth");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "ccExpiryYear", "ccExpiryYear");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "billAddrStreet", "billAddrStreet");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "postalCode", "postalCode");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "commercialCardCode", "commercialCardCode");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "prevCCTransId", "prevCCTransId");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "amount", "amount");
                                parseProperty(__creditChargeInfoBuilder, __creditChargeInfoChildElement, "processPayment", "processPayment");
                                if (!parseObjectRef(__creditChargeInfoChildElement, __creditChargeInfoBuilder, "credit-card-charge-info-ex", "creditCardChargeInfoEx")) {
                                    BeanDefinitionBuilder ___creditCardChargeInfoExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ___creditCardChargeInfoExChildElement = DomUtils.getChildElementByTagName(__creditChargeInfoChildElement, "credit-card-charge-info-ex");
                                    if (___creditCardChargeInfoExChildElement!= null) {
                                        parseListAndSetProperty(___creditCardChargeInfoExChildElement, ___creditCardChargeInfoExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        __creditChargeInfoBuilder.addPropertyValue("creditCardChargeInfoEx", ___creditCardChargeInfoExBuilder.getBeanDefinition());
                                    }
                                }
                                _creditCardPaymentBuilder.addPropertyValue("creditChargeInfo", __creditChargeInfoBuilder.getBeanDefinition());
                            }
                        }
                        if (!parseObjectRef(_creditCardPaymentChildElement, _creditCardPaymentBuilder, "credit-charge-response", "creditChargeResponse")) {
                            BeanDefinitionBuilder __creditChargeResponseBuilder = BeanDefinitionBuilder.rootBeanDefinition(CreditChargeResponseExpressionHolder.class.getName());
                            Element __creditChargeResponseChildElement = DomUtils.getChildElementByTagName(_creditCardPaymentChildElement, "credit-charge-response");
                            if (__creditChargeResponseChildElement!= null) {
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "status", "status");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "resultCode", "resultCode");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "resultMsg", "resultMsg");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "merchantAcctNum", "merchantAcctNum");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "cardSecurityCodeMatch", "cardSecurityCodeMatch");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "authCode", "authCode");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "avsStreet", "avsStreet");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "avsZip", "avsZip");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "securityCode", "securityCode");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "reconBatchId", "reconBatchId");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "paymentGroupingCode", "paymentGroupingCode");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "txnAuthorizationTime", "txnAuthorizationTime");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "txnAuthorizationStamp", "txnAuthorizationStamp");
                                parseProperty(__creditChargeResponseBuilder, __creditChargeResponseChildElement, "clientTransID", "clientTransID");
                                if (!parseObjectRef(__creditChargeResponseChildElement, __creditChargeResponseBuilder, "credit-charge-response-ex", "creditChargeResponseEx")) {
                                    BeanDefinitionBuilder ___creditChargeResponseExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                                    Element ___creditChargeResponseExChildElement = DomUtils.getChildElementByTagName(__creditChargeResponseChildElement, "credit-charge-response-ex");
                                    if (___creditChargeResponseExChildElement!= null) {
                                        parseListAndSetProperty(___creditChargeResponseExChildElement, ___creditChargeResponseExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                                            public String parse(Element element) {
                                                return element.getTextContent();
                                            }

                                        }
                                        );
                                        __creditChargeResponseBuilder.addPropertyValue("creditChargeResponseEx", ___creditChargeResponseExBuilder.getBeanDefinition());
                                    }
                                }
                                _creditCardPaymentBuilder.addPropertyValue("creditChargeResponse", __creditChargeResponseBuilder.getBeanDefinition());
                            }
                        }
                        purchaseBuilder.addPropertyValue("creditCardPayment", _creditCardPaymentBuilder.getBeanDefinition());
                    }
                }
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "entity-ref", "entityRef")) {
                    BeanDefinitionBuilder _entityRefBuilder = BeanDefinitionBuilder.rootBeanDefinition(ReferenceTypeExpressionHolder.class.getName());
                    Element _entityRefChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "entity-ref");
                    if (_entityRefChildElement!= null) {
                        parseProperty(_entityRefBuilder, _entityRefChildElement, "value", "value");
                        parseProperty(_entityRefBuilder, _entityRefChildElement, "name", "name");
                        parseProperty(_entityRefBuilder, _entityRefChildElement, "type", "type");
                        purchaseBuilder.addPropertyValue("entityRef", _entityRefBuilder.getBeanDefinition());
                    }
                }
                parseProperty(purchaseBuilder, purchaseChildElement, "credit", "credit");
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "remit-to-addr", "remitToAddr")) {
                    BeanDefinitionBuilder _remitToAddrBuilder = BeanDefinitionBuilder.rootBeanDefinition(PhysicalAddressExpressionHolder.class.getName());
                    Element _remitToAddrChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "remit-to-addr");
                    if (_remitToAddrChildElement!= null) {
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "id", "id");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "line1", "line1");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "line2", "line2");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "line3", "line3");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "line4", "line4");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "line5", "line5");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "city", "city");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "country", "country");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "countryCode", "countryCode");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "countrySubDivisionCode", "countrySubDivisionCode");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "postalCode", "postalCode");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "postalCodeSuffix", "postalCodeSuffix");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "lat", "lat");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "tag", "tag");
                        parseProperty(_remitToAddrBuilder, _remitToAddrChildElement, "note", "note");
                        purchaseBuilder.addPropertyValue("remitToAddr", _remitToAddrBuilder.getBeanDefinition());
                    }
                }
                parseProperty(purchaseBuilder, purchaseChildElement, "totalAmt", "totalAmt");
                parseProperty(purchaseBuilder, purchaseChildElement, "txnId", "txnId");
                parseProperty(purchaseBuilder, purchaseChildElement, "txnNum", "txnNum");
                parseProperty(purchaseBuilder, purchaseChildElement, "memo", "memo");
                parseProperty(purchaseBuilder, purchaseChildElement, "printStatus", "printStatus");
                parseProperty(purchaseBuilder, purchaseChildElement, "globalTaxCalculation", "globalTaxCalculation");
                if (!parseObjectRef(purchaseChildElement, purchaseBuilder, "purchase-ex", "purchaseEx")) {
                    BeanDefinitionBuilder _purchaseExBuilder = BeanDefinitionBuilder.rootBeanDefinition(IntuitAnyTypeExpressionHolder.class.getName());
                    Element _purchaseExChildElement = DomUtils.getChildElementByTagName(purchaseChildElement, "purchase-ex");
                    if (_purchaseExChildElement!= null) {
                        parseListAndSetProperty(_purchaseExChildElement, _purchaseExBuilder, "any", "any", "any", new ParseDelegate<String>() {


                            public String parse(Element element) {
                                return element.getTextContent();
                            }

                        }
                        );
                        purchaseBuilder.addPropertyValue("purchaseEx", _purchaseExBuilder.getBeanDefinition());
                    }
                }
                builder.addPropertyValue("purchase", purchaseBuilder.getBeanDefinition());
            }
        }
        BeanDefinition definition = builder.getBeanDefinition();
        setNoRecurseOnDefinition(definition);
        attachProcessorDefinition(parserContext, definition);
        return definition;
    }

}
