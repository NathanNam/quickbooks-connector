<?xml version="1.0" encoding="UTF-8"?>
<!--

    Mule FWS Cloud Connector

    Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com

    The software in this package is published under the terms of the CPAL v1.0
    license, a copy of which has been included with this distribution in the
    LICENSE.txt file.

-->


<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:spring="http://www.springframework.org/schema/beans"
  xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xmlns:quickbooks="http://repository.mulesoft.org/releases/org/mule/modules/mule-module-quick-books"
  xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
        http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.2/mule-scripting.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd
        http://repository.mulesoft.org/releases/org/mule/modules/mule-module-quick-books http://repository.mulesoft.org/releases/org/mule/modules/mule-module-quick-books/1.0/mule-quickbooks.xsd">
        
    <http:connector name="connector.http.mule.default" enableCookies="true" keepAlive="true"/>
    
    <quickbooks:config consumerKey="${quickbooksConsumerKey}"
        consumerSecret="${quickbooksConsumerSecret}"
        realmId="${quickbooksRealmId}" />

    <flow name="GetProfileByUrl">
        <description>Retrieves a single customer given its ID</description>
        <http:inbound-endpoint host="localhost" port="9092" path="getProfileByUrl"/>
        <quickbooks:get-object type="CUSTOMER">
            <quickbooks:id ref="#[header:inbound:idCustomerValue]"/>
        </quickbooks:get-object>
        <!-- <scripting:component>
            <scripting:script engine="groovy">
                <![CDATA[        
                String str = "";
                str += "Customer: " + payload.getId().getValue() + "\n";
                str += "   Given Name: " + payload.getGivenName() + "\n";
                str += "   Middle Name: " + payload.getMiddleName() + "\n";
                str += "   Family Name: " + payload.getFamilyName() + "\n"
                str += "   Gender: ";
                str += aux.getGender() == null ? "N/A": aux.getGender().getValue();
                str += "\n\n";
                                
                return str;      
                ]]>
            </scripting:script>
        </scripting:component> Use this when scripting works with OAuth!-->
    </flow>
    
    <flow name="SearchListOfCustomers">
        <description>Retrieves the list of customers that pass the filter successfully</description>
        <http:inbound-endpoint host="localhost" port="9092" path="searchListOfCustomers" />
        <quickbooks:find-objects type="CUSTOMER" 
                                 queryFilter="#[header:inbound:filter]"
                                 querySort="#[header:inbound:sort]">
        </quickbooks:find-objects>
        <!-- <scripting:component>
            <scripting:script engine="groovy">
                <![CDATA[        
                String str = "";
                for(String aux : payload) {
                    str += "Customer: " + aux.getId().getValue() + "\n";
                    str += "   Given Name: " + aux.getGivenName() + "\n";
                    str += "   Middle Name: " + aux.getMiddleName() + "\n";
                    str += "   Family Name: " + aux.getFamilyName() + "\n"
                    str += "   Gender: ";
                    str += aux.getGender() == null ? "N/A": aux.getGender().getValue();
                    str += "\n\n";
                }
                
                return str;      
                ]]>
            </scripting:script>
        </scripting:component> Use this when scripting works with OAuth!-->
    </flow>
    
    <flow name="GetAllCustomers">
        <description>Retrieves the full list of customers</description>
        <http:inbound-endpoint host="localhost" port="9092" path="getAllCustomers" />
        <quickbooks:find-objects type="CUSTOMER" />
        <!-- <scripting:component>
            <scripting:script engine="groovy">
                <![CDATA[        
                String str = "";
                for(String aux : payload) {
                    str += "Customer: " + aux.getId().getValue() + "\n";
                    str += "   Given Name: " + aux.getGivenName() + "\n";
                    str += "   Middle Name: " + aux.getMiddleName() + "\n";
                    str += "   Family Name: " + aux.getFamilyName() + "\n"
                    str += "   Gender: ";
                    str += aux.getGender() == null ? "N/A": aux.getGender().getValue();
                    str += "\n\n";
                }
                
                return str;      
                ]]>
            </scripting:script>
        </scripting:component> Use this when scripting works with OAuth!-->
    </flow>
</mule>
