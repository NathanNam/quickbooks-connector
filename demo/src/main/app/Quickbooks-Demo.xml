<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:quickbooks="http://www.mulesoft.org/schema/mule/quickbooks" xmlns:context="http://www.springframework.org/schema/context" xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:spring="http://www.springframework.org/schema/beans" xmlns:core="http://www.mulesoft.org/schema/mule/core" xmlns:debugger="http://www.mulesoft.org/schema/mule/debugger" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="EE-3.3.0" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/quickbooks http://www.mulesoft.org/schema/mule/quickbooks/2.0/mule-quickbooks.xsd 
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd 
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd 
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd 
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
http://www.mulesoft.org/schema/mule/debugger http://www.mulesoft.org/schema/mule/debugger/current/mule-debugger.xsd 
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd ">
    <quickbooks:config name="Quickbooks" doc:name="Quickbooks"/>
    <context:property-placeholder location="mule.properties"/>
    <data-mapper:config name="accountId" transformationGraphPath="accountid.grf" doc:name="accountId"/>
    <data-mapper:config name="Customer" transformationGraphPath="customer.grf" doc:name="Customer"/>
    <data-mapper:config name="Invoice" transformationGraphPath="invoice.grf" doc:name="Invoice"/>
    <data-mapper:config name="Bill" transformationGraphPath="bill.grf" doc:name="Bill"/>
    <data-mapper:config name="Check" transformationGraphPath="check.grf" doc:name="Check"/>
    <data-mapper:config name="BillPayment" transformationGraphPath="billpayment.grf" doc:name="BillPayment"/>
    <data-mapper:config name="CashPurchase" transformationGraphPath="cashpurchase.grf" doc:name="CashPurchase"/>
    <data-mapper:config name="CreditCardCharge" transformationGraphPath="creditcardcharge.grf" doc:name="CreditCardCharge"/>
    <data-mapper:config name="Estimate" transformationGraphPath="estimate.grf" doc:name="Estimate"/>
    <data-mapper:config name="Item" transformationGraphPath="item.grf" doc:name="Item"/>
    <data-mapper:config name="Payment" transformationGraphPath="payment.grf" doc:name="Payment"/>
    <data-mapper:config name="PaymentMethod" transformationGraphPath="paymentmethod_1.grf" doc:name="PaymentMethod"/>
    <data-mapper:config name="SalesReceipt" transformationGraphPath="salesreceipt.grf" doc:name="SalesReceipt"/>
    <data-mapper:config name="SalesTerm" transformationGraphPath="salesterm.grf" doc:name="SalesTerm"/>
    <data-mapper:config name="Vendor" transformationGraphPath="vendor.grf" doc:name="Vendor"/>
    <flow name="Quickbooks-Demo_CreateAccount" doc:name="Quickbooks-Demo_CreateAccount">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-account" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[new org.mule.modules.quickbooks.online.model.QBAccount(
	account: new org.mule.modules.quickbooks.online.schema.Account(
		name : 'Loan Account Test' ,
	    desc : 'Loan Account Test' ,
		subtype : "Savings" ,
		acctNum : '5002' ,
		openingBalanceDate :
			org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
				org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
            	  .parseDateTime('2010-05-14T01:18:14-07:00').toDate() )
)
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-account config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[payload.account.desc = "AccountMod"
return payload]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:update-account config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="accountId" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="ACCOUNT" doc:name="Quickbooks"/>
        <logger message="Account deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateCustomer" doc:name="Quickbooks-Demo_CreateCustomer">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-customer" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*
new org.mule.modules.quickbooks.online.model.QBCustomer(
	customer: new org.mule.modules.quickbooks.online.schema.Customer(
			name : 'John Doe Testing' ,
            givenName : 'John' ,
            middleName : 'J' ,
            familyName : 'Doe Testing' ,
            dbaName : 'Mint', 
            webSite : [ new WebSiteAddress( uri : 'http://www.digitalinsight.mint.com/' )] ,
            salesTermId : new IdType( value : '6' ) ,
            email : [ new EmailAddress( address : 'john_doe@digitalinsight.mint.com' )] ,
            phone : [ new TelephoneNumber( deviceType : 'Mobile' ,
            			freeFormNumber : '(770) 349-1200') ,
                      new TelephoneNumber( deviceType : 'Fax' ,
                        freeFormNumber : '(770) 349-1300') ] ,
            address : [ new PhysicalAddress( line1 : 'Park Avenue' ,
                                             city : 'Woodland' ,
                                             countrySubDivisionCode : 'CA' ,
                                             postalCode : '91367' ) ]
)
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-customer config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[payload.customer.givenName = "John Mod Name"
return payload]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:update-customer config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="Customer" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="CUSTOMER" doc:name="Quickbooks"/>
        <logger message="Customer deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateInvoice" doc:name="Quickbooks-Demo_CreateInvoice">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-invoice" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBInvoice(
	invoice: new org.mule.modules.quickbooks.online.schema.Invoice(
    	header : new InvoiceHeader(
                docNumber : '00010' ,
                txnDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                          	org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2010-08-07T15:00:00-07:00').toDate() ) ,
                msg :'No Black Ink Pens' ,
                note : 'Blue Ink pens only' ,
                customerId : new IdType( value : '5' ) ,
                subTotalAmt : 10 ,
                taxRate : 0.5 ,
                totalAmt : 11 ,
                salesTermId : new IdType( value : '5' ) ,
                dueDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                              org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2010-08-16T15:00:00-07:00').toDate() ) ,
                billEmail : 'john_doe@digitalinsight.com' ,
                discountAmt : -1.25
                ),
     	line : [ new InvoiceLine(
                desc : 'Pens' ,
                amount : 200 ,
                taxable : true ,
                itemId : new IdType( value : '4' ) ,
                unitPrice : 100 ,
                qty : 4
                )
                ]
)
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-invoice config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[payload.invoice.msg = 'No Black Ink Pens'
return payload]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:update-invoice config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="Invoice" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="INVOICE" doc:name="Quickbooks"/>
        <logger message="Invoice deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateBill" doc:name="Quickbooks-Demo_CreateBill">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-bill" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBBill(
	bill: new org.mule.modules.quickbooks.online.schema.Bill(
		header : new BillHeader( 
                     docNumber : '2004' ,
                     txnDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                    org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                        .parseDateTime('2011-05-14T01:18:14-07:00').toDate() ) ,
                     msg : '4 Pens' ,
                     vendorId : new IdType( value : '7' ) ,
                     vendorName : 'Digital' ,
                     salesTermId : new IdType( value : '5') ,
                     salesTermName : 'Due before receipt' ,
                     dueDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                    org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                        .parseDateTime('2010-08-11T15:00:00-07:00').toDate() )
                     ) ,
        line : [ new BillLine(
                     desc : 'Pens' ,
                     amount : 25 ,
                     billableStatus : BillableStatusEnum.NOT_BILLABLE ,
                     qty : 5 ,
                     unitPrice : 5 ,
                     itemId : new IdType( value : '2' ) )
                 ]
)
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-bill config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="Bill" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="BILL" doc:name="Quickbooks"/>
        <logger message="Bill created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateCheck" doc:name="Quickbooks-Demo_CreateCheck">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-check" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBCheck(
	check: new Check(
               header : new CheckHeader(
                            docNumber : '25' ,
                            txnDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                        org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                           .parseDateTime('2010-08-09T15:00:00-07:00').toDate() ) ,
                            msg : 'Hard Disks' ,
                            bankAccountId : new IdType( value : '40' ) ,
                            entityId : new IdType( value : '1' )
                            ) ,
               line : [ new CheckLine(
                            desc : 'Hard Disks' ,
                            amount : 500 ,
                            billableStatus : BillableStatusEnum.NOT_BILLABLE ,
                            itemId : new IdType( value : '2' ) ,
                            qty : 10 ,
                            unitPrice : 50
                            )
                      ]
)
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-check config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="Check" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="CHECK" doc:name="Quickbooks"/>
        <logger message="Check created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateBillPayment" doc:name="Quickbooks-Demo_CreateBillPayment">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-billpayment" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBBillPayment(
	billPayment: new BillPayment(
                     header : new BillPaymentHeader(
                                    docNumber : '15' ,
                                    txnDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                        org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                            .parseDateTime('2010-09-08T15:00:00-07:00').toDate() ) ,
                                    entityId : new IdType( value : '1' ) ,
                                    apAccountId : new IdType( value : '31' ),
									totalAmt: 5000.00
                                ) ,
                     line : [ new BillPaymentLine(
                                            amount : 5000.00 ,
                                            txnId : new IdType( value : '12' ) ) 
                            ]
                     )
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-bill-payment config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="BillPayment" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="BILLPAYMENT" doc:name="Quickbooks"/>
        <logger message="Bill Payment created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateCashPurchase" doc:name="Quickbooks-Demo_CreateCashPurchase">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-cashpurchase" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBCashPurchase(
	cashPurchase: new CashPurchase(
                          header : new CashPurchaseHeader(
                                        docNumber : '1454' ,
                                        txnDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                            org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2010-08-09T15:00:00-07:00').toDate() ) ,
                                        msg : 'Pens Purchased' ,
                                        cashAccountId : new IdType( value : '41' ) ,
                                        entityId : new IdType( value  : '1' )
                                    ) ,
                          line : [ new CashPurchaseLine(
                                                desc : 'Blue Ink Pens' ,
                                                amount : 200.00 ,
                                                accountId : new IdType( value : '30' ) )
                                 ]
                          )
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-cash-purchase config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="CashPurchase" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="CASHPURCHASE" doc:name="Quickbooks"/>
        <logger message="Cash Purchase created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateCreditCardCharge" doc:name="Quickbooks-Demo_CreateCreditCardCharge">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-creditcardcharge" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBCreditCardCharge(
	creditCardCharge: new CreditCardCharge(
                                    header : new CreditCardChargeHeader(
                                        docNumber : '1200' ,
                                        txnDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                            org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2010-08-09T15:00:00-07:00').toDate() ) ,
                                        msg : 'Purchased Pen' ,
                                        ccAccountId : new IdType( value : '30' ) ,
                                        entityId : new IdType( value: '1' )
                                    ) ,
                                    line : [ new CreditCardChargeLine(
                                                desc : 'Pens Purchased',
                                                amount : 5, 
                                                reimbursableInfo : new ReimbursableInfo(
                                                    					customerId : new IdType( value : '5' ) 
																	) ,
                                                billableStatus : BillableStatusEnum.NOT_BILLABLE ,
                                                itemId : new IdType( value : '5' ),
                                                unitPrice : 1,
                                                qty : 5
											)
                                           ] 
                                    )
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-credit-card-charge config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="CreditCardCharge" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="CREDITCARDCHARGE" doc:name="Quickbooks"/>
        <logger message="Credit card charge created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateEstimate" doc:name="Quickbooks-Demo_CreateEstimate">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-estimate" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBEstimate(
	estimate: new Estimate(
                                    header : new EstimateHeader(
                                        docNumber : '1002' ,
                                        txnDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                            org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2010-08-07T15:00:00-07:00').toDate() ) ,
                                        msg : 'Please consider discount' ,
                                        note : 'Estimate for Eraser purchase' ,
                                        status : 'Pending' ,
                                        customerId : new IdType(value : '300') ,
                                        taxRate : 0.5 ,
                                        billEmail : 'john_doe@digitalinsight.com' ,
                                        discountAmt : -1.25 ,
                                        expirationDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                            org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2010-08-16T15:00:00-07:00').toDate() ) ,
                                        acceptedBy : 'Purchase manager' ,
                                        acceptedDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                            org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2010-04-08T15:00:00-07:00').toDate() )
                                    ) ,
                                    line : [ new EstimateLine(
                                                desc : 'Erasers' ,
                                                amount : 5 ,
                                                taxable : true ,
                                                itemId : new IdType( value : '5' ) ,
                                                unitPrice : 1 ,
                                                qty : 5 )
                                           ]
                                )
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-estimate config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="Estimate" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="ESTIMATE" doc:name="Quickbooks"/>
        <logger message="Estimate created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateItem" doc:name="Quickbooks-Demo_CreateItem">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-item" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBItem(
	item: new Item(
              name : 'Pencils' ,
              desc : 'pencil hb' ,
              taxable : true ,
              purchaseDesc : '500 pencils purchased' ,
              unitPrice : new Money( amount : 2 ) ,
              incomeAccountRef : new AccountRef( 
                                   	accountId : new IdType( value : '30' )
                                   ) ,
              purchaseCost : new Money( amount : 1 ) ,
              expenseAccountRef : new AccountRef( 
                                        accountId : new IdType( value : '30' ) 
                                    )  
)
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-item config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="Item" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="ITEM" doc:name="Quickbooks"/>
        <logger message="Item created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreatePayment" doc:name="Quickbooks-Demo_CreatePayment">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-payment" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBPayment(
	payment: new Payment(
                  header : new PaymentHeader(
                               docNumber : '54' ,
                               txnDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                            org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2010-08-09T15:00:00-07:00').toDate() ) ,
                               note : 'Payment against Invoice' ,
                               customerId : new IdType( value : '5' ) ,
                               depositToAccountId : new IdType( value : '41' ) ,
                               paymentMethodId : new IdType( value : '1' ) ,
                               totalAmt : 20.00 ,
                               processPayment : false
                                    ) ,
                  line : [ new PaymentLine(
                                amount : 20.00 ,
                                txnId : new IdType( value : '8' ) 
    					 	    )
                         ]
)
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-payment config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="Payment" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="PAYMENT" doc:name="Quickbooks"/>
        <logger message="Payment created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreatePaymentMethod" doc:name="Quickbooks-Demo_CreatePaymentMethod">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-paymentmethod" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBPaymentMethod(
	paymentMethod: new PaymentMethod(
                                  name : 'PaymentMethod Test' ,
                                  type : 'NON_CREDIT_CARD'
                              )
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-payment-method config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="PaymentMethod" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="PAYMENTMETHOD" doc:name="Quickbooks"/>
        <logger message="Payment method created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateSalesReceipt" doc:name="Quickbooks-Demo_CreateSalesReceipt">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-salesreceipt" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBSalesReceipt(
	salesReceipt: new SalesReceipt(
                                    header : new SalesReceiptHeader(
                                        docNumber : '99009926' ,
                                        txnDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                            org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2010-10-22T15:00:00-07:00').toDate() ) ,
                                        currency : 'USD' ,
                                        customerId : new IdType(
                                                        value : '1' ,
                                                        idDomain: IdDomainEnum.QBO
                                                     ) ,
                                        shipDate : org.mule.modules.utils.date.XmlGregorianCalendars.nullSafeFrom(
                                            org.mule.modules.utils.date.DateConventions.defaultDateTimeFormat()
                                                .parseDateTime('2011-04-22T15:00:00-07:00').toDate() ) ,
                                        totalAmt : 2500 ,
                                        discountAmt : 0
                                    ) ,
                                    line : [ new SalesReceiptLine(
                                                desc : 'Keyboards' ,
                                                amount : 2500 ,
                                                itemName : 'Pen' ,
                                                unitPrice : 10 ,
                                                qty : 2 ) 
                                           ]
                                )
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-sales-receipt config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="SalesReceipt" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="SALESRECEIPT" doc:name="Quickbooks"/>
        <logger message="Sales receipt created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateSalesTerm" doc:name="Quickbooks-Demo_CreateSalesTerm">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-salesterm" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBSalesTerm(
	salesTerm: new SalesTerm(
                                    name : 'Sales Term test' ,
                                    dueDays : 1 ,
                                    discountDays : 10 ,
                                    discountPercent : 3.2 ,
                                    dayOfMonthDue : 10 ,
                                    dueNextMonthDays : 10 ,
                                    discountDayOfMonth : 5 ,
                                    dateDiscountPercent : 2.1
                                )
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-sales-term config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="SalesTerm" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="SALESTERM" doc:name="Quickbooks"/>
        <logger message="Sales Term created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="Quickbooks-Demo_CreateVendor" doc:name="Quickbooks-Demo_CreateVendor">
        <http:inbound-endpoint exchange-pattern="one-way" host="localhost" port="8081" path="create-vendor" doc:name="HTTP"/>
        <scripting:component doc:name="Groovy">
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[import org.mule.modules.quickbooks.online.schema.*

new org.mule.modules.quickbooks.online.model.QBVendor(
	vendor: new Vendor(
                         name : 'Digital' ,
                         givenName : 'John' ,
                         middleName : 'j' ,
                         familyName : 'Doe' ,
                         dbaName : 'Digital' ,
                         taxIdentifier : '12-1234567' ,
                         acctNum : '9001' ,
                         vendor1099 : true ,
                         webSite : [ new WebSiteAddress( uri : 'http://www.digitalinsight.mint.com/' )] ,
                         email : [ new EmailAddress( address : 'john_doe@digitalinsight.mint.com' )] ,
                         phone : [ new TelephoneNumber( freeFormNumber : '(770) 349-1200') ] ,
                         address : [ new PhysicalAddress( 
										line1 : 'Park Avenue' ,
                         				city : 'Woodland Hills' ,
                                        countrySubDivisionCode : 'CA' ,
                                        postalCode : '91367' ) 
									]
                )
)]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <quickbooks:create-vendor config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" doc:name="Quickbooks"/>
        <data-mapper:transform config-ref="Vendor" doc:name="DataMapper"/>
        <quickbooks:delete-object config-ref="Quickbooks" appKey="${quickbooksAppKey}" authIdPseudonym="${quickbooksAuthIdPseudonym}" realmId="${quickbooksRealmId}" realmIdPseudonym="${quickbooksRealmIdPseudonym}" type="VENDOR" doc:name="Quickbooks"/>
        <logger message="Vendor created and deleted!!!" level="INFO" doc:name="Logger"/>
    </flow>
</mule>
