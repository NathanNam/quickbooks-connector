<?xml version="1.0" encoding="UTF-8"?>
<!--

    Mule QuickBooks Connector

    Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com

    The software in this package is published under the terms of the CPAL v1.0
    license, a copy of which has been included with this distribution in the
    LICENSE.txt file.

-->


<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:spring="http://www.springframework.org/schema/beans"
  xmlns:http="http://www.mulesoft.org/schema/mule/http"
  xmlns:quickbooks-windows="http://www.mulesoft.org/schema/mule/quickbooks-windows"
  xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
  xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
        http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.2/mule-scripting.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.0/mule-http.xsd
        http://www.mulesoft.org/schema/mule/quickbooks-windows http://www.mulesoft.org/schema/mule/quickbooks-windows/2.0/mule-quickbooks-windows.xsd">
        
    <http:connector name="connector.http.mule.default" enableCookies="true" keepAlive="true"/>
    
    <quickbooks-windows:config />

    <flow name="GetProfileByUrl">
        <description>Retrieves a single customer given its ID</description>
        <http:inbound-endpoint host="localhost" port="9093" path="getProfileByUrl"/>
        <quickbooks-windows:get-object realmId="${quickbooksRealmId}"
                                       appKey="${quickbooksAppKey}"
                                       realmIdPseudonym="${quickbooksRealmIdPseudonym}"
                                       authIdPseudonym="${quickbooksAuthIdPseudonym}" 
                                       type="CUSTOMER">
            <quickbooks-windows:id>
                <value>#[header:inbound:idCustomerValue]</value>
            </quickbooks-windows:id>
        </quickbooks-windows:get-object>
        <scripting:component>
            <scripting:script engine="groovy">
                <![CDATA[        
                String str = "";
                str += "Customer: " + payload.getId().getValue() + "\n";
                str += "   Name: " + (payload.getName() == null ? "N/A" : payload.getName()) + "\n";
                str += "   Given Name: " + (payload.getGivenName() == null ? "N/A" : payload.getGivenName())+ "\n";
                str += "   Middle Name: " + (payload.getMiddleName() == null ? "N/A" : payload.getMiddleName())+ "\n";
                str += "   Family Name: " + (payload.getFamilyName() == null ? "N/A" : payload.getFamilyName())+ "\n"
                str += "   Gender: " + (payload.getGender() == null ? "N/A": payload.getGender().getValue()) + "\n\n";
                                
                return str;      
                ]]>
            </scripting:script>
        </scripting:component>
    </flow>
    
    <flow name="SearchListOfCustomers">
        <description>Retrieves the list of customers created between two dates</description>
        <http:inbound-endpoint host="localhost" port="9093" path="searchListOfCustomers" />
        <quickbooks-windows:find-objects realmId="${quickbooksRealmId}"
                                         appKey="${quickbooksAppKey}"
                                         realmIdPseudonym="${quickbooksRealmIdPseudonym}"
                                         authIdPseudonym="${quickbooksAuthIdPseudonym}" 
                                         type="CUSTOMER">
            <quickbooks-windows:query>
                <startCreatedTMS>#[header:inbound:from]</startCreatedTMS>
                <endCreatedTMS>#[header:inbound:to]</endCreatedTMS>
            </quickbooks-windows:query>
        </quickbooks-windows:find-objects>
        <scripting:component>
            <scripting:script engine="groovy">
                <![CDATA[        
                String str = "";
                for(String aux : payload) {
                    str += "Customer: " + aux.getId().getValue() + "\n";
	                str += "   Name: " + aux.getName() == null ? "N/A" : aux.getName()+ "\n";
	                str += "   Given Name: " + aux.getGivenName() == null ? "N/A" : aux.getGivenName()+ "\n";
	                str += "   Middle Name: " + aux.getMiddleName() == null ? "N/A" : aux.getMiddleName()+ "\n";
	                str += "   Family Name: " + aux.getFamilyName() == null ? "N/A" : aux.getFamilyName()+ "\n"
	                str += "   Gender: " + (aux.getGender() == null ? "N/A": aux.getGender().getValue()) + "\n\n";
                }
                
                return str;      
                ]]>
            </scripting:script>
        </scripting:component>
    </flow>
    
    <flow name="GetAllCustomers">
        <description>Retrieves the full list of customers</description>
        <http:inbound-endpoint host="localhost" port="9093" path="getAllCustomers" />
        <quickbooks-windows:find-objects realmId="${quickbooksRealmId}"
                                         appKey="${quickbooksAppKey}"
                                         realmIdPseudonym="${quickbooksRealmIdPseudonym}"
                                         authIdPseudonym="${quickbooksAuthIdPseudonym}" 
                                         type="CUSTOMER" />
        <scripting:component>
            <scripting:script engine="groovy">
                <![CDATA[        
                String str = "";
                for(String aux : payload) {
	                str += "Customer: " + aux.getId().getValue() + "\n";
	                str += "   Name: " + (aux.getName() == null ? "N/A" : aux.getName()) + "\n";
	                str += "   Given Name: " + (aux.getGivenName() == null ? "N/A" : aux.getGivenName()) + "\n";
	                str += "   Middle Name: " + (aux.getMiddleName() == null ? "N/A" : aux.getMiddleName()) + "\n";
	                str += "   Family Name: " + (aux.getFamilyName() == null ? "N/A" : aux.getFamilyName()) + "\n"
	                str += "   Gender: " + (aux.getGender() == null ? "N/A": aux.getGender().getValue()) + "\n\n";
                }
                
                return str;      
                ]]>
            </scripting:script>
        </scripting:component>
    </flow>
</mule>
