/**
 * Mule QuickBooks Connector
 *
 * Copyright (c) MuleSoft, Inc.  All rights reserved.  http://www.mulesoft.com
 *
 * The software in this package is published under the terms of the CPAL v1.0
 * license, a copy of which has been included with this distribution in the
 * LICENSE.txt file.
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.03.19 at 02:46:29 PM ART 
//


package org.mule.modules.quickbooks.online.schema;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CCTxnTypeEnum.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="CCTxnTypeEnum">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Authorization"/>
 *     &lt;enumeration value="Capture"/>
 *     &lt;enumeration value="Charge"/>
 *     &lt;enumeration value="Refund"/>
 *     &lt;enumeration value="VoiceAuthorization"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "CCTxnTypeEnum")
@XmlEnum
public enum CCTxnTypeEnum {

    @XmlEnumValue("Authorization")
    AUTHORIZATION("Authorization"),
    @XmlEnumValue("Capture")
    CAPTURE("Capture"),
    @XmlEnumValue("Charge")
    CHARGE("Charge"),
    @XmlEnumValue("Refund")
    REFUND("Refund"),
    @XmlEnumValue("VoiceAuthorization")
    VOICE_AUTHORIZATION("VoiceAuthorization");
    private final String value;

    CCTxnTypeEnum(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CCTxnTypeEnum fromValue(String v) {
        for (CCTxnTypeEnum c: CCTxnTypeEnum.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
